<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>src/crypto/md5/md5block.go - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="../../../lib/godoc/style.css">

<script>window.initFuncs = [];</script>
<script src="../../../lib/godoc/jquery.js" defer></script>



<script>var goVersion = "go1.22.2";</script>
<script src="../../../lib/godoc/godocs.js" defer></script>
</head>
<body>

<div id='lowframe' style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="../../../index.html">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="../../../index.html">GoDoc</a></div>
<a href="md5block.go#" id="menu-button"><span id="menu-button-arrow">&#9661;</span></a>
<form method="GET" action="http://localhost:8080/search">
<div id="menu">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/><path d="M0 0h24v24H0z" fill="none"/></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide">
<div class="container">


  <h1>
    Source file
    <a href="http://localhost:8080/src">src</a>/<a href="http://localhost:8080/src/crypto">crypto</a>/<a href="http://localhost:8080/src/crypto/md5">md5</a>/<span class="text-muted">md5block.go</span>
  </h1>





  <h2>
    Documentation: <a href="http://localhost:8080/pkg/crypto/md5">crypto/md5</a>
  </h2>



<div id="nav"></div>


<script type='text/javascript'>document.ANALYSIS_DATA = null;</script>
<pre><span id="L1" class="ln">     1&nbsp;&nbsp;</span><span class="comment">// Copyright 2013 The Go Authors. All rights reserved.</span>
<span id="L2" class="ln">     2&nbsp;&nbsp;</span><span class="comment">// Use of this source code is governed by a BSD-style</span>
<span id="L3" class="ln">     3&nbsp;&nbsp;</span><span class="comment">// license that can be found in the LICENSE file.</span>
<span id="L4" class="ln">     4&nbsp;&nbsp;</span>
<span id="L5" class="ln">     5&nbsp;&nbsp;</span><span class="comment">// Code generated by go run gen.go -output md5block.go; DO NOT EDIT.</span>
<span id="L6" class="ln">     6&nbsp;&nbsp;</span>
<span id="L7" class="ln">     7&nbsp;&nbsp;</span>package md5
<span id="L8" class="ln">     8&nbsp;&nbsp;</span>
<span id="L9" class="ln">     9&nbsp;&nbsp;</span>import (
<span id="L10" class="ln">    10&nbsp;&nbsp;</span>	&#34;encoding/binary&#34;
<span id="L11" class="ln">    11&nbsp;&nbsp;</span>	&#34;math/bits&#34;
<span id="L12" class="ln">    12&nbsp;&nbsp;</span>)
<span id="L13" class="ln">    13&nbsp;&nbsp;</span>
<span id="L14" class="ln">    14&nbsp;&nbsp;</span>func blockGeneric(dig *digest, p []byte) {
<span id="L15" class="ln">    15&nbsp;&nbsp;</span>	<span class="comment">// load state</span>
<span id="L16" class="ln">    16&nbsp;&nbsp;</span>	a, b, c, d := dig.s[0], dig.s[1], dig.s[2], dig.s[3]
<span id="L17" class="ln">    17&nbsp;&nbsp;</span>
<span id="L18" class="ln">    18&nbsp;&nbsp;</span>	for i := 0; i &lt;= len(p)-BlockSize; i += BlockSize {
<span id="L19" class="ln">    19&nbsp;&nbsp;</span>		<span class="comment">// eliminate bounds checks on p</span>
<span id="L20" class="ln">    20&nbsp;&nbsp;</span>		q := p[i:]
<span id="L21" class="ln">    21&nbsp;&nbsp;</span>		q = q[:BlockSize:BlockSize]
<span id="L22" class="ln">    22&nbsp;&nbsp;</span>
<span id="L23" class="ln">    23&nbsp;&nbsp;</span>		<span class="comment">// save current state</span>
<span id="L24" class="ln">    24&nbsp;&nbsp;</span>		aa, bb, cc, dd := a, b, c, d
<span id="L25" class="ln">    25&nbsp;&nbsp;</span>
<span id="L26" class="ln">    26&nbsp;&nbsp;</span>		<span class="comment">// load input block</span>
<span id="L27" class="ln">    27&nbsp;&nbsp;</span>		x0 := binary.LittleEndian.Uint32(q[4*0x0:])
<span id="L28" class="ln">    28&nbsp;&nbsp;</span>		x1 := binary.LittleEndian.Uint32(q[4*0x1:])
<span id="L29" class="ln">    29&nbsp;&nbsp;</span>		x2 := binary.LittleEndian.Uint32(q[4*0x2:])
<span id="L30" class="ln">    30&nbsp;&nbsp;</span>		x3 := binary.LittleEndian.Uint32(q[4*0x3:])
<span id="L31" class="ln">    31&nbsp;&nbsp;</span>		x4 := binary.LittleEndian.Uint32(q[4*0x4:])
<span id="L32" class="ln">    32&nbsp;&nbsp;</span>		x5 := binary.LittleEndian.Uint32(q[4*0x5:])
<span id="L33" class="ln">    33&nbsp;&nbsp;</span>		x6 := binary.LittleEndian.Uint32(q[4*0x6:])
<span id="L34" class="ln">    34&nbsp;&nbsp;</span>		x7 := binary.LittleEndian.Uint32(q[4*0x7:])
<span id="L35" class="ln">    35&nbsp;&nbsp;</span>		x8 := binary.LittleEndian.Uint32(q[4*0x8:])
<span id="L36" class="ln">    36&nbsp;&nbsp;</span>		x9 := binary.LittleEndian.Uint32(q[4*0x9:])
<span id="L37" class="ln">    37&nbsp;&nbsp;</span>		xa := binary.LittleEndian.Uint32(q[4*0xa:])
<span id="L38" class="ln">    38&nbsp;&nbsp;</span>		xb := binary.LittleEndian.Uint32(q[4*0xb:])
<span id="L39" class="ln">    39&nbsp;&nbsp;</span>		xc := binary.LittleEndian.Uint32(q[4*0xc:])
<span id="L40" class="ln">    40&nbsp;&nbsp;</span>		xd := binary.LittleEndian.Uint32(q[4*0xd:])
<span id="L41" class="ln">    41&nbsp;&nbsp;</span>		xe := binary.LittleEndian.Uint32(q[4*0xe:])
<span id="L42" class="ln">    42&nbsp;&nbsp;</span>		xf := binary.LittleEndian.Uint32(q[4*0xf:])
<span id="L43" class="ln">    43&nbsp;&nbsp;</span>
<span id="L44" class="ln">    44&nbsp;&nbsp;</span>		<span class="comment">// round 1</span>
<span id="L45" class="ln">    45&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((c^d)&amp;b)^d)+a+x0+0xd76aa478, 7)
<span id="L46" class="ln">    46&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((b^c)&amp;a)^c)+d+x1+0xe8c7b756, 12)
<span id="L47" class="ln">    47&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((a^b)&amp;d)^b)+c+x2+0x242070db, 17)
<span id="L48" class="ln">    48&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((d^a)&amp;c)^a)+b+x3+0xc1bdceee, 22)
<span id="L49" class="ln">    49&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((c^d)&amp;b)^d)+a+x4+0xf57c0faf, 7)
<span id="L50" class="ln">    50&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((b^c)&amp;a)^c)+d+x5+0x4787c62a, 12)
<span id="L51" class="ln">    51&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((a^b)&amp;d)^b)+c+x6+0xa8304613, 17)
<span id="L52" class="ln">    52&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((d^a)&amp;c)^a)+b+x7+0xfd469501, 22)
<span id="L53" class="ln">    53&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((c^d)&amp;b)^d)+a+x8+0x698098d8, 7)
<span id="L54" class="ln">    54&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((b^c)&amp;a)^c)+d+x9+0x8b44f7af, 12)
<span id="L55" class="ln">    55&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((a^b)&amp;d)^b)+c+xa+0xffff5bb1, 17)
<span id="L56" class="ln">    56&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((d^a)&amp;c)^a)+b+xb+0x895cd7be, 22)
<span id="L57" class="ln">    57&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((c^d)&amp;b)^d)+a+xc+0x6b901122, 7)
<span id="L58" class="ln">    58&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((b^c)&amp;a)^c)+d+xd+0xfd987193, 12)
<span id="L59" class="ln">    59&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((a^b)&amp;d)^b)+c+xe+0xa679438e, 17)
<span id="L60" class="ln">    60&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((d^a)&amp;c)^a)+b+xf+0x49b40821, 22)
<span id="L61" class="ln">    61&nbsp;&nbsp;</span>
<span id="L62" class="ln">    62&nbsp;&nbsp;</span>		<span class="comment">// round 2</span>
<span id="L63" class="ln">    63&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((b^c)&amp;d)^c)+a+x1+0xf61e2562, 5)
<span id="L64" class="ln">    64&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((a^b)&amp;c)^b)+d+x6+0xc040b340, 9)
<span id="L65" class="ln">    65&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((d^a)&amp;b)^a)+c+xb+0x265e5a51, 14)
<span id="L66" class="ln">    66&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((c^d)&amp;a)^d)+b+x0+0xe9b6c7aa, 20)
<span id="L67" class="ln">    67&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((b^c)&amp;d)^c)+a+x5+0xd62f105d, 5)
<span id="L68" class="ln">    68&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((a^b)&amp;c)^b)+d+xa+0x02441453, 9)
<span id="L69" class="ln">    69&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((d^a)&amp;b)^a)+c+xf+0xd8a1e681, 14)
<span id="L70" class="ln">    70&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((c^d)&amp;a)^d)+b+x4+0xe7d3fbc8, 20)
<span id="L71" class="ln">    71&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((b^c)&amp;d)^c)+a+x9+0x21e1cde6, 5)
<span id="L72" class="ln">    72&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((a^b)&amp;c)^b)+d+xe+0xc33707d6, 9)
<span id="L73" class="ln">    73&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((d^a)&amp;b)^a)+c+x3+0xf4d50d87, 14)
<span id="L74" class="ln">    74&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((c^d)&amp;a)^d)+b+x8+0x455a14ed, 20)
<span id="L75" class="ln">    75&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((((b^c)&amp;d)^c)+a+xd+0xa9e3e905, 5)
<span id="L76" class="ln">    76&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((((a^b)&amp;c)^b)+d+x2+0xfcefa3f8, 9)
<span id="L77" class="ln">    77&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((((d^a)&amp;b)^a)+c+x7+0x676f02d9, 14)
<span id="L78" class="ln">    78&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((((c^d)&amp;a)^d)+b+xc+0x8d2a4c8a, 20)
<span id="L79" class="ln">    79&nbsp;&nbsp;</span>
<span id="L80" class="ln">    80&nbsp;&nbsp;</span>		<span class="comment">// round 3</span>
<span id="L81" class="ln">    81&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((b^c^d)+a+x5+0xfffa3942, 4)
<span id="L82" class="ln">    82&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((a^b^c)+d+x8+0x8771f681, 11)
<span id="L83" class="ln">    83&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((d^a^b)+c+xb+0x6d9d6122, 16)
<span id="L84" class="ln">    84&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((c^d^a)+b+xe+0xfde5380c, 23)
<span id="L85" class="ln">    85&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((b^c^d)+a+x1+0xa4beea44, 4)
<span id="L86" class="ln">    86&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((a^b^c)+d+x4+0x4bdecfa9, 11)
<span id="L87" class="ln">    87&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((d^a^b)+c+x7+0xf6bb4b60, 16)
<span id="L88" class="ln">    88&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((c^d^a)+b+xa+0xbebfbc70, 23)
<span id="L89" class="ln">    89&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((b^c^d)+a+xd+0x289b7ec6, 4)
<span id="L90" class="ln">    90&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((a^b^c)+d+x0+0xeaa127fa, 11)
<span id="L91" class="ln">    91&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((d^a^b)+c+x3+0xd4ef3085, 16)
<span id="L92" class="ln">    92&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((c^d^a)+b+x6+0x04881d05, 23)
<span id="L93" class="ln">    93&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((b^c^d)+a+x9+0xd9d4d039, 4)
<span id="L94" class="ln">    94&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((a^b^c)+d+xc+0xe6db99e5, 11)
<span id="L95" class="ln">    95&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((d^a^b)+c+xf+0x1fa27cf8, 16)
<span id="L96" class="ln">    96&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((c^d^a)+b+x2+0xc4ac5665, 23)
<span id="L97" class="ln">    97&nbsp;&nbsp;</span>
<span id="L98" class="ln">    98&nbsp;&nbsp;</span>		<span class="comment">// round 4</span>
<span id="L99" class="ln">    99&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((c^(b|^d))+a+x0+0xf4292244, 6)
<span id="L100" class="ln">   100&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((b^(a|^c))+d+x7+0x432aff97, 10)
<span id="L101" class="ln">   101&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((a^(d|^b))+c+xe+0xab9423a7, 15)
<span id="L102" class="ln">   102&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((d^(c|^a))+b+x5+0xfc93a039, 21)
<span id="L103" class="ln">   103&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((c^(b|^d))+a+xc+0x655b59c3, 6)
<span id="L104" class="ln">   104&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((b^(a|^c))+d+x3+0x8f0ccc92, 10)
<span id="L105" class="ln">   105&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((a^(d|^b))+c+xa+0xffeff47d, 15)
<span id="L106" class="ln">   106&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((d^(c|^a))+b+x1+0x85845dd1, 21)
<span id="L107" class="ln">   107&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((c^(b|^d))+a+x8+0x6fa87e4f, 6)
<span id="L108" class="ln">   108&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((b^(a|^c))+d+xf+0xfe2ce6e0, 10)
<span id="L109" class="ln">   109&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((a^(d|^b))+c+x6+0xa3014314, 15)
<span id="L110" class="ln">   110&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((d^(c|^a))+b+xd+0x4e0811a1, 21)
<span id="L111" class="ln">   111&nbsp;&nbsp;</span>		a = b + bits.RotateLeft32((c^(b|^d))+a+x4+0xf7537e82, 6)
<span id="L112" class="ln">   112&nbsp;&nbsp;</span>		d = a + bits.RotateLeft32((b^(a|^c))+d+xb+0xbd3af235, 10)
<span id="L113" class="ln">   113&nbsp;&nbsp;</span>		c = d + bits.RotateLeft32((a^(d|^b))+c+x2+0x2ad7d2bb, 15)
<span id="L114" class="ln">   114&nbsp;&nbsp;</span>		b = c + bits.RotateLeft32((d^(c|^a))+b+x9+0xeb86d391, 21)
<span id="L115" class="ln">   115&nbsp;&nbsp;</span>
<span id="L116" class="ln">   116&nbsp;&nbsp;</span>		<span class="comment">// add saved state</span>
<span id="L117" class="ln">   117&nbsp;&nbsp;</span>		a += aa
<span id="L118" class="ln">   118&nbsp;&nbsp;</span>		b += bb
<span id="L119" class="ln">   119&nbsp;&nbsp;</span>		c += cc
<span id="L120" class="ln">   120&nbsp;&nbsp;</span>		d += dd
<span id="L121" class="ln">   121&nbsp;&nbsp;</span>	}
<span id="L122" class="ln">   122&nbsp;&nbsp;</span>
<span id="L123" class="ln">   123&nbsp;&nbsp;</span>	<span class="comment">// save state</span>
<span id="L124" class="ln">   124&nbsp;&nbsp;</span>	dig.s[0], dig.s[1], dig.s[2], dig.s[3] = a, b, c, d
<span id="L125" class="ln">   125&nbsp;&nbsp;</span>}
<span id="L126" class="ln">   126&nbsp;&nbsp;</span>
</pre><p><a href="md5block.go?m=text">View as plain text</a></p>

<div id="footer">
Build version go1.22.2.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="http://localhost:8080/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->
</body>
</html>
