<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>src/debug/elf/elf.go - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="../../../lib/godoc/style.css">

<script>window.initFuncs = [];</script>
<script src="../../../lib/godoc/jquery.js" defer></script>



<script>var goVersion = "go1.22.2";</script>
<script src="../../../lib/godoc/godocs.js" defer></script>
</head>
<body>

<div id='lowframe' style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="../../../index.html">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="../../../index.html">GoDoc</a></div>
<a href="./elf.go?s=44662:44694#" id="menu-button"><span id="menu-button-arrow">&#9661;</span></a>
<form method="GET" action="http://localhost:8080/search">
<div id="menu">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/><path d="M0 0h24v24H0z" fill="none"/></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide">
<div class="container">


  <h1>
    Source file
    <a href="http://localhost:8080/src">src</a>/<a href="http://localhost:8080/src/debug">debug</a>/<a href="http://localhost:8080/src/debug/elf">elf</a>/<span class="text-muted">elf.go</span>
  </h1>





  <h2>
    Documentation: <a href="http://localhost:8080/pkg/debug/elf">debug/elf</a>
  </h2>



<div id="nav"></div>


<script type='text/javascript'>document.ANALYSIS_DATA = null;</script>
<pre><span id="L1" class="ln">     1&nbsp;&nbsp;</span><span class="comment">/*
<span id="L2" class="ln">     2&nbsp;&nbsp;</span> * ELF constants and data structures
<span id="L3" class="ln">     3&nbsp;&nbsp;</span> *
<span id="L4" class="ln">     4&nbsp;&nbsp;</span> * Derived from:
<span id="L5" class="ln">     5&nbsp;&nbsp;</span> * $FreeBSD: src/sys/sys/elf32.h,v 1.8.14.1 2005/12/30 22:13:58 marcel Exp $
<span id="L6" class="ln">     6&nbsp;&nbsp;</span> * $FreeBSD: src/sys/sys/elf64.h,v 1.10.14.1 2005/12/30 22:13:58 marcel Exp $
<span id="L7" class="ln">     7&nbsp;&nbsp;</span> * $FreeBSD: src/sys/sys/elf_common.h,v 1.15.8.1 2005/12/30 22:13:58 marcel Exp $
<span id="L8" class="ln">     8&nbsp;&nbsp;</span> * $FreeBSD: src/sys/alpha/include/elf.h,v 1.14 2003/09/25 01:10:22 peter Exp $
<span id="L9" class="ln">     9&nbsp;&nbsp;</span> * $FreeBSD: src/sys/amd64/include/elf.h,v 1.18 2004/08/03 08:21:48 dfr Exp $
<span id="L10" class="ln">    10&nbsp;&nbsp;</span> * $FreeBSD: src/sys/arm/include/elf.h,v 1.5.2.1 2006/06/30 21:42:52 cognet Exp $
<span id="L11" class="ln">    11&nbsp;&nbsp;</span> * $FreeBSD: src/sys/i386/include/elf.h,v 1.16 2004/08/02 19:12:17 dfr Exp $
<span id="L12" class="ln">    12&nbsp;&nbsp;</span> * $FreeBSD: src/sys/powerpc/include/elf.h,v 1.7 2004/11/02 09:47:01 ssouhlal Exp $
<span id="L13" class="ln">    13&nbsp;&nbsp;</span> * $FreeBSD: src/sys/sparc64/include/elf.h,v 1.12 2003/09/25 01:10:26 peter Exp $
<span id="L14" class="ln">    14&nbsp;&nbsp;</span> * &#34;System V ABI&#34; (http://www.sco.com/developers/gabi/latest/ch4.eheader.html)
<span id="L15" class="ln">    15&nbsp;&nbsp;</span> * &#34;ELF for the ARMÂ® 64-bit Architecture (AArch64)&#34; (ARM IHI 0056B)
<span id="L16" class="ln">    16&nbsp;&nbsp;</span> * &#34;RISC-V ELF psABI specification&#34; (https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc)
<span id="L17" class="ln">    17&nbsp;&nbsp;</span> * llvm/BinaryFormat/ELF.h - ELF constants and structures
<span id="L18" class="ln">    18&nbsp;&nbsp;</span> *
<span id="L19" class="ln">    19&nbsp;&nbsp;</span> * Copyright (c) 1996-1998 John D. Polstra.  All rights reserved.
<span id="L20" class="ln">    20&nbsp;&nbsp;</span> * Copyright (c) 2001 David E. O&#39;Brien
<span id="L21" class="ln">    21&nbsp;&nbsp;</span> * Portions Copyright 2009 The Go Authors. All rights reserved.
<span id="L22" class="ln">    22&nbsp;&nbsp;</span> *
<span id="L23" class="ln">    23&nbsp;&nbsp;</span> * Redistribution and use in source and binary forms, with or without
<span id="L24" class="ln">    24&nbsp;&nbsp;</span> * modification, are permitted provided that the following conditions
<span id="L25" class="ln">    25&nbsp;&nbsp;</span> * are met:
<span id="L26" class="ln">    26&nbsp;&nbsp;</span> * 1. Redistributions of source code must retain the above copyright
<span id="L27" class="ln">    27&nbsp;&nbsp;</span> *    notice, this list of conditions and the following disclaimer.
<span id="L28" class="ln">    28&nbsp;&nbsp;</span> * 2. Redistributions in binary form must reproduce the above copyright
<span id="L29" class="ln">    29&nbsp;&nbsp;</span> *    notice, this list of conditions and the following disclaimer in the
<span id="L30" class="ln">    30&nbsp;&nbsp;</span> *    documentation and/or other materials provided with the distribution.
<span id="L31" class="ln">    31&nbsp;&nbsp;</span> *
<span id="L32" class="ln">    32&nbsp;&nbsp;</span> * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS&#39;&#39; AND
<span id="L33" class="ln">    33&nbsp;&nbsp;</span> * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
<span id="L34" class="ln">    34&nbsp;&nbsp;</span> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
<span id="L35" class="ln">    35&nbsp;&nbsp;</span> * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
<span id="L36" class="ln">    36&nbsp;&nbsp;</span> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
<span id="L37" class="ln">    37&nbsp;&nbsp;</span> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
<span id="L38" class="ln">    38&nbsp;&nbsp;</span> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
<span id="L39" class="ln">    39&nbsp;&nbsp;</span> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
<span id="L40" class="ln">    40&nbsp;&nbsp;</span> * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
<span id="L41" class="ln">    41&nbsp;&nbsp;</span> * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
<span id="L42" class="ln">    42&nbsp;&nbsp;</span> * SUCH DAMAGE.
<span id="L43" class="ln">    43&nbsp;&nbsp;</span> */</span>
<span id="L44" class="ln">    44&nbsp;&nbsp;</span>
<span id="L45" class="ln">    45&nbsp;&nbsp;</span>package elf
<span id="L46" class="ln">    46&nbsp;&nbsp;</span>
<span id="L47" class="ln">    47&nbsp;&nbsp;</span>import &#34;strconv&#34;
<span id="L48" class="ln">    48&nbsp;&nbsp;</span>
<span id="L49" class="ln">    49&nbsp;&nbsp;</span><span class="comment">/*
<span id="L50" class="ln">    50&nbsp;&nbsp;</span> * Constants
<span id="L51" class="ln">    51&nbsp;&nbsp;</span> */</span>
<span id="L52" class="ln">    52&nbsp;&nbsp;</span>
<span id="L53" class="ln">    53&nbsp;&nbsp;</span><span class="comment">// Indexes into the Header.Ident array.</span>
<span id="L54" class="ln">    54&nbsp;&nbsp;</span>const (
<span id="L55" class="ln">    55&nbsp;&nbsp;</span>	EI_CLASS      = 4  <span class="comment">/* Class of machine. */</span>
<span id="L56" class="ln">    56&nbsp;&nbsp;</span>	EI_DATA       = 5  <span class="comment">/* Data format. */</span>
<span id="L57" class="ln">    57&nbsp;&nbsp;</span>	EI_VERSION    = 6  <span class="comment">/* ELF format version. */</span>
<span id="L58" class="ln">    58&nbsp;&nbsp;</span>	EI_OSABI      = 7  <span class="comment">/* Operating system / ABI identification */</span>
<span id="L59" class="ln">    59&nbsp;&nbsp;</span>	EI_ABIVERSION = 8  <span class="comment">/* ABI version */</span>
<span id="L60" class="ln">    60&nbsp;&nbsp;</span>	EI_PAD        = 9  <span class="comment">/* Start of padding (per SVR4 ABI). */</span>
<span id="L61" class="ln">    61&nbsp;&nbsp;</span>	EI_NIDENT     = 16 <span class="comment">/* Size of e_ident array. */</span>
<span id="L62" class="ln">    62&nbsp;&nbsp;</span>)
<span id="L63" class="ln">    63&nbsp;&nbsp;</span>
<span id="L64" class="ln">    64&nbsp;&nbsp;</span><span class="comment">// Initial magic number for ELF files.</span>
<span id="L65" class="ln">    65&nbsp;&nbsp;</span>const ELFMAG = &#34;\177ELF&#34;
<span id="L66" class="ln">    66&nbsp;&nbsp;</span>
<span id="L67" class="ln">    67&nbsp;&nbsp;</span><span class="comment">// Version is found in Header.Ident[EI_VERSION] and Header.Version.</span>
<span id="L68" class="ln">    68&nbsp;&nbsp;</span>type Version byte
<span id="L69" class="ln">    69&nbsp;&nbsp;</span>
<span id="L70" class="ln">    70&nbsp;&nbsp;</span>const (
<span id="L71" class="ln">    71&nbsp;&nbsp;</span>	EV_NONE    Version = 0
<span id="L72" class="ln">    72&nbsp;&nbsp;</span>	EV_CURRENT Version = 1
<span id="L73" class="ln">    73&nbsp;&nbsp;</span>)
<span id="L74" class="ln">    74&nbsp;&nbsp;</span>
<span id="L75" class="ln">    75&nbsp;&nbsp;</span>var versionStrings = []intName{
<span id="L76" class="ln">    76&nbsp;&nbsp;</span>	{0, &#34;EV_NONE&#34;},
<span id="L77" class="ln">    77&nbsp;&nbsp;</span>	{1, &#34;EV_CURRENT&#34;},
<span id="L78" class="ln">    78&nbsp;&nbsp;</span>}
<span id="L79" class="ln">    79&nbsp;&nbsp;</span>
<span id="L80" class="ln">    80&nbsp;&nbsp;</span>func (i Version) String() string   { return stringName(uint32(i), versionStrings, false) }
<span id="L81" class="ln">    81&nbsp;&nbsp;</span>func (i Version) GoString() string { return stringName(uint32(i), versionStrings, true) }
<span id="L82" class="ln">    82&nbsp;&nbsp;</span>
<span id="L83" class="ln">    83&nbsp;&nbsp;</span><span class="comment">// Class is found in Header.Ident[EI_CLASS] and Header.Class.</span>
<span id="L84" class="ln">    84&nbsp;&nbsp;</span>type Class byte
<span id="L85" class="ln">    85&nbsp;&nbsp;</span>
<span id="L86" class="ln">    86&nbsp;&nbsp;</span>const (
<span id="L87" class="ln">    87&nbsp;&nbsp;</span>	ELFCLASSNONE Class = 0 <span class="comment">/* Unknown class. */</span>
<span id="L88" class="ln">    88&nbsp;&nbsp;</span>	ELFCLASS32   Class = 1 <span class="comment">/* 32-bit architecture. */</span>
<span id="L89" class="ln">    89&nbsp;&nbsp;</span>	ELFCLASS64   Class = 2 <span class="comment">/* 64-bit architecture. */</span>
<span id="L90" class="ln">    90&nbsp;&nbsp;</span>)
<span id="L91" class="ln">    91&nbsp;&nbsp;</span>
<span id="L92" class="ln">    92&nbsp;&nbsp;</span>var classStrings = []intName{
<span id="L93" class="ln">    93&nbsp;&nbsp;</span>	{0, &#34;ELFCLASSNONE&#34;},
<span id="L94" class="ln">    94&nbsp;&nbsp;</span>	{1, &#34;ELFCLASS32&#34;},
<span id="L95" class="ln">    95&nbsp;&nbsp;</span>	{2, &#34;ELFCLASS64&#34;},
<span id="L96" class="ln">    96&nbsp;&nbsp;</span>}
<span id="L97" class="ln">    97&nbsp;&nbsp;</span>
<span id="L98" class="ln">    98&nbsp;&nbsp;</span>func (i Class) String() string   { return stringName(uint32(i), classStrings, false) }
<span id="L99" class="ln">    99&nbsp;&nbsp;</span>func (i Class) GoString() string { return stringName(uint32(i), classStrings, true) }
<span id="L100" class="ln">   100&nbsp;&nbsp;</span>
<span id="L101" class="ln">   101&nbsp;&nbsp;</span><span class="comment">// Data is found in Header.Ident[EI_DATA] and Header.Data.</span>
<span id="L102" class="ln">   102&nbsp;&nbsp;</span>type Data byte
<span id="L103" class="ln">   103&nbsp;&nbsp;</span>
<span id="L104" class="ln">   104&nbsp;&nbsp;</span>const (
<span id="L105" class="ln">   105&nbsp;&nbsp;</span>	ELFDATANONE Data = 0 <span class="comment">/* Unknown data format. */</span>
<span id="L106" class="ln">   106&nbsp;&nbsp;</span>	ELFDATA2LSB Data = 1 <span class="comment">/* 2&#39;s complement little-endian. */</span>
<span id="L107" class="ln">   107&nbsp;&nbsp;</span>	ELFDATA2MSB Data = 2 <span class="comment">/* 2&#39;s complement big-endian. */</span>
<span id="L108" class="ln">   108&nbsp;&nbsp;</span>)
<span id="L109" class="ln">   109&nbsp;&nbsp;</span>
<span id="L110" class="ln">   110&nbsp;&nbsp;</span>var dataStrings = []intName{
<span id="L111" class="ln">   111&nbsp;&nbsp;</span>	{0, &#34;ELFDATANONE&#34;},
<span id="L112" class="ln">   112&nbsp;&nbsp;</span>	{1, &#34;ELFDATA2LSB&#34;},
<span id="L113" class="ln">   113&nbsp;&nbsp;</span>	{2, &#34;ELFDATA2MSB&#34;},
<span id="L114" class="ln">   114&nbsp;&nbsp;</span>}
<span id="L115" class="ln">   115&nbsp;&nbsp;</span>
<span id="L116" class="ln">   116&nbsp;&nbsp;</span>func (i Data) String() string   { return stringName(uint32(i), dataStrings, false) }
<span id="L117" class="ln">   117&nbsp;&nbsp;</span>func (i Data) GoString() string { return stringName(uint32(i), dataStrings, true) }
<span id="L118" class="ln">   118&nbsp;&nbsp;</span>
<span id="L119" class="ln">   119&nbsp;&nbsp;</span><span class="comment">// OSABI is found in Header.Ident[EI_OSABI] and Header.OSABI.</span>
<span id="L120" class="ln">   120&nbsp;&nbsp;</span>type OSABI byte
<span id="L121" class="ln">   121&nbsp;&nbsp;</span>
<span id="L122" class="ln">   122&nbsp;&nbsp;</span>const (
<span id="L123" class="ln">   123&nbsp;&nbsp;</span>	ELFOSABI_NONE       OSABI = 0   <span class="comment">/* UNIX System V ABI */</span>
<span id="L124" class="ln">   124&nbsp;&nbsp;</span>	ELFOSABI_HPUX       OSABI = 1   <span class="comment">/* HP-UX operating system */</span>
<span id="L125" class="ln">   125&nbsp;&nbsp;</span>	ELFOSABI_NETBSD     OSABI = 2   <span class="comment">/* NetBSD */</span>
<span id="L126" class="ln">   126&nbsp;&nbsp;</span>	ELFOSABI_LINUX      OSABI = 3   <span class="comment">/* Linux */</span>
<span id="L127" class="ln">   127&nbsp;&nbsp;</span>	ELFOSABI_HURD       OSABI = 4   <span class="comment">/* Hurd */</span>
<span id="L128" class="ln">   128&nbsp;&nbsp;</span>	ELFOSABI_86OPEN     OSABI = 5   <span class="comment">/* 86Open common IA32 ABI */</span>
<span id="L129" class="ln">   129&nbsp;&nbsp;</span>	ELFOSABI_SOLARIS    OSABI = 6   <span class="comment">/* Solaris */</span>
<span id="L130" class="ln">   130&nbsp;&nbsp;</span>	ELFOSABI_AIX        OSABI = 7   <span class="comment">/* AIX */</span>
<span id="L131" class="ln">   131&nbsp;&nbsp;</span>	ELFOSABI_IRIX       OSABI = 8   <span class="comment">/* IRIX */</span>
<span id="L132" class="ln">   132&nbsp;&nbsp;</span>	ELFOSABI_FREEBSD    OSABI = 9   <span class="comment">/* FreeBSD */</span>
<span id="L133" class="ln">   133&nbsp;&nbsp;</span>	ELFOSABI_TRU64      OSABI = 10  <span class="comment">/* TRU64 UNIX */</span>
<span id="L134" class="ln">   134&nbsp;&nbsp;</span>	ELFOSABI_MODESTO    OSABI = 11  <span class="comment">/* Novell Modesto */</span>
<span id="L135" class="ln">   135&nbsp;&nbsp;</span>	ELFOSABI_OPENBSD    OSABI = 12  <span class="comment">/* OpenBSD */</span>
<span id="L136" class="ln">   136&nbsp;&nbsp;</span>	ELFOSABI_OPENVMS    OSABI = 13  <span class="comment">/* Open VMS */</span>
<span id="L137" class="ln">   137&nbsp;&nbsp;</span>	ELFOSABI_NSK        OSABI = 14  <span class="comment">/* HP Non-Stop Kernel */</span>
<span id="L138" class="ln">   138&nbsp;&nbsp;</span>	ELFOSABI_AROS       OSABI = 15  <span class="comment">/* Amiga Research OS */</span>
<span id="L139" class="ln">   139&nbsp;&nbsp;</span>	ELFOSABI_FENIXOS    OSABI = 16  <span class="comment">/* The FenixOS highly scalable multi-core OS */</span>
<span id="L140" class="ln">   140&nbsp;&nbsp;</span>	ELFOSABI_CLOUDABI   OSABI = 17  <span class="comment">/* Nuxi CloudABI */</span>
<span id="L141" class="ln">   141&nbsp;&nbsp;</span>	ELFOSABI_ARM        OSABI = 97  <span class="comment">/* ARM */</span>
<span id="L142" class="ln">   142&nbsp;&nbsp;</span>	ELFOSABI_STANDALONE OSABI = 255 <span class="comment">/* Standalone (embedded) application */</span>
<span id="L143" class="ln">   143&nbsp;&nbsp;</span>)
<span id="L144" class="ln">   144&nbsp;&nbsp;</span>
<span id="L145" class="ln">   145&nbsp;&nbsp;</span>var osabiStrings = []intName{
<span id="L146" class="ln">   146&nbsp;&nbsp;</span>	{0, &#34;ELFOSABI_NONE&#34;},
<span id="L147" class="ln">   147&nbsp;&nbsp;</span>	{1, &#34;ELFOSABI_HPUX&#34;},
<span id="L148" class="ln">   148&nbsp;&nbsp;</span>	{2, &#34;ELFOSABI_NETBSD&#34;},
<span id="L149" class="ln">   149&nbsp;&nbsp;</span>	{3, &#34;ELFOSABI_LINUX&#34;},
<span id="L150" class="ln">   150&nbsp;&nbsp;</span>	{4, &#34;ELFOSABI_HURD&#34;},
<span id="L151" class="ln">   151&nbsp;&nbsp;</span>	{5, &#34;ELFOSABI_86OPEN&#34;},
<span id="L152" class="ln">   152&nbsp;&nbsp;</span>	{6, &#34;ELFOSABI_SOLARIS&#34;},
<span id="L153" class="ln">   153&nbsp;&nbsp;</span>	{7, &#34;ELFOSABI_AIX&#34;},
<span id="L154" class="ln">   154&nbsp;&nbsp;</span>	{8, &#34;ELFOSABI_IRIX&#34;},
<span id="L155" class="ln">   155&nbsp;&nbsp;</span>	{9, &#34;ELFOSABI_FREEBSD&#34;},
<span id="L156" class="ln">   156&nbsp;&nbsp;</span>	{10, &#34;ELFOSABI_TRU64&#34;},
<span id="L157" class="ln">   157&nbsp;&nbsp;</span>	{11, &#34;ELFOSABI_MODESTO&#34;},
<span id="L158" class="ln">   158&nbsp;&nbsp;</span>	{12, &#34;ELFOSABI_OPENBSD&#34;},
<span id="L159" class="ln">   159&nbsp;&nbsp;</span>	{13, &#34;ELFOSABI_OPENVMS&#34;},
<span id="L160" class="ln">   160&nbsp;&nbsp;</span>	{14, &#34;ELFOSABI_NSK&#34;},
<span id="L161" class="ln">   161&nbsp;&nbsp;</span>	{15, &#34;ELFOSABI_AROS&#34;},
<span id="L162" class="ln">   162&nbsp;&nbsp;</span>	{16, &#34;ELFOSABI_FENIXOS&#34;},
<span id="L163" class="ln">   163&nbsp;&nbsp;</span>	{17, &#34;ELFOSABI_CLOUDABI&#34;},
<span id="L164" class="ln">   164&nbsp;&nbsp;</span>	{97, &#34;ELFOSABI_ARM&#34;},
<span id="L165" class="ln">   165&nbsp;&nbsp;</span>	{255, &#34;ELFOSABI_STANDALONE&#34;},
<span id="L166" class="ln">   166&nbsp;&nbsp;</span>}
<span id="L167" class="ln">   167&nbsp;&nbsp;</span>
<span id="L168" class="ln">   168&nbsp;&nbsp;</span>func (i OSABI) String() string   { return stringName(uint32(i), osabiStrings, false) }
<span id="L169" class="ln">   169&nbsp;&nbsp;</span>func (i OSABI) GoString() string { return stringName(uint32(i), osabiStrings, true) }
<span id="L170" class="ln">   170&nbsp;&nbsp;</span>
<span id="L171" class="ln">   171&nbsp;&nbsp;</span><span class="comment">// Type is found in Header.Type.</span>
<span id="L172" class="ln">   172&nbsp;&nbsp;</span>type Type uint16
<span id="L173" class="ln">   173&nbsp;&nbsp;</span>
<span id="L174" class="ln">   174&nbsp;&nbsp;</span>const (
<span id="L175" class="ln">   175&nbsp;&nbsp;</span>	ET_NONE   Type = 0      <span class="comment">/* Unknown type. */</span>
<span id="L176" class="ln">   176&nbsp;&nbsp;</span>	ET_REL    Type = 1      <span class="comment">/* Relocatable. */</span>
<span id="L177" class="ln">   177&nbsp;&nbsp;</span>	ET_EXEC   Type = 2      <span class="comment">/* Executable. */</span>
<span id="L178" class="ln">   178&nbsp;&nbsp;</span>	ET_DYN    Type = 3      <span class="comment">/* Shared object. */</span>
<span id="L179" class="ln">   179&nbsp;&nbsp;</span>	ET_CORE   Type = 4      <span class="comment">/* Core file. */</span>
<span id="L180" class="ln">   180&nbsp;&nbsp;</span>	ET_LOOS   Type = 0xfe00 <span class="comment">/* First operating system specific. */</span>
<span id="L181" class="ln">   181&nbsp;&nbsp;</span>	ET_HIOS   Type = 0xfeff <span class="comment">/* Last operating system-specific. */</span>
<span id="L182" class="ln">   182&nbsp;&nbsp;</span>	ET_LOPROC Type = 0xff00 <span class="comment">/* First processor-specific. */</span>
<span id="L183" class="ln">   183&nbsp;&nbsp;</span>	ET_HIPROC Type = 0xffff <span class="comment">/* Last processor-specific. */</span>
<span id="L184" class="ln">   184&nbsp;&nbsp;</span>)
<span id="L185" class="ln">   185&nbsp;&nbsp;</span>
<span id="L186" class="ln">   186&nbsp;&nbsp;</span>var typeStrings = []intName{
<span id="L187" class="ln">   187&nbsp;&nbsp;</span>	{0, &#34;ET_NONE&#34;},
<span id="L188" class="ln">   188&nbsp;&nbsp;</span>	{1, &#34;ET_REL&#34;},
<span id="L189" class="ln">   189&nbsp;&nbsp;</span>	{2, &#34;ET_EXEC&#34;},
<span id="L190" class="ln">   190&nbsp;&nbsp;</span>	{3, &#34;ET_DYN&#34;},
<span id="L191" class="ln">   191&nbsp;&nbsp;</span>	{4, &#34;ET_CORE&#34;},
<span id="L192" class="ln">   192&nbsp;&nbsp;</span>	{0xfe00, &#34;ET_LOOS&#34;},
<span id="L193" class="ln">   193&nbsp;&nbsp;</span>	{0xfeff, &#34;ET_HIOS&#34;},
<span id="L194" class="ln">   194&nbsp;&nbsp;</span>	{0xff00, &#34;ET_LOPROC&#34;},
<span id="L195" class="ln">   195&nbsp;&nbsp;</span>	{0xffff, &#34;ET_HIPROC&#34;},
<span id="L196" class="ln">   196&nbsp;&nbsp;</span>}
<span id="L197" class="ln">   197&nbsp;&nbsp;</span>
<span id="L198" class="ln">   198&nbsp;&nbsp;</span>func (i Type) String() string   { return stringName(uint32(i), typeStrings, false) }
<span id="L199" class="ln">   199&nbsp;&nbsp;</span>func (i Type) GoString() string { return stringName(uint32(i), typeStrings, true) }
<span id="L200" class="ln">   200&nbsp;&nbsp;</span>
<span id="L201" class="ln">   201&nbsp;&nbsp;</span><span class="comment">// Machine is found in Header.Machine.</span>
<span id="L202" class="ln">   202&nbsp;&nbsp;</span>type Machine uint16
<span id="L203" class="ln">   203&nbsp;&nbsp;</span>
<span id="L204" class="ln">   204&nbsp;&nbsp;</span>const (
<span id="L205" class="ln">   205&nbsp;&nbsp;</span>	EM_NONE          Machine = 0   <span class="comment">/* Unknown machine. */</span>
<span id="L206" class="ln">   206&nbsp;&nbsp;</span>	EM_M32           Machine = 1   <span class="comment">/* AT&amp;T WE32100. */</span>
<span id="L207" class="ln">   207&nbsp;&nbsp;</span>	EM_SPARC         Machine = 2   <span class="comment">/* Sun SPARC. */</span>
<span id="L208" class="ln">   208&nbsp;&nbsp;</span>	EM_386           Machine = 3   <span class="comment">/* Intel i386. */</span>
<span id="L209" class="ln">   209&nbsp;&nbsp;</span>	EM_68K           Machine = 4   <span class="comment">/* Motorola 68000. */</span>
<span id="L210" class="ln">   210&nbsp;&nbsp;</span>	EM_88K           Machine = 5   <span class="comment">/* Motorola 88000. */</span>
<span id="L211" class="ln">   211&nbsp;&nbsp;</span>	EM_860           Machine = 7   <span class="comment">/* Intel i860. */</span>
<span id="L212" class="ln">   212&nbsp;&nbsp;</span>	EM_MIPS          Machine = 8   <span class="comment">/* MIPS R3000 Big-Endian only. */</span>
<span id="L213" class="ln">   213&nbsp;&nbsp;</span>	EM_S370          Machine = 9   <span class="comment">/* IBM System/370. */</span>
<span id="L214" class="ln">   214&nbsp;&nbsp;</span>	EM_MIPS_RS3_LE   Machine = 10  <span class="comment">/* MIPS R3000 Little-Endian. */</span>
<span id="L215" class="ln">   215&nbsp;&nbsp;</span>	EM_PARISC        Machine = 15  <span class="comment">/* HP PA-RISC. */</span>
<span id="L216" class="ln">   216&nbsp;&nbsp;</span>	EM_VPP500        Machine = 17  <span class="comment">/* Fujitsu VPP500. */</span>
<span id="L217" class="ln">   217&nbsp;&nbsp;</span>	EM_SPARC32PLUS   Machine = 18  <span class="comment">/* SPARC v8plus. */</span>
<span id="L218" class="ln">   218&nbsp;&nbsp;</span>	EM_960           Machine = 19  <span class="comment">/* Intel 80960. */</span>
<span id="L219" class="ln">   219&nbsp;&nbsp;</span>	EM_PPC           Machine = 20  <span class="comment">/* PowerPC 32-bit. */</span>
<span id="L220" class="ln">   220&nbsp;&nbsp;</span>	EM_PPC64         Machine = 21  <span class="comment">/* PowerPC 64-bit. */</span>
<span id="L221" class="ln">   221&nbsp;&nbsp;</span>	EM_S390          Machine = 22  <span class="comment">/* IBM System/390. */</span>
<span id="L222" class="ln">   222&nbsp;&nbsp;</span>	EM_V800          Machine = 36  <span class="comment">/* NEC V800. */</span>
<span id="L223" class="ln">   223&nbsp;&nbsp;</span>	EM_FR20          Machine = 37  <span class="comment">/* Fujitsu FR20. */</span>
<span id="L224" class="ln">   224&nbsp;&nbsp;</span>	EM_RH32          Machine = 38  <span class="comment">/* TRW RH-32. */</span>
<span id="L225" class="ln">   225&nbsp;&nbsp;</span>	EM_RCE           Machine = 39  <span class="comment">/* Motorola RCE. */</span>
<span id="L226" class="ln">   226&nbsp;&nbsp;</span>	EM_ARM           Machine = 40  <span class="comment">/* ARM. */</span>
<span id="L227" class="ln">   227&nbsp;&nbsp;</span>	EM_SH            Machine = 42  <span class="comment">/* Hitachi SH. */</span>
<span id="L228" class="ln">   228&nbsp;&nbsp;</span>	EM_SPARCV9       Machine = 43  <span class="comment">/* SPARC v9 64-bit. */</span>
<span id="L229" class="ln">   229&nbsp;&nbsp;</span>	EM_TRICORE       Machine = 44  <span class="comment">/* Siemens TriCore embedded processor. */</span>
<span id="L230" class="ln">   230&nbsp;&nbsp;</span>	EM_ARC           Machine = 45  <span class="comment">/* Argonaut RISC Core. */</span>
<span id="L231" class="ln">   231&nbsp;&nbsp;</span>	EM_H8_300        Machine = 46  <span class="comment">/* Hitachi H8/300. */</span>
<span id="L232" class="ln">   232&nbsp;&nbsp;</span>	EM_H8_300H       Machine = 47  <span class="comment">/* Hitachi H8/300H. */</span>
<span id="L233" class="ln">   233&nbsp;&nbsp;</span>	EM_H8S           Machine = 48  <span class="comment">/* Hitachi H8S. */</span>
<span id="L234" class="ln">   234&nbsp;&nbsp;</span>	EM_H8_500        Machine = 49  <span class="comment">/* Hitachi H8/500. */</span>
<span id="L235" class="ln">   235&nbsp;&nbsp;</span>	EM_IA_64         Machine = 50  <span class="comment">/* Intel IA-64 Processor. */</span>
<span id="L236" class="ln">   236&nbsp;&nbsp;</span>	EM_MIPS_X        Machine = 51  <span class="comment">/* Stanford MIPS-X. */</span>
<span id="L237" class="ln">   237&nbsp;&nbsp;</span>	EM_COLDFIRE      Machine = 52  <span class="comment">/* Motorola ColdFire. */</span>
<span id="L238" class="ln">   238&nbsp;&nbsp;</span>	EM_68HC12        Machine = 53  <span class="comment">/* Motorola M68HC12. */</span>
<span id="L239" class="ln">   239&nbsp;&nbsp;</span>	EM_MMA           Machine = 54  <span class="comment">/* Fujitsu MMA. */</span>
<span id="L240" class="ln">   240&nbsp;&nbsp;</span>	EM_PCP           Machine = 55  <span class="comment">/* Siemens PCP. */</span>
<span id="L241" class="ln">   241&nbsp;&nbsp;</span>	EM_NCPU          Machine = 56  <span class="comment">/* Sony nCPU. */</span>
<span id="L242" class="ln">   242&nbsp;&nbsp;</span>	EM_NDR1          Machine = 57  <span class="comment">/* Denso NDR1 microprocessor. */</span>
<span id="L243" class="ln">   243&nbsp;&nbsp;</span>	EM_STARCORE      Machine = 58  <span class="comment">/* Motorola Star*Core processor. */</span>
<span id="L244" class="ln">   244&nbsp;&nbsp;</span>	EM_ME16          Machine = 59  <span class="comment">/* Toyota ME16 processor. */</span>
<span id="L245" class="ln">   245&nbsp;&nbsp;</span>	EM_ST100         Machine = 60  <span class="comment">/* STMicroelectronics ST100 processor. */</span>
<span id="L246" class="ln">   246&nbsp;&nbsp;</span>	EM_TINYJ         Machine = 61  <span class="comment">/* Advanced Logic Corp. TinyJ processor. */</span>
<span id="L247" class="ln">   247&nbsp;&nbsp;</span>	EM_X86_64        Machine = 62  <span class="comment">/* Advanced Micro Devices x86-64 */</span>
<span id="L248" class="ln">   248&nbsp;&nbsp;</span>	EM_PDSP          Machine = 63  <span class="comment">/* Sony DSP Processor */</span>
<span id="L249" class="ln">   249&nbsp;&nbsp;</span>	EM_PDP10         Machine = 64  <span class="comment">/* Digital Equipment Corp. PDP-10 */</span>
<span id="L250" class="ln">   250&nbsp;&nbsp;</span>	EM_PDP11         Machine = 65  <span class="comment">/* Digital Equipment Corp. PDP-11 */</span>
<span id="L251" class="ln">   251&nbsp;&nbsp;</span>	EM_FX66          Machine = 66  <span class="comment">/* Siemens FX66 microcontroller */</span>
<span id="L252" class="ln">   252&nbsp;&nbsp;</span>	EM_ST9PLUS       Machine = 67  <span class="comment">/* STMicroelectronics ST9+ 8/16 bit microcontroller */</span>
<span id="L253" class="ln">   253&nbsp;&nbsp;</span>	EM_ST7           Machine = 68  <span class="comment">/* STMicroelectronics ST7 8-bit microcontroller */</span>
<span id="L254" class="ln">   254&nbsp;&nbsp;</span>	EM_68HC16        Machine = 69  <span class="comment">/* Motorola MC68HC16 Microcontroller */</span>
<span id="L255" class="ln">   255&nbsp;&nbsp;</span>	EM_68HC11        Machine = 70  <span class="comment">/* Motorola MC68HC11 Microcontroller */</span>
<span id="L256" class="ln">   256&nbsp;&nbsp;</span>	EM_68HC08        Machine = 71  <span class="comment">/* Motorola MC68HC08 Microcontroller */</span>
<span id="L257" class="ln">   257&nbsp;&nbsp;</span>	EM_68HC05        Machine = 72  <span class="comment">/* Motorola MC68HC05 Microcontroller */</span>
<span id="L258" class="ln">   258&nbsp;&nbsp;</span>	EM_SVX           Machine = 73  <span class="comment">/* Silicon Graphics SVx */</span>
<span id="L259" class="ln">   259&nbsp;&nbsp;</span>	EM_ST19          Machine = 74  <span class="comment">/* STMicroelectronics ST19 8-bit microcontroller */</span>
<span id="L260" class="ln">   260&nbsp;&nbsp;</span>	EM_VAX           Machine = 75  <span class="comment">/* Digital VAX */</span>
<span id="L261" class="ln">   261&nbsp;&nbsp;</span>	EM_CRIS          Machine = 76  <span class="comment">/* Axis Communications 32-bit embedded processor */</span>
<span id="L262" class="ln">   262&nbsp;&nbsp;</span>	EM_JAVELIN       Machine = 77  <span class="comment">/* Infineon Technologies 32-bit embedded processor */</span>
<span id="L263" class="ln">   263&nbsp;&nbsp;</span>	EM_FIREPATH      Machine = 78  <span class="comment">/* Element 14 64-bit DSP Processor */</span>
<span id="L264" class="ln">   264&nbsp;&nbsp;</span>	EM_ZSP           Machine = 79  <span class="comment">/* LSI Logic 16-bit DSP Processor */</span>
<span id="L265" class="ln">   265&nbsp;&nbsp;</span>	EM_MMIX          Machine = 80  <span class="comment">/* Donald Knuth&#39;s educational 64-bit processor */</span>
<span id="L266" class="ln">   266&nbsp;&nbsp;</span>	EM_HUANY         Machine = 81  <span class="comment">/* Harvard University machine-independent object files */</span>
<span id="L267" class="ln">   267&nbsp;&nbsp;</span>	EM_PRISM         Machine = 82  <span class="comment">/* SiTera Prism */</span>
<span id="L268" class="ln">   268&nbsp;&nbsp;</span>	EM_AVR           Machine = 83  <span class="comment">/* Atmel AVR 8-bit microcontroller */</span>
<span id="L269" class="ln">   269&nbsp;&nbsp;</span>	EM_FR30          Machine = 84  <span class="comment">/* Fujitsu FR30 */</span>
<span id="L270" class="ln">   270&nbsp;&nbsp;</span>	EM_D10V          Machine = 85  <span class="comment">/* Mitsubishi D10V */</span>
<span id="L271" class="ln">   271&nbsp;&nbsp;</span>	EM_D30V          Machine = 86  <span class="comment">/* Mitsubishi D30V */</span>
<span id="L272" class="ln">   272&nbsp;&nbsp;</span>	EM_V850          Machine = 87  <span class="comment">/* NEC v850 */</span>
<span id="L273" class="ln">   273&nbsp;&nbsp;</span>	EM_M32R          Machine = 88  <span class="comment">/* Mitsubishi M32R */</span>
<span id="L274" class="ln">   274&nbsp;&nbsp;</span>	EM_MN10300       Machine = 89  <span class="comment">/* Matsushita MN10300 */</span>
<span id="L275" class="ln">   275&nbsp;&nbsp;</span>	EM_MN10200       Machine = 90  <span class="comment">/* Matsushita MN10200 */</span>
<span id="L276" class="ln">   276&nbsp;&nbsp;</span>	EM_PJ            Machine = 91  <span class="comment">/* picoJava */</span>
<span id="L277" class="ln">   277&nbsp;&nbsp;</span>	EM_OPENRISC      Machine = 92  <span class="comment">/* OpenRISC 32-bit embedded processor */</span>
<span id="L278" class="ln">   278&nbsp;&nbsp;</span>	EM_ARC_COMPACT   Machine = 93  <span class="comment">/* ARC International ARCompact processor (old spelling/synonym: EM_ARC_A5) */</span>
<span id="L279" class="ln">   279&nbsp;&nbsp;</span>	EM_XTENSA        Machine = 94  <span class="comment">/* Tensilica Xtensa Architecture */</span>
<span id="L280" class="ln">   280&nbsp;&nbsp;</span>	EM_VIDEOCORE     Machine = 95  <span class="comment">/* Alphamosaic VideoCore processor */</span>
<span id="L281" class="ln">   281&nbsp;&nbsp;</span>	EM_TMM_GPP       Machine = 96  <span class="comment">/* Thompson Multimedia General Purpose Processor */</span>
<span id="L282" class="ln">   282&nbsp;&nbsp;</span>	EM_NS32K         Machine = 97  <span class="comment">/* National Semiconductor 32000 series */</span>
<span id="L283" class="ln">   283&nbsp;&nbsp;</span>	EM_TPC           Machine = 98  <span class="comment">/* Tenor Network TPC processor */</span>
<span id="L284" class="ln">   284&nbsp;&nbsp;</span>	EM_SNP1K         Machine = 99  <span class="comment">/* Trebia SNP 1000 processor */</span>
<span id="L285" class="ln">   285&nbsp;&nbsp;</span>	EM_ST200         Machine = 100 <span class="comment">/* STMicroelectronics (www.st.com) ST200 microcontroller */</span>
<span id="L286" class="ln">   286&nbsp;&nbsp;</span>	EM_IP2K          Machine = 101 <span class="comment">/* Ubicom IP2xxx microcontroller family */</span>
<span id="L287" class="ln">   287&nbsp;&nbsp;</span>	EM_MAX           Machine = 102 <span class="comment">/* MAX Processor */</span>
<span id="L288" class="ln">   288&nbsp;&nbsp;</span>	EM_CR            Machine = 103 <span class="comment">/* National Semiconductor CompactRISC microprocessor */</span>
<span id="L289" class="ln">   289&nbsp;&nbsp;</span>	EM_F2MC16        Machine = 104 <span class="comment">/* Fujitsu F2MC16 */</span>
<span id="L290" class="ln">   290&nbsp;&nbsp;</span>	EM_MSP430        Machine = 105 <span class="comment">/* Texas Instruments embedded microcontroller msp430 */</span>
<span id="L291" class="ln">   291&nbsp;&nbsp;</span>	EM_BLACKFIN      Machine = 106 <span class="comment">/* Analog Devices Blackfin (DSP) processor */</span>
<span id="L292" class="ln">   292&nbsp;&nbsp;</span>	EM_SE_C33        Machine = 107 <span class="comment">/* S1C33 Family of Seiko Epson processors */</span>
<span id="L293" class="ln">   293&nbsp;&nbsp;</span>	EM_SEP           Machine = 108 <span class="comment">/* Sharp embedded microprocessor */</span>
<span id="L294" class="ln">   294&nbsp;&nbsp;</span>	EM_ARCA          Machine = 109 <span class="comment">/* Arca RISC Microprocessor */</span>
<span id="L295" class="ln">   295&nbsp;&nbsp;</span>	EM_UNICORE       Machine = 110 <span class="comment">/* Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University */</span>
<span id="L296" class="ln">   296&nbsp;&nbsp;</span>	EM_EXCESS        Machine = 111 <span class="comment">/* eXcess: 16/32/64-bit configurable embedded CPU */</span>
<span id="L297" class="ln">   297&nbsp;&nbsp;</span>	EM_DXP           Machine = 112 <span class="comment">/* Icera Semiconductor Inc. Deep Execution Processor */</span>
<span id="L298" class="ln">   298&nbsp;&nbsp;</span>	EM_ALTERA_NIOS2  Machine = 113 <span class="comment">/* Altera Nios II soft-core processor */</span>
<span id="L299" class="ln">   299&nbsp;&nbsp;</span>	EM_CRX           Machine = 114 <span class="comment">/* National Semiconductor CompactRISC CRX microprocessor */</span>
<span id="L300" class="ln">   300&nbsp;&nbsp;</span>	EM_XGATE         Machine = 115 <span class="comment">/* Motorola XGATE embedded processor */</span>
<span id="L301" class="ln">   301&nbsp;&nbsp;</span>	EM_C166          Machine = 116 <span class="comment">/* Infineon C16x/XC16x processor */</span>
<span id="L302" class="ln">   302&nbsp;&nbsp;</span>	EM_M16C          Machine = 117 <span class="comment">/* Renesas M16C series microprocessors */</span>
<span id="L303" class="ln">   303&nbsp;&nbsp;</span>	EM_DSPIC30F      Machine = 118 <span class="comment">/* Microchip Technology dsPIC30F Digital Signal Controller */</span>
<span id="L304" class="ln">   304&nbsp;&nbsp;</span>	EM_CE            Machine = 119 <span class="comment">/* Freescale Communication Engine RISC core */</span>
<span id="L305" class="ln">   305&nbsp;&nbsp;</span>	EM_M32C          Machine = 120 <span class="comment">/* Renesas M32C series microprocessors */</span>
<span id="L306" class="ln">   306&nbsp;&nbsp;</span>	EM_TSK3000       Machine = 131 <span class="comment">/* Altium TSK3000 core */</span>
<span id="L307" class="ln">   307&nbsp;&nbsp;</span>	EM_RS08          Machine = 132 <span class="comment">/* Freescale RS08 embedded processor */</span>
<span id="L308" class="ln">   308&nbsp;&nbsp;</span>	EM_SHARC         Machine = 133 <span class="comment">/* Analog Devices SHARC family of 32-bit DSP processors */</span>
<span id="L309" class="ln">   309&nbsp;&nbsp;</span>	EM_ECOG2         Machine = 134 <span class="comment">/* Cyan Technology eCOG2 microprocessor */</span>
<span id="L310" class="ln">   310&nbsp;&nbsp;</span>	EM_SCORE7        Machine = 135 <span class="comment">/* Sunplus S+core7 RISC processor */</span>
<span id="L311" class="ln">   311&nbsp;&nbsp;</span>	EM_DSP24         Machine = 136 <span class="comment">/* New Japan Radio (NJR) 24-bit DSP Processor */</span>
<span id="L312" class="ln">   312&nbsp;&nbsp;</span>	EM_VIDEOCORE3    Machine = 137 <span class="comment">/* Broadcom VideoCore III processor */</span>
<span id="L313" class="ln">   313&nbsp;&nbsp;</span>	EM_LATTICEMICO32 Machine = 138 <span class="comment">/* RISC processor for Lattice FPGA architecture */</span>
<span id="L314" class="ln">   314&nbsp;&nbsp;</span>	EM_SE_C17        Machine = 139 <span class="comment">/* Seiko Epson C17 family */</span>
<span id="L315" class="ln">   315&nbsp;&nbsp;</span>	EM_TI_C6000      Machine = 140 <span class="comment">/* The Texas Instruments TMS320C6000 DSP family */</span>
<span id="L316" class="ln">   316&nbsp;&nbsp;</span>	EM_TI_C2000      Machine = 141 <span class="comment">/* The Texas Instruments TMS320C2000 DSP family */</span>
<span id="L317" class="ln">   317&nbsp;&nbsp;</span>	EM_TI_C5500      Machine = 142 <span class="comment">/* The Texas Instruments TMS320C55x DSP family */</span>
<span id="L318" class="ln">   318&nbsp;&nbsp;</span>	EM_TI_ARP32      Machine = 143 <span class="comment">/* Texas Instruments Application Specific RISC Processor, 32bit fetch */</span>
<span id="L319" class="ln">   319&nbsp;&nbsp;</span>	EM_TI_PRU        Machine = 144 <span class="comment">/* Texas Instruments Programmable Realtime Unit */</span>
<span id="L320" class="ln">   320&nbsp;&nbsp;</span>	EM_MMDSP_PLUS    Machine = 160 <span class="comment">/* STMicroelectronics 64bit VLIW Data Signal Processor */</span>
<span id="L321" class="ln">   321&nbsp;&nbsp;</span>	EM_CYPRESS_M8C   Machine = 161 <span class="comment">/* Cypress M8C microprocessor */</span>
<span id="L322" class="ln">   322&nbsp;&nbsp;</span>	EM_R32C          Machine = 162 <span class="comment">/* Renesas R32C series microprocessors */</span>
<span id="L323" class="ln">   323&nbsp;&nbsp;</span>	EM_TRIMEDIA      Machine = 163 <span class="comment">/* NXP Semiconductors TriMedia architecture family */</span>
<span id="L324" class="ln">   324&nbsp;&nbsp;</span>	EM_QDSP6         Machine = 164 <span class="comment">/* QUALCOMM DSP6 Processor */</span>
<span id="L325" class="ln">   325&nbsp;&nbsp;</span>	EM_8051          Machine = 165 <span class="comment">/* Intel 8051 and variants */</span>
<span id="L326" class="ln">   326&nbsp;&nbsp;</span>	EM_STXP7X        Machine = 166 <span class="comment">/* STMicroelectronics STxP7x family of configurable and extensible RISC processors */</span>
<span id="L327" class="ln">   327&nbsp;&nbsp;</span>	EM_NDS32         Machine = 167 <span class="comment">/* Andes Technology compact code size embedded RISC processor family */</span>
<span id="L328" class="ln">   328&nbsp;&nbsp;</span>	EM_ECOG1         Machine = 168 <span class="comment">/* Cyan Technology eCOG1X family */</span>
<span id="L329" class="ln">   329&nbsp;&nbsp;</span>	EM_ECOG1X        Machine = 168 <span class="comment">/* Cyan Technology eCOG1X family */</span>
<span id="L330" class="ln">   330&nbsp;&nbsp;</span>	EM_MAXQ30        Machine = 169 <span class="comment">/* Dallas Semiconductor MAXQ30 Core Micro-controllers */</span>
<span id="L331" class="ln">   331&nbsp;&nbsp;</span>	EM_XIMO16        Machine = 170 <span class="comment">/* New Japan Radio (NJR) 16-bit DSP Processor */</span>
<span id="L332" class="ln">   332&nbsp;&nbsp;</span>	EM_MANIK         Machine = 171 <span class="comment">/* M2000 Reconfigurable RISC Microprocessor */</span>
<span id="L333" class="ln">   333&nbsp;&nbsp;</span>	EM_CRAYNV2       Machine = 172 <span class="comment">/* Cray Inc. NV2 vector architecture */</span>
<span id="L334" class="ln">   334&nbsp;&nbsp;</span>	EM_RX            Machine = 173 <span class="comment">/* Renesas RX family */</span>
<span id="L335" class="ln">   335&nbsp;&nbsp;</span>	EM_METAG         Machine = 174 <span class="comment">/* Imagination Technologies META processor architecture */</span>
<span id="L336" class="ln">   336&nbsp;&nbsp;</span>	EM_MCST_ELBRUS   Machine = 175 <span class="comment">/* MCST Elbrus general purpose hardware architecture */</span>
<span id="L337" class="ln">   337&nbsp;&nbsp;</span>	EM_ECOG16        Machine = 176 <span class="comment">/* Cyan Technology eCOG16 family */</span>
<span id="L338" class="ln">   338&nbsp;&nbsp;</span>	EM_CR16          Machine = 177 <span class="comment">/* National Semiconductor CompactRISC CR16 16-bit microprocessor */</span>
<span id="L339" class="ln">   339&nbsp;&nbsp;</span>	EM_ETPU          Machine = 178 <span class="comment">/* Freescale Extended Time Processing Unit */</span>
<span id="L340" class="ln">   340&nbsp;&nbsp;</span>	EM_SLE9X         Machine = 179 <span class="comment">/* Infineon Technologies SLE9X core */</span>
<span id="L341" class="ln">   341&nbsp;&nbsp;</span>	EM_L10M          Machine = 180 <span class="comment">/* Intel L10M */</span>
<span id="L342" class="ln">   342&nbsp;&nbsp;</span>	EM_K10M          Machine = 181 <span class="comment">/* Intel K10M */</span>
<span id="L343" class="ln">   343&nbsp;&nbsp;</span>	EM_AARCH64       Machine = 183 <span class="comment">/* ARM 64-bit Architecture (AArch64) */</span>
<span id="L344" class="ln">   344&nbsp;&nbsp;</span>	EM_AVR32         Machine = 185 <span class="comment">/* Atmel Corporation 32-bit microprocessor family */</span>
<span id="L345" class="ln">   345&nbsp;&nbsp;</span>	EM_STM8          Machine = 186 <span class="comment">/* STMicroeletronics STM8 8-bit microcontroller */</span>
<span id="L346" class="ln">   346&nbsp;&nbsp;</span>	EM_TILE64        Machine = 187 <span class="comment">/* Tilera TILE64 multicore architecture family */</span>
<span id="L347" class="ln">   347&nbsp;&nbsp;</span>	EM_TILEPRO       Machine = 188 <span class="comment">/* Tilera TILEPro multicore architecture family */</span>
<span id="L348" class="ln">   348&nbsp;&nbsp;</span>	EM_MICROBLAZE    Machine = 189 <span class="comment">/* Xilinx MicroBlaze 32-bit RISC soft processor core */</span>
<span id="L349" class="ln">   349&nbsp;&nbsp;</span>	EM_CUDA          Machine = 190 <span class="comment">/* NVIDIA CUDA architecture */</span>
<span id="L350" class="ln">   350&nbsp;&nbsp;</span>	EM_TILEGX        Machine = 191 <span class="comment">/* Tilera TILE-Gx multicore architecture family */</span>
<span id="L351" class="ln">   351&nbsp;&nbsp;</span>	EM_CLOUDSHIELD   Machine = 192 <span class="comment">/* CloudShield architecture family */</span>
<span id="L352" class="ln">   352&nbsp;&nbsp;</span>	EM_COREA_1ST     Machine = 193 <span class="comment">/* KIPO-KAIST Core-A 1st generation processor family */</span>
<span id="L353" class="ln">   353&nbsp;&nbsp;</span>	EM_COREA_2ND     Machine = 194 <span class="comment">/* KIPO-KAIST Core-A 2nd generation processor family */</span>
<span id="L354" class="ln">   354&nbsp;&nbsp;</span>	EM_ARC_COMPACT2  Machine = 195 <span class="comment">/* Synopsys ARCompact V2 */</span>
<span id="L355" class="ln">   355&nbsp;&nbsp;</span>	EM_OPEN8         Machine = 196 <span class="comment">/* Open8 8-bit RISC soft processor core */</span>
<span id="L356" class="ln">   356&nbsp;&nbsp;</span>	EM_RL78          Machine = 197 <span class="comment">/* Renesas RL78 family */</span>
<span id="L357" class="ln">   357&nbsp;&nbsp;</span>	EM_VIDEOCORE5    Machine = 198 <span class="comment">/* Broadcom VideoCore V processor */</span>
<span id="L358" class="ln">   358&nbsp;&nbsp;</span>	EM_78KOR         Machine = 199 <span class="comment">/* Renesas 78KOR family */</span>
<span id="L359" class="ln">   359&nbsp;&nbsp;</span>	EM_56800EX       Machine = 200 <span class="comment">/* Freescale 56800EX Digital Signal Controller (DSC) */</span>
<span id="L360" class="ln">   360&nbsp;&nbsp;</span>	EM_BA1           Machine = 201 <span class="comment">/* Beyond BA1 CPU architecture */</span>
<span id="L361" class="ln">   361&nbsp;&nbsp;</span>	EM_BA2           Machine = 202 <span class="comment">/* Beyond BA2 CPU architecture */</span>
<span id="L362" class="ln">   362&nbsp;&nbsp;</span>	EM_XCORE         Machine = 203 <span class="comment">/* XMOS xCORE processor family */</span>
<span id="L363" class="ln">   363&nbsp;&nbsp;</span>	EM_MCHP_PIC      Machine = 204 <span class="comment">/* Microchip 8-bit PIC(r) family */</span>
<span id="L364" class="ln">   364&nbsp;&nbsp;</span>	EM_INTEL205      Machine = 205 <span class="comment">/* Reserved by Intel */</span>
<span id="L365" class="ln">   365&nbsp;&nbsp;</span>	EM_INTEL206      Machine = 206 <span class="comment">/* Reserved by Intel */</span>
<span id="L366" class="ln">   366&nbsp;&nbsp;</span>	EM_INTEL207      Machine = 207 <span class="comment">/* Reserved by Intel */</span>
<span id="L367" class="ln">   367&nbsp;&nbsp;</span>	EM_INTEL208      Machine = 208 <span class="comment">/* Reserved by Intel */</span>
<span id="L368" class="ln">   368&nbsp;&nbsp;</span>	EM_INTEL209      Machine = 209 <span class="comment">/* Reserved by Intel */</span>
<span id="L369" class="ln">   369&nbsp;&nbsp;</span>	EM_KM32          Machine = 210 <span class="comment">/* KM211 KM32 32-bit processor */</span>
<span id="L370" class="ln">   370&nbsp;&nbsp;</span>	EM_KMX32         Machine = 211 <span class="comment">/* KM211 KMX32 32-bit processor */</span>
<span id="L371" class="ln">   371&nbsp;&nbsp;</span>	EM_KMX16         Machine = 212 <span class="comment">/* KM211 KMX16 16-bit processor */</span>
<span id="L372" class="ln">   372&nbsp;&nbsp;</span>	EM_KMX8          Machine = 213 <span class="comment">/* KM211 KMX8 8-bit processor */</span>
<span id="L373" class="ln">   373&nbsp;&nbsp;</span>	EM_KVARC         Machine = 214 <span class="comment">/* KM211 KVARC processor */</span>
<span id="L374" class="ln">   374&nbsp;&nbsp;</span>	EM_CDP           Machine = 215 <span class="comment">/* Paneve CDP architecture family */</span>
<span id="L375" class="ln">   375&nbsp;&nbsp;</span>	EM_COGE          Machine = 216 <span class="comment">/* Cognitive Smart Memory Processor */</span>
<span id="L376" class="ln">   376&nbsp;&nbsp;</span>	EM_COOL          Machine = 217 <span class="comment">/* Bluechip Systems CoolEngine */</span>
<span id="L377" class="ln">   377&nbsp;&nbsp;</span>	EM_NORC          Machine = 218 <span class="comment">/* Nanoradio Optimized RISC */</span>
<span id="L378" class="ln">   378&nbsp;&nbsp;</span>	EM_CSR_KALIMBA   Machine = 219 <span class="comment">/* CSR Kalimba architecture family */</span>
<span id="L379" class="ln">   379&nbsp;&nbsp;</span>	EM_Z80           Machine = 220 <span class="comment">/* Zilog Z80 */</span>
<span id="L380" class="ln">   380&nbsp;&nbsp;</span>	EM_VISIUM        Machine = 221 <span class="comment">/* Controls and Data Services VISIUMcore processor */</span>
<span id="L381" class="ln">   381&nbsp;&nbsp;</span>	EM_FT32          Machine = 222 <span class="comment">/* FTDI Chip FT32 high performance 32-bit RISC architecture */</span>
<span id="L382" class="ln">   382&nbsp;&nbsp;</span>	EM_MOXIE         Machine = 223 <span class="comment">/* Moxie processor family */</span>
<span id="L383" class="ln">   383&nbsp;&nbsp;</span>	EM_AMDGPU        Machine = 224 <span class="comment">/* AMD GPU architecture */</span>
<span id="L384" class="ln">   384&nbsp;&nbsp;</span>	EM_RISCV         Machine = 243 <span class="comment">/* RISC-V */</span>
<span id="L385" class="ln">   385&nbsp;&nbsp;</span>	EM_LANAI         Machine = 244 <span class="comment">/* Lanai 32-bit processor */</span>
<span id="L386" class="ln">   386&nbsp;&nbsp;</span>	EM_BPF           Machine = 247 <span class="comment">/* Linux BPF â in-kernel virtual machine */</span>
<span id="L387" class="ln">   387&nbsp;&nbsp;</span>	EM_LOONGARCH     Machine = 258 <span class="comment">/* LoongArch */</span>
<span id="L388" class="ln">   388&nbsp;&nbsp;</span>
<span id="L389" class="ln">   389&nbsp;&nbsp;</span>	<span class="comment">/* Non-standard or deprecated. */</span>
<span id="L390" class="ln">   390&nbsp;&nbsp;</span>	EM_486         Machine = 6      <span class="comment">/* Intel i486. */</span>
<span id="L391" class="ln">   391&nbsp;&nbsp;</span>	EM_MIPS_RS4_BE Machine = 10     <span class="comment">/* MIPS R4000 Big-Endian */</span>
<span id="L392" class="ln">   392&nbsp;&nbsp;</span>	EM_ALPHA_STD   Machine = 41     <span class="comment">/* Digital Alpha (standard value). */</span>
<span id="L393" class="ln">   393&nbsp;&nbsp;</span>	EM_ALPHA       Machine = 0x9026 <span class="comment">/* Alpha (written in the absence of an ABI) */</span>
<span id="L394" class="ln">   394&nbsp;&nbsp;</span>)
<span id="L395" class="ln">   395&nbsp;&nbsp;</span>
<span id="L396" class="ln">   396&nbsp;&nbsp;</span>var machineStrings = []intName{
<span id="L397" class="ln">   397&nbsp;&nbsp;</span>	{0, &#34;EM_NONE&#34;},
<span id="L398" class="ln">   398&nbsp;&nbsp;</span>	{1, &#34;EM_M32&#34;},
<span id="L399" class="ln">   399&nbsp;&nbsp;</span>	{2, &#34;EM_SPARC&#34;},
<span id="L400" class="ln">   400&nbsp;&nbsp;</span>	{3, &#34;EM_386&#34;},
<span id="L401" class="ln">   401&nbsp;&nbsp;</span>	{4, &#34;EM_68K&#34;},
<span id="L402" class="ln">   402&nbsp;&nbsp;</span>	{5, &#34;EM_88K&#34;},
<span id="L403" class="ln">   403&nbsp;&nbsp;</span>	{7, &#34;EM_860&#34;},
<span id="L404" class="ln">   404&nbsp;&nbsp;</span>	{8, &#34;EM_MIPS&#34;},
<span id="L405" class="ln">   405&nbsp;&nbsp;</span>	{9, &#34;EM_S370&#34;},
<span id="L406" class="ln">   406&nbsp;&nbsp;</span>	{10, &#34;EM_MIPS_RS3_LE&#34;},
<span id="L407" class="ln">   407&nbsp;&nbsp;</span>	{15, &#34;EM_PARISC&#34;},
<span id="L408" class="ln">   408&nbsp;&nbsp;</span>	{17, &#34;EM_VPP500&#34;},
<span id="L409" class="ln">   409&nbsp;&nbsp;</span>	{18, &#34;EM_SPARC32PLUS&#34;},
<span id="L410" class="ln">   410&nbsp;&nbsp;</span>	{19, &#34;EM_960&#34;},
<span id="L411" class="ln">   411&nbsp;&nbsp;</span>	{20, &#34;EM_PPC&#34;},
<span id="L412" class="ln">   412&nbsp;&nbsp;</span>	{21, &#34;EM_PPC64&#34;},
<span id="L413" class="ln">   413&nbsp;&nbsp;</span>	{22, &#34;EM_S390&#34;},
<span id="L414" class="ln">   414&nbsp;&nbsp;</span>	{36, &#34;EM_V800&#34;},
<span id="L415" class="ln">   415&nbsp;&nbsp;</span>	{37, &#34;EM_FR20&#34;},
<span id="L416" class="ln">   416&nbsp;&nbsp;</span>	{38, &#34;EM_RH32&#34;},
<span id="L417" class="ln">   417&nbsp;&nbsp;</span>	{39, &#34;EM_RCE&#34;},
<span id="L418" class="ln">   418&nbsp;&nbsp;</span>	{40, &#34;EM_ARM&#34;},
<span id="L419" class="ln">   419&nbsp;&nbsp;</span>	{42, &#34;EM_SH&#34;},
<span id="L420" class="ln">   420&nbsp;&nbsp;</span>	{43, &#34;EM_SPARCV9&#34;},
<span id="L421" class="ln">   421&nbsp;&nbsp;</span>	{44, &#34;EM_TRICORE&#34;},
<span id="L422" class="ln">   422&nbsp;&nbsp;</span>	{45, &#34;EM_ARC&#34;},
<span id="L423" class="ln">   423&nbsp;&nbsp;</span>	{46, &#34;EM_H8_300&#34;},
<span id="L424" class="ln">   424&nbsp;&nbsp;</span>	{47, &#34;EM_H8_300H&#34;},
<span id="L425" class="ln">   425&nbsp;&nbsp;</span>	{48, &#34;EM_H8S&#34;},
<span id="L426" class="ln">   426&nbsp;&nbsp;</span>	{49, &#34;EM_H8_500&#34;},
<span id="L427" class="ln">   427&nbsp;&nbsp;</span>	{50, &#34;EM_IA_64&#34;},
<span id="L428" class="ln">   428&nbsp;&nbsp;</span>	{51, &#34;EM_MIPS_X&#34;},
<span id="L429" class="ln">   429&nbsp;&nbsp;</span>	{52, &#34;EM_COLDFIRE&#34;},
<span id="L430" class="ln">   430&nbsp;&nbsp;</span>	{53, &#34;EM_68HC12&#34;},
<span id="L431" class="ln">   431&nbsp;&nbsp;</span>	{54, &#34;EM_MMA&#34;},
<span id="L432" class="ln">   432&nbsp;&nbsp;</span>	{55, &#34;EM_PCP&#34;},
<span id="L433" class="ln">   433&nbsp;&nbsp;</span>	{56, &#34;EM_NCPU&#34;},
<span id="L434" class="ln">   434&nbsp;&nbsp;</span>	{57, &#34;EM_NDR1&#34;},
<span id="L435" class="ln">   435&nbsp;&nbsp;</span>	{58, &#34;EM_STARCORE&#34;},
<span id="L436" class="ln">   436&nbsp;&nbsp;</span>	{59, &#34;EM_ME16&#34;},
<span id="L437" class="ln">   437&nbsp;&nbsp;</span>	{60, &#34;EM_ST100&#34;},
<span id="L438" class="ln">   438&nbsp;&nbsp;</span>	{61, &#34;EM_TINYJ&#34;},
<span id="L439" class="ln">   439&nbsp;&nbsp;</span>	{62, &#34;EM_X86_64&#34;},
<span id="L440" class="ln">   440&nbsp;&nbsp;</span>	{63, &#34;EM_PDSP&#34;},
<span id="L441" class="ln">   441&nbsp;&nbsp;</span>	{64, &#34;EM_PDP10&#34;},
<span id="L442" class="ln">   442&nbsp;&nbsp;</span>	{65, &#34;EM_PDP11&#34;},
<span id="L443" class="ln">   443&nbsp;&nbsp;</span>	{66, &#34;EM_FX66&#34;},
<span id="L444" class="ln">   444&nbsp;&nbsp;</span>	{67, &#34;EM_ST9PLUS&#34;},
<span id="L445" class="ln">   445&nbsp;&nbsp;</span>	{68, &#34;EM_ST7&#34;},
<span id="L446" class="ln">   446&nbsp;&nbsp;</span>	{69, &#34;EM_68HC16&#34;},
<span id="L447" class="ln">   447&nbsp;&nbsp;</span>	{70, &#34;EM_68HC11&#34;},
<span id="L448" class="ln">   448&nbsp;&nbsp;</span>	{71, &#34;EM_68HC08&#34;},
<span id="L449" class="ln">   449&nbsp;&nbsp;</span>	{72, &#34;EM_68HC05&#34;},
<span id="L450" class="ln">   450&nbsp;&nbsp;</span>	{73, &#34;EM_SVX&#34;},
<span id="L451" class="ln">   451&nbsp;&nbsp;</span>	{74, &#34;EM_ST19&#34;},
<span id="L452" class="ln">   452&nbsp;&nbsp;</span>	{75, &#34;EM_VAX&#34;},
<span id="L453" class="ln">   453&nbsp;&nbsp;</span>	{76, &#34;EM_CRIS&#34;},
<span id="L454" class="ln">   454&nbsp;&nbsp;</span>	{77, &#34;EM_JAVELIN&#34;},
<span id="L455" class="ln">   455&nbsp;&nbsp;</span>	{78, &#34;EM_FIREPATH&#34;},
<span id="L456" class="ln">   456&nbsp;&nbsp;</span>	{79, &#34;EM_ZSP&#34;},
<span id="L457" class="ln">   457&nbsp;&nbsp;</span>	{80, &#34;EM_MMIX&#34;},
<span id="L458" class="ln">   458&nbsp;&nbsp;</span>	{81, &#34;EM_HUANY&#34;},
<span id="L459" class="ln">   459&nbsp;&nbsp;</span>	{82, &#34;EM_PRISM&#34;},
<span id="L460" class="ln">   460&nbsp;&nbsp;</span>	{83, &#34;EM_AVR&#34;},
<span id="L461" class="ln">   461&nbsp;&nbsp;</span>	{84, &#34;EM_FR30&#34;},
<span id="L462" class="ln">   462&nbsp;&nbsp;</span>	{85, &#34;EM_D10V&#34;},
<span id="L463" class="ln">   463&nbsp;&nbsp;</span>	{86, &#34;EM_D30V&#34;},
<span id="L464" class="ln">   464&nbsp;&nbsp;</span>	{87, &#34;EM_V850&#34;},
<span id="L465" class="ln">   465&nbsp;&nbsp;</span>	{88, &#34;EM_M32R&#34;},
<span id="L466" class="ln">   466&nbsp;&nbsp;</span>	{89, &#34;EM_MN10300&#34;},
<span id="L467" class="ln">   467&nbsp;&nbsp;</span>	{90, &#34;EM_MN10200&#34;},
<span id="L468" class="ln">   468&nbsp;&nbsp;</span>	{91, &#34;EM_PJ&#34;},
<span id="L469" class="ln">   469&nbsp;&nbsp;</span>	{92, &#34;EM_OPENRISC&#34;},
<span id="L470" class="ln">   470&nbsp;&nbsp;</span>	{93, &#34;EM_ARC_COMPACT&#34;},
<span id="L471" class="ln">   471&nbsp;&nbsp;</span>	{94, &#34;EM_XTENSA&#34;},
<span id="L472" class="ln">   472&nbsp;&nbsp;</span>	{95, &#34;EM_VIDEOCORE&#34;},
<span id="L473" class="ln">   473&nbsp;&nbsp;</span>	{96, &#34;EM_TMM_GPP&#34;},
<span id="L474" class="ln">   474&nbsp;&nbsp;</span>	{97, &#34;EM_NS32K&#34;},
<span id="L475" class="ln">   475&nbsp;&nbsp;</span>	{98, &#34;EM_TPC&#34;},
<span id="L476" class="ln">   476&nbsp;&nbsp;</span>	{99, &#34;EM_SNP1K&#34;},
<span id="L477" class="ln">   477&nbsp;&nbsp;</span>	{100, &#34;EM_ST200&#34;},
<span id="L478" class="ln">   478&nbsp;&nbsp;</span>	{101, &#34;EM_IP2K&#34;},
<span id="L479" class="ln">   479&nbsp;&nbsp;</span>	{102, &#34;EM_MAX&#34;},
<span id="L480" class="ln">   480&nbsp;&nbsp;</span>	{103, &#34;EM_CR&#34;},
<span id="L481" class="ln">   481&nbsp;&nbsp;</span>	{104, &#34;EM_F2MC16&#34;},
<span id="L482" class="ln">   482&nbsp;&nbsp;</span>	{105, &#34;EM_MSP430&#34;},
<span id="L483" class="ln">   483&nbsp;&nbsp;</span>	{106, &#34;EM_BLACKFIN&#34;},
<span id="L484" class="ln">   484&nbsp;&nbsp;</span>	{107, &#34;EM_SE_C33&#34;},
<span id="L485" class="ln">   485&nbsp;&nbsp;</span>	{108, &#34;EM_SEP&#34;},
<span id="L486" class="ln">   486&nbsp;&nbsp;</span>	{109, &#34;EM_ARCA&#34;},
<span id="L487" class="ln">   487&nbsp;&nbsp;</span>	{110, &#34;EM_UNICORE&#34;},
<span id="L488" class="ln">   488&nbsp;&nbsp;</span>	{111, &#34;EM_EXCESS&#34;},
<span id="L489" class="ln">   489&nbsp;&nbsp;</span>	{112, &#34;EM_DXP&#34;},
<span id="L490" class="ln">   490&nbsp;&nbsp;</span>	{113, &#34;EM_ALTERA_NIOS2&#34;},
<span id="L491" class="ln">   491&nbsp;&nbsp;</span>	{114, &#34;EM_CRX&#34;},
<span id="L492" class="ln">   492&nbsp;&nbsp;</span>	{115, &#34;EM_XGATE&#34;},
<span id="L493" class="ln">   493&nbsp;&nbsp;</span>	{116, &#34;EM_C166&#34;},
<span id="L494" class="ln">   494&nbsp;&nbsp;</span>	{117, &#34;EM_M16C&#34;},
<span id="L495" class="ln">   495&nbsp;&nbsp;</span>	{118, &#34;EM_DSPIC30F&#34;},
<span id="L496" class="ln">   496&nbsp;&nbsp;</span>	{119, &#34;EM_CE&#34;},
<span id="L497" class="ln">   497&nbsp;&nbsp;</span>	{120, &#34;EM_M32C&#34;},
<span id="L498" class="ln">   498&nbsp;&nbsp;</span>	{131, &#34;EM_TSK3000&#34;},
<span id="L499" class="ln">   499&nbsp;&nbsp;</span>	{132, &#34;EM_RS08&#34;},
<span id="L500" class="ln">   500&nbsp;&nbsp;</span>	{133, &#34;EM_SHARC&#34;},
<span id="L501" class="ln">   501&nbsp;&nbsp;</span>	{134, &#34;EM_ECOG2&#34;},
<span id="L502" class="ln">   502&nbsp;&nbsp;</span>	{135, &#34;EM_SCORE7&#34;},
<span id="L503" class="ln">   503&nbsp;&nbsp;</span>	{136, &#34;EM_DSP24&#34;},
<span id="L504" class="ln">   504&nbsp;&nbsp;</span>	{137, &#34;EM_VIDEOCORE3&#34;},
<span id="L505" class="ln">   505&nbsp;&nbsp;</span>	{138, &#34;EM_LATTICEMICO32&#34;},
<span id="L506" class="ln">   506&nbsp;&nbsp;</span>	{139, &#34;EM_SE_C17&#34;},
<span id="L507" class="ln">   507&nbsp;&nbsp;</span>	{140, &#34;EM_TI_C6000&#34;},
<span id="L508" class="ln">   508&nbsp;&nbsp;</span>	{141, &#34;EM_TI_C2000&#34;},
<span id="L509" class="ln">   509&nbsp;&nbsp;</span>	{142, &#34;EM_TI_C5500&#34;},
<span id="L510" class="ln">   510&nbsp;&nbsp;</span>	{143, &#34;EM_TI_ARP32&#34;},
<span id="L511" class="ln">   511&nbsp;&nbsp;</span>	{144, &#34;EM_TI_PRU&#34;},
<span id="L512" class="ln">   512&nbsp;&nbsp;</span>	{160, &#34;EM_MMDSP_PLUS&#34;},
<span id="L513" class="ln">   513&nbsp;&nbsp;</span>	{161, &#34;EM_CYPRESS_M8C&#34;},
<span id="L514" class="ln">   514&nbsp;&nbsp;</span>	{162, &#34;EM_R32C&#34;},
<span id="L515" class="ln">   515&nbsp;&nbsp;</span>	{163, &#34;EM_TRIMEDIA&#34;},
<span id="L516" class="ln">   516&nbsp;&nbsp;</span>	{164, &#34;EM_QDSP6&#34;},
<span id="L517" class="ln">   517&nbsp;&nbsp;</span>	{165, &#34;EM_8051&#34;},
<span id="L518" class="ln">   518&nbsp;&nbsp;</span>	{166, &#34;EM_STXP7X&#34;},
<span id="L519" class="ln">   519&nbsp;&nbsp;</span>	{167, &#34;EM_NDS32&#34;},
<span id="L520" class="ln">   520&nbsp;&nbsp;</span>	{168, &#34;EM_ECOG1&#34;},
<span id="L521" class="ln">   521&nbsp;&nbsp;</span>	{168, &#34;EM_ECOG1X&#34;},
<span id="L522" class="ln">   522&nbsp;&nbsp;</span>	{169, &#34;EM_MAXQ30&#34;},
<span id="L523" class="ln">   523&nbsp;&nbsp;</span>	{170, &#34;EM_XIMO16&#34;},
<span id="L524" class="ln">   524&nbsp;&nbsp;</span>	{171, &#34;EM_MANIK&#34;},
<span id="L525" class="ln">   525&nbsp;&nbsp;</span>	{172, &#34;EM_CRAYNV2&#34;},
<span id="L526" class="ln">   526&nbsp;&nbsp;</span>	{173, &#34;EM_RX&#34;},
<span id="L527" class="ln">   527&nbsp;&nbsp;</span>	{174, &#34;EM_METAG&#34;},
<span id="L528" class="ln">   528&nbsp;&nbsp;</span>	{175, &#34;EM_MCST_ELBRUS&#34;},
<span id="L529" class="ln">   529&nbsp;&nbsp;</span>	{176, &#34;EM_ECOG16&#34;},
<span id="L530" class="ln">   530&nbsp;&nbsp;</span>	{177, &#34;EM_CR16&#34;},
<span id="L531" class="ln">   531&nbsp;&nbsp;</span>	{178, &#34;EM_ETPU&#34;},
<span id="L532" class="ln">   532&nbsp;&nbsp;</span>	{179, &#34;EM_SLE9X&#34;},
<span id="L533" class="ln">   533&nbsp;&nbsp;</span>	{180, &#34;EM_L10M&#34;},
<span id="L534" class="ln">   534&nbsp;&nbsp;</span>	{181, &#34;EM_K10M&#34;},
<span id="L535" class="ln">   535&nbsp;&nbsp;</span>	{183, &#34;EM_AARCH64&#34;},
<span id="L536" class="ln">   536&nbsp;&nbsp;</span>	{185, &#34;EM_AVR32&#34;},
<span id="L537" class="ln">   537&nbsp;&nbsp;</span>	{186, &#34;EM_STM8&#34;},
<span id="L538" class="ln">   538&nbsp;&nbsp;</span>	{187, &#34;EM_TILE64&#34;},
<span id="L539" class="ln">   539&nbsp;&nbsp;</span>	{188, &#34;EM_TILEPRO&#34;},
<span id="L540" class="ln">   540&nbsp;&nbsp;</span>	{189, &#34;EM_MICROBLAZE&#34;},
<span id="L541" class="ln">   541&nbsp;&nbsp;</span>	{190, &#34;EM_CUDA&#34;},
<span id="L542" class="ln">   542&nbsp;&nbsp;</span>	{191, &#34;EM_TILEGX&#34;},
<span id="L543" class="ln">   543&nbsp;&nbsp;</span>	{192, &#34;EM_CLOUDSHIELD&#34;},
<span id="L544" class="ln">   544&nbsp;&nbsp;</span>	{193, &#34;EM_COREA_1ST&#34;},
<span id="L545" class="ln">   545&nbsp;&nbsp;</span>	{194, &#34;EM_COREA_2ND&#34;},
<span id="L546" class="ln">   546&nbsp;&nbsp;</span>	{195, &#34;EM_ARC_COMPACT2&#34;},
<span id="L547" class="ln">   547&nbsp;&nbsp;</span>	{196, &#34;EM_OPEN8&#34;},
<span id="L548" class="ln">   548&nbsp;&nbsp;</span>	{197, &#34;EM_RL78&#34;},
<span id="L549" class="ln">   549&nbsp;&nbsp;</span>	{198, &#34;EM_VIDEOCORE5&#34;},
<span id="L550" class="ln">   550&nbsp;&nbsp;</span>	{199, &#34;EM_78KOR&#34;},
<span id="L551" class="ln">   551&nbsp;&nbsp;</span>	{200, &#34;EM_56800EX&#34;},
<span id="L552" class="ln">   552&nbsp;&nbsp;</span>	{201, &#34;EM_BA1&#34;},
<span id="L553" class="ln">   553&nbsp;&nbsp;</span>	{202, &#34;EM_BA2&#34;},
<span id="L554" class="ln">   554&nbsp;&nbsp;</span>	{203, &#34;EM_XCORE&#34;},
<span id="L555" class="ln">   555&nbsp;&nbsp;</span>	{204, &#34;EM_MCHP_PIC&#34;},
<span id="L556" class="ln">   556&nbsp;&nbsp;</span>	{205, &#34;EM_INTEL205&#34;},
<span id="L557" class="ln">   557&nbsp;&nbsp;</span>	{206, &#34;EM_INTEL206&#34;},
<span id="L558" class="ln">   558&nbsp;&nbsp;</span>	{207, &#34;EM_INTEL207&#34;},
<span id="L559" class="ln">   559&nbsp;&nbsp;</span>	{208, &#34;EM_INTEL208&#34;},
<span id="L560" class="ln">   560&nbsp;&nbsp;</span>	{209, &#34;EM_INTEL209&#34;},
<span id="L561" class="ln">   561&nbsp;&nbsp;</span>	{210, &#34;EM_KM32&#34;},
<span id="L562" class="ln">   562&nbsp;&nbsp;</span>	{211, &#34;EM_KMX32&#34;},
<span id="L563" class="ln">   563&nbsp;&nbsp;</span>	{212, &#34;EM_KMX16&#34;},
<span id="L564" class="ln">   564&nbsp;&nbsp;</span>	{213, &#34;EM_KMX8&#34;},
<span id="L565" class="ln">   565&nbsp;&nbsp;</span>	{214, &#34;EM_KVARC&#34;},
<span id="L566" class="ln">   566&nbsp;&nbsp;</span>	{215, &#34;EM_CDP&#34;},
<span id="L567" class="ln">   567&nbsp;&nbsp;</span>	{216, &#34;EM_COGE&#34;},
<span id="L568" class="ln">   568&nbsp;&nbsp;</span>	{217, &#34;EM_COOL&#34;},
<span id="L569" class="ln">   569&nbsp;&nbsp;</span>	{218, &#34;EM_NORC&#34;},
<span id="L570" class="ln">   570&nbsp;&nbsp;</span>	{219, &#34;EM_CSR_KALIMBA &#34;},
<span id="L571" class="ln">   571&nbsp;&nbsp;</span>	{220, &#34;EM_Z80 &#34;},
<span id="L572" class="ln">   572&nbsp;&nbsp;</span>	{221, &#34;EM_VISIUM &#34;},
<span id="L573" class="ln">   573&nbsp;&nbsp;</span>	{222, &#34;EM_FT32 &#34;},
<span id="L574" class="ln">   574&nbsp;&nbsp;</span>	{223, &#34;EM_MOXIE&#34;},
<span id="L575" class="ln">   575&nbsp;&nbsp;</span>	{224, &#34;EM_AMDGPU&#34;},
<span id="L576" class="ln">   576&nbsp;&nbsp;</span>	{243, &#34;EM_RISCV&#34;},
<span id="L577" class="ln">   577&nbsp;&nbsp;</span>	{244, &#34;EM_LANAI&#34;},
<span id="L578" class="ln">   578&nbsp;&nbsp;</span>	{247, &#34;EM_BPF&#34;},
<span id="L579" class="ln">   579&nbsp;&nbsp;</span>	{258, &#34;EM_LOONGARCH&#34;},
<span id="L580" class="ln">   580&nbsp;&nbsp;</span>
<span id="L581" class="ln">   581&nbsp;&nbsp;</span>	<span class="comment">/* Non-standard or deprecated. */</span>
<span id="L582" class="ln">   582&nbsp;&nbsp;</span>	{6, &#34;EM_486&#34;},
<span id="L583" class="ln">   583&nbsp;&nbsp;</span>	{10, &#34;EM_MIPS_RS4_BE&#34;},
<span id="L584" class="ln">   584&nbsp;&nbsp;</span>	{41, &#34;EM_ALPHA_STD&#34;},
<span id="L585" class="ln">   585&nbsp;&nbsp;</span>	{0x9026, &#34;EM_ALPHA&#34;},
<span id="L586" class="ln">   586&nbsp;&nbsp;</span>}
<span id="L587" class="ln">   587&nbsp;&nbsp;</span>
<span id="L588" class="ln">   588&nbsp;&nbsp;</span>func (i Machine) String() string   { return stringName(uint32(i), machineStrings, false) }
<span id="L589" class="ln">   589&nbsp;&nbsp;</span>func (i Machine) GoString() string { return stringName(uint32(i), machineStrings, true) }
<span id="L590" class="ln">   590&nbsp;&nbsp;</span>
<span id="L591" class="ln">   591&nbsp;&nbsp;</span><span class="comment">// Special section indices.</span>
<span id="L592" class="ln">   592&nbsp;&nbsp;</span>type SectionIndex int
<span id="L593" class="ln">   593&nbsp;&nbsp;</span>
<span id="L594" class="ln">   594&nbsp;&nbsp;</span>const (
<span id="L595" class="ln">   595&nbsp;&nbsp;</span>	SHN_UNDEF     SectionIndex = 0      <span class="comment">/* Undefined, missing, irrelevant. */</span>
<span id="L596" class="ln">   596&nbsp;&nbsp;</span>	SHN_LORESERVE SectionIndex = 0xff00 <span class="comment">/* First of reserved range. */</span>
<span id="L597" class="ln">   597&nbsp;&nbsp;</span>	SHN_LOPROC    SectionIndex = 0xff00 <span class="comment">/* First processor-specific. */</span>
<span id="L598" class="ln">   598&nbsp;&nbsp;</span>	SHN_HIPROC    SectionIndex = 0xff1f <span class="comment">/* Last processor-specific. */</span>
<span id="L599" class="ln">   599&nbsp;&nbsp;</span>	SHN_LOOS      SectionIndex = 0xff20 <span class="comment">/* First operating system-specific. */</span>
<span id="L600" class="ln">   600&nbsp;&nbsp;</span>	SHN_HIOS      SectionIndex = 0xff3f <span class="comment">/* Last operating system-specific. */</span>
<span id="L601" class="ln">   601&nbsp;&nbsp;</span>	SHN_ABS       SectionIndex = 0xfff1 <span class="comment">/* Absolute values. */</span>
<span id="L602" class="ln">   602&nbsp;&nbsp;</span>	SHN_COMMON    SectionIndex = 0xfff2 <span class="comment">/* Common data. */</span>
<span id="L603" class="ln">   603&nbsp;&nbsp;</span>	SHN_XINDEX    SectionIndex = 0xffff <span class="comment">/* Escape; index stored elsewhere. */</span>
<span id="L604" class="ln">   604&nbsp;&nbsp;</span>	SHN_HIRESERVE SectionIndex = 0xffff <span class="comment">/* Last of reserved range. */</span>
<span id="L605" class="ln">   605&nbsp;&nbsp;</span>)
<span id="L606" class="ln">   606&nbsp;&nbsp;</span>
<span id="L607" class="ln">   607&nbsp;&nbsp;</span>var shnStrings = []intName{
<span id="L608" class="ln">   608&nbsp;&nbsp;</span>	{0, &#34;SHN_UNDEF&#34;},
<span id="L609" class="ln">   609&nbsp;&nbsp;</span>	{0xff00, &#34;SHN_LOPROC&#34;},
<span id="L610" class="ln">   610&nbsp;&nbsp;</span>	{0xff20, &#34;SHN_LOOS&#34;},
<span id="L611" class="ln">   611&nbsp;&nbsp;</span>	{0xfff1, &#34;SHN_ABS&#34;},
<span id="L612" class="ln">   612&nbsp;&nbsp;</span>	{0xfff2, &#34;SHN_COMMON&#34;},
<span id="L613" class="ln">   613&nbsp;&nbsp;</span>	{0xffff, &#34;SHN_XINDEX&#34;},
<span id="L614" class="ln">   614&nbsp;&nbsp;</span>}
<span id="L615" class="ln">   615&nbsp;&nbsp;</span>
<span id="L616" class="ln">   616&nbsp;&nbsp;</span>func (i SectionIndex) String() string   { return stringName(uint32(i), shnStrings, false) }
<span id="L617" class="ln">   617&nbsp;&nbsp;</span>func (i SectionIndex) GoString() string { return stringName(uint32(i), shnStrings, true) }
<span id="L618" class="ln">   618&nbsp;&nbsp;</span>
<span id="L619" class="ln">   619&nbsp;&nbsp;</span><span class="comment">// Section type.</span>
<span id="L620" class="ln">   620&nbsp;&nbsp;</span>type SectionType uint32
<span id="L621" class="ln">   621&nbsp;&nbsp;</span>
<span id="L622" class="ln">   622&nbsp;&nbsp;</span>const (
<span id="L623" class="ln">   623&nbsp;&nbsp;</span>	SHT_NULL           SectionType = 0          <span class="comment">/* inactive */</span>
<span id="L624" class="ln">   624&nbsp;&nbsp;</span>	SHT_PROGBITS       SectionType = 1          <span class="comment">/* program defined information */</span>
<span id="L625" class="ln">   625&nbsp;&nbsp;</span>	SHT_SYMTAB         SectionType = 2          <span class="comment">/* symbol table section */</span>
<span id="L626" class="ln">   626&nbsp;&nbsp;</span>	SHT_STRTAB         SectionType = 3          <span class="comment">/* string table section */</span>
<span id="L627" class="ln">   627&nbsp;&nbsp;</span>	SHT_RELA           SectionType = 4          <span class="comment">/* relocation section with addends */</span>
<span id="L628" class="ln">   628&nbsp;&nbsp;</span>	SHT_HASH           SectionType = 5          <span class="comment">/* symbol hash table section */</span>
<span id="L629" class="ln">   629&nbsp;&nbsp;</span>	SHT_DYNAMIC        SectionType = 6          <span class="comment">/* dynamic section */</span>
<span id="L630" class="ln">   630&nbsp;&nbsp;</span>	SHT_NOTE           SectionType = 7          <span class="comment">/* note section */</span>
<span id="L631" class="ln">   631&nbsp;&nbsp;</span>	SHT_NOBITS         SectionType = 8          <span class="comment">/* no space section */</span>
<span id="L632" class="ln">   632&nbsp;&nbsp;</span>	SHT_REL            SectionType = 9          <span class="comment">/* relocation section - no addends */</span>
<span id="L633" class="ln">   633&nbsp;&nbsp;</span>	SHT_SHLIB          SectionType = 10         <span class="comment">/* reserved - purpose unknown */</span>
<span id="L634" class="ln">   634&nbsp;&nbsp;</span>	SHT_DYNSYM         SectionType = 11         <span class="comment">/* dynamic symbol table section */</span>
<span id="L635" class="ln">   635&nbsp;&nbsp;</span>	SHT_INIT_ARRAY     SectionType = 14         <span class="comment">/* Initialization function pointers. */</span>
<span id="L636" class="ln">   636&nbsp;&nbsp;</span>	SHT_FINI_ARRAY     SectionType = 15         <span class="comment">/* Termination function pointers. */</span>
<span id="L637" class="ln">   637&nbsp;&nbsp;</span>	SHT_PREINIT_ARRAY  SectionType = 16         <span class="comment">/* Pre-initialization function ptrs. */</span>
<span id="L638" class="ln">   638&nbsp;&nbsp;</span>	SHT_GROUP          SectionType = 17         <span class="comment">/* Section group. */</span>
<span id="L639" class="ln">   639&nbsp;&nbsp;</span>	SHT_SYMTAB_SHNDX   SectionType = 18         <span class="comment">/* Section indexes (see SHN_XINDEX). */</span>
<span id="L640" class="ln">   640&nbsp;&nbsp;</span>	SHT_LOOS           SectionType = 0x60000000 <span class="comment">/* First of OS specific semantics */</span>
<span id="L641" class="ln">   641&nbsp;&nbsp;</span>	SHT_GNU_ATTRIBUTES SectionType = 0x6ffffff5 <span class="comment">/* GNU object attributes */</span>
<span id="L642" class="ln">   642&nbsp;&nbsp;</span>	SHT_GNU_HASH       SectionType = 0x6ffffff6 <span class="comment">/* GNU hash table */</span>
<span id="L643" class="ln">   643&nbsp;&nbsp;</span>	SHT_GNU_LIBLIST    SectionType = 0x6ffffff7 <span class="comment">/* GNU prelink library list */</span>
<span id="L644" class="ln">   644&nbsp;&nbsp;</span>	SHT_GNU_VERDEF     SectionType = 0x6ffffffd <span class="comment">/* GNU version definition section */</span>
<span id="L645" class="ln">   645&nbsp;&nbsp;</span>	SHT_GNU_VERNEED    SectionType = 0x6ffffffe <span class="comment">/* GNU version needs section */</span>
<span id="L646" class="ln">   646&nbsp;&nbsp;</span>	SHT_GNU_VERSYM     SectionType = 0x6fffffff <span class="comment">/* GNU version symbol table */</span>
<span id="L647" class="ln">   647&nbsp;&nbsp;</span>	SHT_HIOS           SectionType = 0x6fffffff <span class="comment">/* Last of OS specific semantics */</span>
<span id="L648" class="ln">   648&nbsp;&nbsp;</span>	SHT_LOPROC         SectionType = 0x70000000 <span class="comment">/* reserved range for processor */</span>
<span id="L649" class="ln">   649&nbsp;&nbsp;</span>	SHT_MIPS_ABIFLAGS  SectionType = 0x7000002a <span class="comment">/* .MIPS.abiflags */</span>
<span id="L650" class="ln">   650&nbsp;&nbsp;</span>	SHT_HIPROC         SectionType = 0x7fffffff <span class="comment">/* specific section header types */</span>
<span id="L651" class="ln">   651&nbsp;&nbsp;</span>	SHT_LOUSER         SectionType = 0x80000000 <span class="comment">/* reserved range for application */</span>
<span id="L652" class="ln">   652&nbsp;&nbsp;</span>	SHT_HIUSER         SectionType = 0xffffffff <span class="comment">/* specific indexes */</span>
<span id="L653" class="ln">   653&nbsp;&nbsp;</span>)
<span id="L654" class="ln">   654&nbsp;&nbsp;</span>
<span id="L655" class="ln">   655&nbsp;&nbsp;</span>var shtStrings = []intName{
<span id="L656" class="ln">   656&nbsp;&nbsp;</span>	{0, &#34;SHT_NULL&#34;},
<span id="L657" class="ln">   657&nbsp;&nbsp;</span>	{1, &#34;SHT_PROGBITS&#34;},
<span id="L658" class="ln">   658&nbsp;&nbsp;</span>	{2, &#34;SHT_SYMTAB&#34;},
<span id="L659" class="ln">   659&nbsp;&nbsp;</span>	{3, &#34;SHT_STRTAB&#34;},
<span id="L660" class="ln">   660&nbsp;&nbsp;</span>	{4, &#34;SHT_RELA&#34;},
<span id="L661" class="ln">   661&nbsp;&nbsp;</span>	{5, &#34;SHT_HASH&#34;},
<span id="L662" class="ln">   662&nbsp;&nbsp;</span>	{6, &#34;SHT_DYNAMIC&#34;},
<span id="L663" class="ln">   663&nbsp;&nbsp;</span>	{7, &#34;SHT_NOTE&#34;},
<span id="L664" class="ln">   664&nbsp;&nbsp;</span>	{8, &#34;SHT_NOBITS&#34;},
<span id="L665" class="ln">   665&nbsp;&nbsp;</span>	{9, &#34;SHT_REL&#34;},
<span id="L666" class="ln">   666&nbsp;&nbsp;</span>	{10, &#34;SHT_SHLIB&#34;},
<span id="L667" class="ln">   667&nbsp;&nbsp;</span>	{11, &#34;SHT_DYNSYM&#34;},
<span id="L668" class="ln">   668&nbsp;&nbsp;</span>	{14, &#34;SHT_INIT_ARRAY&#34;},
<span id="L669" class="ln">   669&nbsp;&nbsp;</span>	{15, &#34;SHT_FINI_ARRAY&#34;},
<span id="L670" class="ln">   670&nbsp;&nbsp;</span>	{16, &#34;SHT_PREINIT_ARRAY&#34;},
<span id="L671" class="ln">   671&nbsp;&nbsp;</span>	{17, &#34;SHT_GROUP&#34;},
<span id="L672" class="ln">   672&nbsp;&nbsp;</span>	{18, &#34;SHT_SYMTAB_SHNDX&#34;},
<span id="L673" class="ln">   673&nbsp;&nbsp;</span>	{0x60000000, &#34;SHT_LOOS&#34;},
<span id="L674" class="ln">   674&nbsp;&nbsp;</span>	{0x6ffffff5, &#34;SHT_GNU_ATTRIBUTES&#34;},
<span id="L675" class="ln">   675&nbsp;&nbsp;</span>	{0x6ffffff6, &#34;SHT_GNU_HASH&#34;},
<span id="L676" class="ln">   676&nbsp;&nbsp;</span>	{0x6ffffff7, &#34;SHT_GNU_LIBLIST&#34;},
<span id="L677" class="ln">   677&nbsp;&nbsp;</span>	{0x6ffffffd, &#34;SHT_GNU_VERDEF&#34;},
<span id="L678" class="ln">   678&nbsp;&nbsp;</span>	{0x6ffffffe, &#34;SHT_GNU_VERNEED&#34;},
<span id="L679" class="ln">   679&nbsp;&nbsp;</span>	{0x6fffffff, &#34;SHT_GNU_VERSYM&#34;},
<span id="L680" class="ln">   680&nbsp;&nbsp;</span>	{0x70000000, &#34;SHT_LOPROC&#34;},
<span id="L681" class="ln">   681&nbsp;&nbsp;</span>	{0x7000002a, &#34;SHT_MIPS_ABIFLAGS&#34;},
<span id="L682" class="ln">   682&nbsp;&nbsp;</span>	{0x7fffffff, &#34;SHT_HIPROC&#34;},
<span id="L683" class="ln">   683&nbsp;&nbsp;</span>	{0x80000000, &#34;SHT_LOUSER&#34;},
<span id="L684" class="ln">   684&nbsp;&nbsp;</span>	{0xffffffff, &#34;SHT_HIUSER&#34;},
<span id="L685" class="ln">   685&nbsp;&nbsp;</span>}
<span id="L686" class="ln">   686&nbsp;&nbsp;</span>
<span id="L687" class="ln">   687&nbsp;&nbsp;</span>func (i SectionType) String() string   { return stringName(uint32(i), shtStrings, false) }
<span id="L688" class="ln">   688&nbsp;&nbsp;</span>func (i SectionType) GoString() string { return stringName(uint32(i), shtStrings, true) }
<span id="L689" class="ln">   689&nbsp;&nbsp;</span>
<span id="L690" class="ln">   690&nbsp;&nbsp;</span><span class="comment">// Section flags.</span>
<span id="L691" class="ln">   691&nbsp;&nbsp;</span>type SectionFlag uint32
<span id="L692" class="ln">   692&nbsp;&nbsp;</span>
<span id="L693" class="ln">   693&nbsp;&nbsp;</span>const (
<span id="L694" class="ln">   694&nbsp;&nbsp;</span>	SHF_WRITE            SectionFlag = 0x1        <span class="comment">/* Section contains writable data. */</span>
<span id="L695" class="ln">   695&nbsp;&nbsp;</span>	SHF_ALLOC            SectionFlag = 0x2        <span class="comment">/* Section occupies memory. */</span>
<span id="L696" class="ln">   696&nbsp;&nbsp;</span>	SHF_EXECINSTR        SectionFlag = 0x4        <span class="comment">/* Section contains instructions. */</span>
<span id="L697" class="ln">   697&nbsp;&nbsp;</span>	SHF_MERGE            SectionFlag = 0x10       <span class="comment">/* Section may be merged. */</span>
<span id="L698" class="ln">   698&nbsp;&nbsp;</span>	SHF_STRINGS          SectionFlag = 0x20       <span class="comment">/* Section contains strings. */</span>
<span id="L699" class="ln">   699&nbsp;&nbsp;</span>	SHF_INFO_LINK        SectionFlag = 0x40       <span class="comment">/* sh_info holds section index. */</span>
<span id="L700" class="ln">   700&nbsp;&nbsp;</span>	SHF_LINK_ORDER       SectionFlag = 0x80       <span class="comment">/* Special ordering requirements. */</span>
<span id="L701" class="ln">   701&nbsp;&nbsp;</span>	SHF_OS_NONCONFORMING SectionFlag = 0x100      <span class="comment">/* OS-specific processing required. */</span>
<span id="L702" class="ln">   702&nbsp;&nbsp;</span>	SHF_GROUP            SectionFlag = 0x200      <span class="comment">/* Member of section group. */</span>
<span id="L703" class="ln">   703&nbsp;&nbsp;</span>	SHF_TLS              SectionFlag = 0x400      <span class="comment">/* Section contains TLS data. */</span>
<span id="L704" class="ln">   704&nbsp;&nbsp;</span>	SHF_COMPRESSED       SectionFlag = 0x800      <span class="comment">/* Section is compressed. */</span>
<span id="L705" class="ln">   705&nbsp;&nbsp;</span>	SHF_MASKOS           SectionFlag = 0x0ff00000 <span class="comment">/* OS-specific semantics. */</span>
<span id="L706" class="ln">   706&nbsp;&nbsp;</span>	SHF_MASKPROC         SectionFlag = 0xf0000000 <span class="comment">/* Processor-specific semantics. */</span>
<span id="L707" class="ln">   707&nbsp;&nbsp;</span>)
<span id="L708" class="ln">   708&nbsp;&nbsp;</span>
<span id="L709" class="ln">   709&nbsp;&nbsp;</span>var shfStrings = []intName{
<span id="L710" class="ln">   710&nbsp;&nbsp;</span>	{0x1, &#34;SHF_WRITE&#34;},
<span id="L711" class="ln">   711&nbsp;&nbsp;</span>	{0x2, &#34;SHF_ALLOC&#34;},
<span id="L712" class="ln">   712&nbsp;&nbsp;</span>	{0x4, &#34;SHF_EXECINSTR&#34;},
<span id="L713" class="ln">   713&nbsp;&nbsp;</span>	{0x10, &#34;SHF_MERGE&#34;},
<span id="L714" class="ln">   714&nbsp;&nbsp;</span>	{0x20, &#34;SHF_STRINGS&#34;},
<span id="L715" class="ln">   715&nbsp;&nbsp;</span>	{0x40, &#34;SHF_INFO_LINK&#34;},
<span id="L716" class="ln">   716&nbsp;&nbsp;</span>	{0x80, &#34;SHF_LINK_ORDER&#34;},
<span id="L717" class="ln">   717&nbsp;&nbsp;</span>	{0x100, &#34;SHF_OS_NONCONFORMING&#34;},
<span id="L718" class="ln">   718&nbsp;&nbsp;</span>	{0x200, &#34;SHF_GROUP&#34;},
<span id="L719" class="ln">   719&nbsp;&nbsp;</span>	{0x400, &#34;SHF_TLS&#34;},
<span id="L720" class="ln">   720&nbsp;&nbsp;</span>	{0x800, &#34;SHF_COMPRESSED&#34;},
<span id="L721" class="ln">   721&nbsp;&nbsp;</span>}
<span id="L722" class="ln">   722&nbsp;&nbsp;</span>
<span id="L723" class="ln">   723&nbsp;&nbsp;</span>func (i SectionFlag) String() string   { return flagName(uint32(i), shfStrings, false) }
<span id="L724" class="ln">   724&nbsp;&nbsp;</span>func (i SectionFlag) GoString() string { return flagName(uint32(i), shfStrings, true) }
<span id="L725" class="ln">   725&nbsp;&nbsp;</span>
<span id="L726" class="ln">   726&nbsp;&nbsp;</span><span class="comment">// Section compression type.</span>
<span id="L727" class="ln">   727&nbsp;&nbsp;</span>type CompressionType int
<span id="L728" class="ln">   728&nbsp;&nbsp;</span>
<span id="L729" class="ln">   729&nbsp;&nbsp;</span>const (
<span id="L730" class="ln">   730&nbsp;&nbsp;</span>	COMPRESS_ZLIB   CompressionType = 1          <span class="comment">/* ZLIB compression. */</span>
<span id="L731" class="ln">   731&nbsp;&nbsp;</span>	COMPRESS_ZSTD   CompressionType = 2          <span class="comment">/* ZSTD compression. */</span>
<span id="L732" class="ln">   732&nbsp;&nbsp;</span>	COMPRESS_LOOS   CompressionType = 0x60000000 <span class="comment">/* First OS-specific. */</span>
<span id="L733" class="ln">   733&nbsp;&nbsp;</span>	COMPRESS_HIOS   CompressionType = 0x6fffffff <span class="comment">/* Last OS-specific. */</span>
<span id="L734" class="ln">   734&nbsp;&nbsp;</span>	COMPRESS_LOPROC CompressionType = 0x70000000 <span class="comment">/* First processor-specific type. */</span>
<span id="L735" class="ln">   735&nbsp;&nbsp;</span>	COMPRESS_HIPROC CompressionType = 0x7fffffff <span class="comment">/* Last processor-specific type. */</span>
<span id="L736" class="ln">   736&nbsp;&nbsp;</span>)
<span id="L737" class="ln">   737&nbsp;&nbsp;</span>
<span id="L738" class="ln">   738&nbsp;&nbsp;</span>var compressionStrings = []intName{
<span id="L739" class="ln">   739&nbsp;&nbsp;</span>	{1, &#34;COMPRESS_ZLIB&#34;},
<span id="L740" class="ln">   740&nbsp;&nbsp;</span>	{2, &#34;COMPRESS_ZSTD&#34;},
<span id="L741" class="ln">   741&nbsp;&nbsp;</span>	{0x60000000, &#34;COMPRESS_LOOS&#34;},
<span id="L742" class="ln">   742&nbsp;&nbsp;</span>	{0x6fffffff, &#34;COMPRESS_HIOS&#34;},
<span id="L743" class="ln">   743&nbsp;&nbsp;</span>	{0x70000000, &#34;COMPRESS_LOPROC&#34;},
<span id="L744" class="ln">   744&nbsp;&nbsp;</span>	{0x7fffffff, &#34;COMPRESS_HIPROC&#34;},
<span id="L745" class="ln">   745&nbsp;&nbsp;</span>}
<span id="L746" class="ln">   746&nbsp;&nbsp;</span>
<span id="L747" class="ln">   747&nbsp;&nbsp;</span>func (i CompressionType) String() string   { return stringName(uint32(i), compressionStrings, false) }
<span id="L748" class="ln">   748&nbsp;&nbsp;</span>func (i CompressionType) GoString() string { return stringName(uint32(i), compressionStrings, true) }
<span id="L749" class="ln">   749&nbsp;&nbsp;</span>
<span id="L750" class="ln">   750&nbsp;&nbsp;</span><span class="comment">// Prog.Type</span>
<span id="L751" class="ln">   751&nbsp;&nbsp;</span>type ProgType int
<span id="L752" class="ln">   752&nbsp;&nbsp;</span>
<span id="L753" class="ln">   753&nbsp;&nbsp;</span>const (
<span id="L754" class="ln">   754&nbsp;&nbsp;</span>	PT_NULL    ProgType = 0 <span class="comment">/* Unused entry. */</span>
<span id="L755" class="ln">   755&nbsp;&nbsp;</span>	PT_LOAD    ProgType = 1 <span class="comment">/* Loadable segment. */</span>
<span id="L756" class="ln">   756&nbsp;&nbsp;</span>	PT_DYNAMIC ProgType = 2 <span class="comment">/* Dynamic linking information segment. */</span>
<span id="L757" class="ln">   757&nbsp;&nbsp;</span>	PT_INTERP  ProgType = 3 <span class="comment">/* Pathname of interpreter. */</span>
<span id="L758" class="ln">   758&nbsp;&nbsp;</span>	PT_NOTE    ProgType = 4 <span class="comment">/* Auxiliary information. */</span>
<span id="L759" class="ln">   759&nbsp;&nbsp;</span>	PT_SHLIB   ProgType = 5 <span class="comment">/* Reserved (not used). */</span>
<span id="L760" class="ln">   760&nbsp;&nbsp;</span>	PT_PHDR    ProgType = 6 <span class="comment">/* Location of program header itself. */</span>
<span id="L761" class="ln">   761&nbsp;&nbsp;</span>	PT_TLS     ProgType = 7 <span class="comment">/* Thread local storage segment */</span>
<span id="L762" class="ln">   762&nbsp;&nbsp;</span>
<span id="L763" class="ln">   763&nbsp;&nbsp;</span>	PT_LOOS ProgType = 0x60000000 <span class="comment">/* First OS-specific. */</span>
<span id="L764" class="ln">   764&nbsp;&nbsp;</span>
<span id="L765" class="ln">   765&nbsp;&nbsp;</span>	PT_GNU_EH_FRAME ProgType = 0x6474e550 <span class="comment">/* Frame unwind information */</span>
<span id="L766" class="ln">   766&nbsp;&nbsp;</span>	PT_GNU_STACK    ProgType = 0x6474e551 <span class="comment">/* Stack flags */</span>
<span id="L767" class="ln">   767&nbsp;&nbsp;</span>	PT_GNU_RELRO    ProgType = 0x6474e552 <span class="comment">/* Read only after relocs */</span>
<span id="L768" class="ln">   768&nbsp;&nbsp;</span>	PT_GNU_PROPERTY ProgType = 0x6474e553 <span class="comment">/* GNU property */</span>
<span id="L769" class="ln">   769&nbsp;&nbsp;</span>	PT_GNU_MBIND_LO ProgType = 0x6474e555 <span class="comment">/* Mbind segments start */</span>
<span id="L770" class="ln">   770&nbsp;&nbsp;</span>	PT_GNU_MBIND_HI ProgType = 0x6474f554 <span class="comment">/* Mbind segments finish */</span>
<span id="L771" class="ln">   771&nbsp;&nbsp;</span>
<span id="L772" class="ln">   772&nbsp;&nbsp;</span>	PT_PAX_FLAGS ProgType = 0x65041580 <span class="comment">/* PAX flags */</span>
<span id="L773" class="ln">   773&nbsp;&nbsp;</span>
<span id="L774" class="ln">   774&nbsp;&nbsp;</span>	PT_OPENBSD_RANDOMIZE ProgType = 0x65a3dbe6 <span class="comment">/* Random data */</span>
<span id="L775" class="ln">   775&nbsp;&nbsp;</span>	PT_OPENBSD_WXNEEDED  ProgType = 0x65a3dbe7 <span class="comment">/* W^X violations */</span>
<span id="L776" class="ln">   776&nbsp;&nbsp;</span>	PT_OPENBSD_BOOTDATA  ProgType = 0x65a41be6 <span class="comment">/* Boot arguments */</span>
<span id="L777" class="ln">   777&nbsp;&nbsp;</span>
<span id="L778" class="ln">   778&nbsp;&nbsp;</span>	PT_SUNW_EH_FRAME ProgType = 0x6474e550 <span class="comment">/* Frame unwind information */</span>
<span id="L779" class="ln">   779&nbsp;&nbsp;</span>	PT_SUNWSTACK     ProgType = 0x6ffffffb <span class="comment">/* Stack segment */</span>
<span id="L780" class="ln">   780&nbsp;&nbsp;</span>
<span id="L781" class="ln">   781&nbsp;&nbsp;</span>	PT_HIOS ProgType = 0x6fffffff <span class="comment">/* Last OS-specific. */</span>
<span id="L782" class="ln">   782&nbsp;&nbsp;</span>
<span id="L783" class="ln">   783&nbsp;&nbsp;</span>	PT_LOPROC ProgType = 0x70000000 <span class="comment">/* First processor-specific type. */</span>
<span id="L784" class="ln">   784&nbsp;&nbsp;</span>
<span id="L785" class="ln">   785&nbsp;&nbsp;</span>	PT_ARM_ARCHEXT ProgType = 0x70000000 <span class="comment">/* Architecture compatibility */</span>
<span id="L786" class="ln">   786&nbsp;&nbsp;</span>	PT_ARM_EXIDX   ProgType = 0x70000001 <span class="comment">/* Exception unwind tables */</span>
<span id="L787" class="ln">   787&nbsp;&nbsp;</span>
<span id="L788" class="ln">   788&nbsp;&nbsp;</span>	PT_AARCH64_ARCHEXT ProgType = 0x70000000 <span class="comment">/* Architecture compatibility */</span>
<span id="L789" class="ln">   789&nbsp;&nbsp;</span>	PT_AARCH64_UNWIND  ProgType = 0x70000001 <span class="comment">/* Exception unwind tables */</span>
<span id="L790" class="ln">   790&nbsp;&nbsp;</span>
<span id="L791" class="ln">   791&nbsp;&nbsp;</span>	PT_MIPS_REGINFO  ProgType = 0x70000000 <span class="comment">/* Register usage */</span>
<span id="L792" class="ln">   792&nbsp;&nbsp;</span>	PT_MIPS_RTPROC   ProgType = 0x70000001 <span class="comment">/* Runtime procedures */</span>
<span id="L793" class="ln">   793&nbsp;&nbsp;</span>	PT_MIPS_OPTIONS  ProgType = 0x70000002 <span class="comment">/* Options */</span>
<span id="L794" class="ln">   794&nbsp;&nbsp;</span>	PT_MIPS_ABIFLAGS ProgType = 0x70000003 <span class="comment">/* ABI flags */</span>
<span id="L795" class="ln">   795&nbsp;&nbsp;</span>
<span id="L796" class="ln">   796&nbsp;&nbsp;</span>	PT_S390_PGSTE ProgType = 0x70000000 <span class="comment">/* 4k page table size */</span>
<span id="L797" class="ln">   797&nbsp;&nbsp;</span>
<span id="L798" class="ln">   798&nbsp;&nbsp;</span>	PT_HIPROC ProgType = 0x7fffffff <span class="comment">/* Last processor-specific type. */</span>
<span id="L799" class="ln">   799&nbsp;&nbsp;</span>)
<span id="L800" class="ln">   800&nbsp;&nbsp;</span>
<span id="L801" class="ln">   801&nbsp;&nbsp;</span>var ptStrings = []intName{
<span id="L802" class="ln">   802&nbsp;&nbsp;</span>	{0, &#34;PT_NULL&#34;},
<span id="L803" class="ln">   803&nbsp;&nbsp;</span>	{1, &#34;PT_LOAD&#34;},
<span id="L804" class="ln">   804&nbsp;&nbsp;</span>	{2, &#34;PT_DYNAMIC&#34;},
<span id="L805" class="ln">   805&nbsp;&nbsp;</span>	{3, &#34;PT_INTERP&#34;},
<span id="L806" class="ln">   806&nbsp;&nbsp;</span>	{4, &#34;PT_NOTE&#34;},
<span id="L807" class="ln">   807&nbsp;&nbsp;</span>	{5, &#34;PT_SHLIB&#34;},
<span id="L808" class="ln">   808&nbsp;&nbsp;</span>	{6, &#34;PT_PHDR&#34;},
<span id="L809" class="ln">   809&nbsp;&nbsp;</span>	{7, &#34;PT_TLS&#34;},
<span id="L810" class="ln">   810&nbsp;&nbsp;</span>	{0x60000000, &#34;PT_LOOS&#34;},
<span id="L811" class="ln">   811&nbsp;&nbsp;</span>	{0x6474e550, &#34;PT_GNU_EH_FRAME&#34;},
<span id="L812" class="ln">   812&nbsp;&nbsp;</span>	{0x6474e551, &#34;PT_GNU_STACK&#34;},
<span id="L813" class="ln">   813&nbsp;&nbsp;</span>	{0x6474e552, &#34;PT_GNU_RELRO&#34;},
<span id="L814" class="ln">   814&nbsp;&nbsp;</span>	{0x6474e553, &#34;PT_GNU_PROPERTY&#34;},
<span id="L815" class="ln">   815&nbsp;&nbsp;</span>	{0x65041580, &#34;PT_PAX_FLAGS&#34;},
<span id="L816" class="ln">   816&nbsp;&nbsp;</span>	{0x65a3dbe6, &#34;PT_OPENBSD_RANDOMIZE&#34;},
<span id="L817" class="ln">   817&nbsp;&nbsp;</span>	{0x65a3dbe7, &#34;PT_OPENBSD_WXNEEDED&#34;},
<span id="L818" class="ln">   818&nbsp;&nbsp;</span>	{0x65a41be6, &#34;PT_OPENBSD_BOOTDATA&#34;},
<span id="L819" class="ln">   819&nbsp;&nbsp;</span>	{0x6ffffffb, &#34;PT_SUNWSTACK&#34;},
<span id="L820" class="ln">   820&nbsp;&nbsp;</span>	{0x6fffffff, &#34;PT_HIOS&#34;},
<span id="L821" class="ln">   821&nbsp;&nbsp;</span>	{0x70000000, &#34;PT_LOPROC&#34;},
<span id="L822" class="ln">   822&nbsp;&nbsp;</span>	<span class="comment">// We don&#39;t list the processor-dependent ProgTypes,</span>
<span id="L823" class="ln">   823&nbsp;&nbsp;</span>	<span class="comment">// as the values overlap.</span>
<span id="L824" class="ln">   824&nbsp;&nbsp;</span>	{0x7fffffff, &#34;PT_HIPROC&#34;},
<span id="L825" class="ln">   825&nbsp;&nbsp;</span>}
<span id="L826" class="ln">   826&nbsp;&nbsp;</span>
<span id="L827" class="ln">   827&nbsp;&nbsp;</span>func (i ProgType) String() string   { return stringName(uint32(i), ptStrings, false) }
<span id="L828" class="ln">   828&nbsp;&nbsp;</span>func (i ProgType) GoString() string { return stringName(uint32(i), ptStrings, true) }
<span id="L829" class="ln">   829&nbsp;&nbsp;</span>
<span id="L830" class="ln">   830&nbsp;&nbsp;</span><span class="comment">// Prog.Flag</span>
<span id="L831" class="ln">   831&nbsp;&nbsp;</span>type ProgFlag uint32
<span id="L832" class="ln">   832&nbsp;&nbsp;</span>
<span id="L833" class="ln">   833&nbsp;&nbsp;</span>const (
<span id="L834" class="ln">   834&nbsp;&nbsp;</span>	PF_X        ProgFlag = 0x1        <span class="comment">/* Executable. */</span>
<span id="L835" class="ln">   835&nbsp;&nbsp;</span>	PF_W        ProgFlag = 0x2        <span class="comment">/* Writable. */</span>
<span id="L836" class="ln">   836&nbsp;&nbsp;</span>	PF_R        ProgFlag = 0x4        <span class="comment">/* Readable. */</span>
<span id="L837" class="ln">   837&nbsp;&nbsp;</span>	PF_MASKOS   ProgFlag = 0x0ff00000 <span class="comment">/* Operating system-specific. */</span>
<span id="L838" class="ln">   838&nbsp;&nbsp;</span>	PF_MASKPROC ProgFlag = 0xf0000000 <span class="comment">/* Processor-specific. */</span>
<span id="L839" class="ln">   839&nbsp;&nbsp;</span>)
<span id="L840" class="ln">   840&nbsp;&nbsp;</span>
<span id="L841" class="ln">   841&nbsp;&nbsp;</span>var pfStrings = []intName{
<span id="L842" class="ln">   842&nbsp;&nbsp;</span>	{0x1, &#34;PF_X&#34;},
<span id="L843" class="ln">   843&nbsp;&nbsp;</span>	{0x2, &#34;PF_W&#34;},
<span id="L844" class="ln">   844&nbsp;&nbsp;</span>	{0x4, &#34;PF_R&#34;},
<span id="L845" class="ln">   845&nbsp;&nbsp;</span>}
<span id="L846" class="ln">   846&nbsp;&nbsp;</span>
<span id="L847" class="ln">   847&nbsp;&nbsp;</span>func (i ProgFlag) String() string   { return flagName(uint32(i), pfStrings, false) }
<span id="L848" class="ln">   848&nbsp;&nbsp;</span>func (i ProgFlag) GoString() string { return flagName(uint32(i), pfStrings, true) }
<span id="L849" class="ln">   849&nbsp;&nbsp;</span>
<span id="L850" class="ln">   850&nbsp;&nbsp;</span><span class="comment">// Dyn.Tag</span>
<span id="L851" class="ln">   851&nbsp;&nbsp;</span>type DynTag int
<span id="L852" class="ln">   852&nbsp;&nbsp;</span>
<span id="L853" class="ln">   853&nbsp;&nbsp;</span>const (
<span id="L854" class="ln">   854&nbsp;&nbsp;</span>	DT_NULL         DynTag = 0  <span class="comment">/* Terminating entry. */</span>
<span id="L855" class="ln">   855&nbsp;&nbsp;</span>	DT_NEEDED       DynTag = 1  <span class="comment">/* String table offset of a needed shared library. */</span>
<span id="L856" class="ln">   856&nbsp;&nbsp;</span>	DT_PLTRELSZ     DynTag = 2  <span class="comment">/* Total size in bytes of PLT relocations. */</span>
<span id="L857" class="ln">   857&nbsp;&nbsp;</span>	DT_PLTGOT       DynTag = 3  <span class="comment">/* Processor-dependent address. */</span>
<span id="L858" class="ln">   858&nbsp;&nbsp;</span>	DT_HASH         DynTag = 4  <span class="comment">/* Address of symbol hash table. */</span>
<span id="L859" class="ln">   859&nbsp;&nbsp;</span>	DT_STRTAB       DynTag = 5  <span class="comment">/* Address of string table. */</span>
<span id="L860" class="ln">   860&nbsp;&nbsp;</span>	DT_SYMTAB       DynTag = 6  <span class="comment">/* Address of symbol table. */</span>
<span id="L861" class="ln">   861&nbsp;&nbsp;</span>	DT_RELA         DynTag = 7  <span class="comment">/* Address of ElfNN_Rela relocations. */</span>
<span id="L862" class="ln">   862&nbsp;&nbsp;</span>	DT_RELASZ       DynTag = 8  <span class="comment">/* Total size of ElfNN_Rela relocations. */</span>
<span id="L863" class="ln">   863&nbsp;&nbsp;</span>	DT_RELAENT      DynTag = 9  <span class="comment">/* Size of each ElfNN_Rela relocation entry. */</span>
<span id="L864" class="ln">   864&nbsp;&nbsp;</span>	DT_STRSZ        DynTag = 10 <span class="comment">/* Size of string table. */</span>
<span id="L865" class="ln">   865&nbsp;&nbsp;</span>	DT_SYMENT       DynTag = 11 <span class="comment">/* Size of each symbol table entry. */</span>
<span id="L866" class="ln">   866&nbsp;&nbsp;</span>	DT_INIT         DynTag = 12 <span class="comment">/* Address of initialization function. */</span>
<span id="L867" class="ln">   867&nbsp;&nbsp;</span>	DT_FINI         DynTag = 13 <span class="comment">/* Address of finalization function. */</span>
<span id="L868" class="ln">   868&nbsp;&nbsp;</span>	DT_SONAME       DynTag = 14 <span class="comment">/* String table offset of shared object name. */</span>
<span id="L869" class="ln">   869&nbsp;&nbsp;</span>	DT_RPATH        DynTag = 15 <span class="comment">/* String table offset of library path. [sup] */</span>
<span id="L870" class="ln">   870&nbsp;&nbsp;</span>	DT_SYMBOLIC     DynTag = 16 <span class="comment">/* Indicates &#34;symbolic&#34; linking. [sup] */</span>
<span id="L871" class="ln">   871&nbsp;&nbsp;</span>	DT_REL          DynTag = 17 <span class="comment">/* Address of ElfNN_Rel relocations. */</span>
<span id="L872" class="ln">   872&nbsp;&nbsp;</span>	DT_RELSZ        DynTag = 18 <span class="comment">/* Total size of ElfNN_Rel relocations. */</span>
<span id="L873" class="ln">   873&nbsp;&nbsp;</span>	DT_RELENT       DynTag = 19 <span class="comment">/* Size of each ElfNN_Rel relocation. */</span>
<span id="L874" class="ln">   874&nbsp;&nbsp;</span>	DT_PLTREL       DynTag = 20 <span class="comment">/* Type of relocation used for PLT. */</span>
<span id="L875" class="ln">   875&nbsp;&nbsp;</span>	DT_DEBUG        DynTag = 21 <span class="comment">/* Reserved (not used). */</span>
<span id="L876" class="ln">   876&nbsp;&nbsp;</span>	DT_TEXTREL      DynTag = 22 <span class="comment">/* Indicates there may be relocations in non-writable segments. [sup] */</span>
<span id="L877" class="ln">   877&nbsp;&nbsp;</span>	DT_JMPREL       DynTag = 23 <span class="comment">/* Address of PLT relocations. */</span>
<span id="L878" class="ln">   878&nbsp;&nbsp;</span>	DT_BIND_NOW     DynTag = 24 <span class="comment">/* [sup] */</span>
<span id="L879" class="ln">   879&nbsp;&nbsp;</span>	DT_INIT_ARRAY   DynTag = 25 <span class="comment">/* Address of the array of pointers to initialization functions */</span>
<span id="L880" class="ln">   880&nbsp;&nbsp;</span>	DT_FINI_ARRAY   DynTag = 26 <span class="comment">/* Address of the array of pointers to termination functions */</span>
<span id="L881" class="ln">   881&nbsp;&nbsp;</span>	DT_INIT_ARRAYSZ DynTag = 27 <span class="comment">/* Size in bytes of the array of initialization functions. */</span>
<span id="L882" class="ln">   882&nbsp;&nbsp;</span>	DT_FINI_ARRAYSZ DynTag = 28 <span class="comment">/* Size in bytes of the array of termination functions. */</span>
<span id="L883" class="ln">   883&nbsp;&nbsp;</span>	DT_RUNPATH      DynTag = 29 <span class="comment">/* String table offset of a null-terminated library search path string. */</span>
<span id="L884" class="ln">   884&nbsp;&nbsp;</span>	DT_FLAGS        DynTag = 30 <span class="comment">/* Object specific flag values. */</span>
<span id="L885" class="ln">   885&nbsp;&nbsp;</span>	DT_ENCODING     DynTag = 32 <span class="comment">/* Values greater than or equal to DT_ENCODING
<span id="L886" class="ln">   886&nbsp;&nbsp;</span>	   and less than DT_LOOS follow the rules for
<span id="L887" class="ln">   887&nbsp;&nbsp;</span>	   the interpretation of the d_un union
<span id="L888" class="ln">   888&nbsp;&nbsp;</span>	   as follows: even == &#39;d_ptr&#39;, even == &#39;d_val&#39;
<span id="L889" class="ln">   889&nbsp;&nbsp;</span>	   or none */</span>
<span id="L890" class="ln">   890&nbsp;&nbsp;</span>	DT_PREINIT_ARRAY   DynTag = 32 <span class="comment">/* Address of the array of pointers to pre-initialization functions. */</span>
<span id="L891" class="ln">   891&nbsp;&nbsp;</span>	DT_PREINIT_ARRAYSZ DynTag = 33 <span class="comment">/* Size in bytes of the array of pre-initialization functions. */</span>
<span id="L892" class="ln">   892&nbsp;&nbsp;</span>	DT_SYMTAB_SHNDX    DynTag = 34 <span class="comment">/* Address of SHT_SYMTAB_SHNDX section. */</span>
<span id="L893" class="ln">   893&nbsp;&nbsp;</span>
<span id="L894" class="ln">   894&nbsp;&nbsp;</span>	DT_LOOS DynTag = 0x6000000d <span class="comment">/* First OS-specific */</span>
<span id="L895" class="ln">   895&nbsp;&nbsp;</span>	DT_HIOS DynTag = 0x6ffff000 <span class="comment">/* Last OS-specific */</span>
<span id="L896" class="ln">   896&nbsp;&nbsp;</span>
<span id="L897" class="ln">   897&nbsp;&nbsp;</span>	DT_VALRNGLO       DynTag = 0x6ffffd00
<span id="L898" class="ln">   898&nbsp;&nbsp;</span>	DT_GNU_PRELINKED  DynTag = 0x6ffffdf5
<span id="L899" class="ln">   899&nbsp;&nbsp;</span>	DT_GNU_CONFLICTSZ DynTag = 0x6ffffdf6
<span id="L900" class="ln">   900&nbsp;&nbsp;</span>	DT_GNU_LIBLISTSZ  DynTag = 0x6ffffdf7
<span id="L901" class="ln">   901&nbsp;&nbsp;</span>	DT_CHECKSUM       DynTag = 0x6ffffdf8
<span id="L902" class="ln">   902&nbsp;&nbsp;</span>	DT_PLTPADSZ       DynTag = 0x6ffffdf9
<span id="L903" class="ln">   903&nbsp;&nbsp;</span>	DT_MOVEENT        DynTag = 0x6ffffdfa
<span id="L904" class="ln">   904&nbsp;&nbsp;</span>	DT_MOVESZ         DynTag = 0x6ffffdfb
<span id="L905" class="ln">   905&nbsp;&nbsp;</span>	DT_FEATURE        DynTag = 0x6ffffdfc
<span id="L906" class="ln">   906&nbsp;&nbsp;</span>	DT_POSFLAG_1      DynTag = 0x6ffffdfd
<span id="L907" class="ln">   907&nbsp;&nbsp;</span>	DT_SYMINSZ        DynTag = 0x6ffffdfe
<span id="L908" class="ln">   908&nbsp;&nbsp;</span>	DT_SYMINENT       DynTag = 0x6ffffdff
<span id="L909" class="ln">   909&nbsp;&nbsp;</span>	DT_VALRNGHI       DynTag = 0x6ffffdff
<span id="L910" class="ln">   910&nbsp;&nbsp;</span>
<span id="L911" class="ln">   911&nbsp;&nbsp;</span>	DT_ADDRRNGLO    DynTag = 0x6ffffe00
<span id="L912" class="ln">   912&nbsp;&nbsp;</span>	DT_GNU_HASH     DynTag = 0x6ffffef5
<span id="L913" class="ln">   913&nbsp;&nbsp;</span>	DT_TLSDESC_PLT  DynTag = 0x6ffffef6
<span id="L914" class="ln">   914&nbsp;&nbsp;</span>	DT_TLSDESC_GOT  DynTag = 0x6ffffef7
<span id="L915" class="ln">   915&nbsp;&nbsp;</span>	DT_GNU_CONFLICT DynTag = 0x6ffffef8
<span id="L916" class="ln">   916&nbsp;&nbsp;</span>	DT_GNU_LIBLIST  DynTag = 0x6ffffef9
<span id="L917" class="ln">   917&nbsp;&nbsp;</span>	DT_CONFIG       DynTag = 0x6ffffefa
<span id="L918" class="ln">   918&nbsp;&nbsp;</span>	DT_DEPAUDIT     DynTag = 0x6ffffefb
<span id="L919" class="ln">   919&nbsp;&nbsp;</span>	DT_AUDIT        DynTag = 0x6ffffefc
<span id="L920" class="ln">   920&nbsp;&nbsp;</span>	DT_PLTPAD       DynTag = 0x6ffffefd
<span id="L921" class="ln">   921&nbsp;&nbsp;</span>	DT_MOVETAB      DynTag = 0x6ffffefe
<span id="L922" class="ln">   922&nbsp;&nbsp;</span>	DT_SYMINFO      DynTag = 0x6ffffeff
<span id="L923" class="ln">   923&nbsp;&nbsp;</span>	DT_ADDRRNGHI    DynTag = 0x6ffffeff
<span id="L924" class="ln">   924&nbsp;&nbsp;</span>
<span id="L925" class="ln">   925&nbsp;&nbsp;</span>	DT_VERSYM     DynTag = 0x6ffffff0
<span id="L926" class="ln">   926&nbsp;&nbsp;</span>	DT_RELACOUNT  DynTag = 0x6ffffff9
<span id="L927" class="ln">   927&nbsp;&nbsp;</span>	DT_RELCOUNT   DynTag = 0x6ffffffa
<span id="L928" class="ln">   928&nbsp;&nbsp;</span>	DT_FLAGS_1    DynTag = 0x6ffffffb
<span id="L929" class="ln">   929&nbsp;&nbsp;</span>	DT_VERDEF     DynTag = 0x6ffffffc
<span id="L930" class="ln">   930&nbsp;&nbsp;</span>	DT_VERDEFNUM  DynTag = 0x6ffffffd
<span id="L931" class="ln">   931&nbsp;&nbsp;</span>	DT_VERNEED    DynTag = 0x6ffffffe
<span id="L932" class="ln">   932&nbsp;&nbsp;</span>	DT_VERNEEDNUM DynTag = 0x6fffffff
<span id="L933" class="ln">   933&nbsp;&nbsp;</span>
<span id="L934" class="ln">   934&nbsp;&nbsp;</span>	DT_LOPROC DynTag = 0x70000000 <span class="comment">/* First processor-specific type. */</span>
<span id="L935" class="ln">   935&nbsp;&nbsp;</span>
<span id="L936" class="ln">   936&nbsp;&nbsp;</span>	DT_MIPS_RLD_VERSION           DynTag = 0x70000001
<span id="L937" class="ln">   937&nbsp;&nbsp;</span>	DT_MIPS_TIME_STAMP            DynTag = 0x70000002
<span id="L938" class="ln">   938&nbsp;&nbsp;</span>	DT_MIPS_ICHECKSUM             DynTag = 0x70000003
<span id="L939" class="ln">   939&nbsp;&nbsp;</span>	DT_MIPS_IVERSION              DynTag = 0x70000004
<span id="L940" class="ln">   940&nbsp;&nbsp;</span>	DT_MIPS_FLAGS                 DynTag = 0x70000005
<span id="L941" class="ln">   941&nbsp;&nbsp;</span>	DT_MIPS_BASE_ADDRESS          DynTag = 0x70000006
<span id="L942" class="ln">   942&nbsp;&nbsp;</span>	DT_MIPS_MSYM                  DynTag = 0x70000007
<span id="L943" class="ln">   943&nbsp;&nbsp;</span>	DT_MIPS_CONFLICT              DynTag = 0x70000008
<span id="L944" class="ln">   944&nbsp;&nbsp;</span>	DT_MIPS_LIBLIST               DynTag = 0x70000009
<span id="L945" class="ln">   945&nbsp;&nbsp;</span>	DT_MIPS_LOCAL_GOTNO           DynTag = 0x7000000a
<span id="L946" class="ln">   946&nbsp;&nbsp;</span>	DT_MIPS_CONFLICTNO            DynTag = 0x7000000b
<span id="L947" class="ln">   947&nbsp;&nbsp;</span>	DT_MIPS_LIBLISTNO             DynTag = 0x70000010
<span id="L948" class="ln">   948&nbsp;&nbsp;</span>	DT_MIPS_SYMTABNO              DynTag = 0x70000011
<span id="L949" class="ln">   949&nbsp;&nbsp;</span>	DT_MIPS_UNREFEXTNO            DynTag = 0x70000012
<span id="L950" class="ln">   950&nbsp;&nbsp;</span>	DT_MIPS_GOTSYM                DynTag = 0x70000013
<span id="L951" class="ln">   951&nbsp;&nbsp;</span>	DT_MIPS_HIPAGENO              DynTag = 0x70000014
<span id="L952" class="ln">   952&nbsp;&nbsp;</span>	DT_MIPS_RLD_MAP               DynTag = 0x70000016
<span id="L953" class="ln">   953&nbsp;&nbsp;</span>	DT_MIPS_DELTA_CLASS           DynTag = 0x70000017
<span id="L954" class="ln">   954&nbsp;&nbsp;</span>	DT_MIPS_DELTA_CLASS_NO        DynTag = 0x70000018
<span id="L955" class="ln">   955&nbsp;&nbsp;</span>	DT_MIPS_DELTA_INSTANCE        DynTag = 0x70000019
<span id="L956" class="ln">   956&nbsp;&nbsp;</span>	DT_MIPS_DELTA_INSTANCE_NO     DynTag = 0x7000001a
<span id="L957" class="ln">   957&nbsp;&nbsp;</span>	DT_MIPS_DELTA_RELOC           DynTag = 0x7000001b
<span id="L958" class="ln">   958&nbsp;&nbsp;</span>	DT_MIPS_DELTA_RELOC_NO        DynTag = 0x7000001c
<span id="L959" class="ln">   959&nbsp;&nbsp;</span>	DT_MIPS_DELTA_SYM             DynTag = 0x7000001d
<span id="L960" class="ln">   960&nbsp;&nbsp;</span>	DT_MIPS_DELTA_SYM_NO          DynTag = 0x7000001e
<span id="L961" class="ln">   961&nbsp;&nbsp;</span>	DT_MIPS_DELTA_CLASSSYM        DynTag = 0x70000020
<span id="L962" class="ln">   962&nbsp;&nbsp;</span>	DT_MIPS_DELTA_CLASSSYM_NO     DynTag = 0x70000021
<span id="L963" class="ln">   963&nbsp;&nbsp;</span>	DT_MIPS_CXX_FLAGS             DynTag = 0x70000022
<span id="L964" class="ln">   964&nbsp;&nbsp;</span>	DT_MIPS_PIXIE_INIT            DynTag = 0x70000023
<span id="L965" class="ln">   965&nbsp;&nbsp;</span>	DT_MIPS_SYMBOL_LIB            DynTag = 0x70000024
<span id="L966" class="ln">   966&nbsp;&nbsp;</span>	DT_MIPS_LOCALPAGE_GOTIDX      DynTag = 0x70000025
<span id="L967" class="ln">   967&nbsp;&nbsp;</span>	DT_MIPS_LOCAL_GOTIDX          DynTag = 0x70000026
<span id="L968" class="ln">   968&nbsp;&nbsp;</span>	DT_MIPS_HIDDEN_GOTIDX         DynTag = 0x70000027
<span id="L969" class="ln">   969&nbsp;&nbsp;</span>	DT_MIPS_PROTECTED_GOTIDX      DynTag = 0x70000028
<span id="L970" class="ln">   970&nbsp;&nbsp;</span>	DT_MIPS_OPTIONS               DynTag = 0x70000029
<span id="L971" class="ln">   971&nbsp;&nbsp;</span>	DT_MIPS_INTERFACE             DynTag = 0x7000002a
<span id="L972" class="ln">   972&nbsp;&nbsp;</span>	DT_MIPS_DYNSTR_ALIGN          DynTag = 0x7000002b
<span id="L973" class="ln">   973&nbsp;&nbsp;</span>	DT_MIPS_INTERFACE_SIZE        DynTag = 0x7000002c
<span id="L974" class="ln">   974&nbsp;&nbsp;</span>	DT_MIPS_RLD_TEXT_RESOLVE_ADDR DynTag = 0x7000002d
<span id="L975" class="ln">   975&nbsp;&nbsp;</span>	DT_MIPS_PERF_SUFFIX           DynTag = 0x7000002e
<span id="L976" class="ln">   976&nbsp;&nbsp;</span>	DT_MIPS_COMPACT_SIZE          DynTag = 0x7000002f
<span id="L977" class="ln">   977&nbsp;&nbsp;</span>	DT_MIPS_GP_VALUE              DynTag = 0x70000030
<span id="L978" class="ln">   978&nbsp;&nbsp;</span>	DT_MIPS_AUX_DYNAMIC           DynTag = 0x70000031
<span id="L979" class="ln">   979&nbsp;&nbsp;</span>	DT_MIPS_PLTGOT                DynTag = 0x70000032
<span id="L980" class="ln">   980&nbsp;&nbsp;</span>	DT_MIPS_RWPLT                 DynTag = 0x70000034
<span id="L981" class="ln">   981&nbsp;&nbsp;</span>	DT_MIPS_RLD_MAP_REL           DynTag = 0x70000035
<span id="L982" class="ln">   982&nbsp;&nbsp;</span>
<span id="L983" class="ln">   983&nbsp;&nbsp;</span>	DT_PPC_GOT DynTag = 0x70000000
<span id="L984" class="ln">   984&nbsp;&nbsp;</span>	DT_PPC_OPT DynTag = 0x70000001
<span id="L985" class="ln">   985&nbsp;&nbsp;</span>
<span id="L986" class="ln">   986&nbsp;&nbsp;</span>	DT_PPC64_GLINK DynTag = 0x70000000
<span id="L987" class="ln">   987&nbsp;&nbsp;</span>	DT_PPC64_OPD   DynTag = 0x70000001
<span id="L988" class="ln">   988&nbsp;&nbsp;</span>	DT_PPC64_OPDSZ DynTag = 0x70000002
<span id="L989" class="ln">   989&nbsp;&nbsp;</span>	DT_PPC64_OPT   DynTag = 0x70000003
<span id="L990" class="ln">   990&nbsp;&nbsp;</span>
<span id="L991" class="ln">   991&nbsp;&nbsp;</span>	DT_SPARC_REGISTER DynTag = 0x70000001
<span id="L992" class="ln">   992&nbsp;&nbsp;</span>
<span id="L993" class="ln">   993&nbsp;&nbsp;</span>	DT_AUXILIARY DynTag = 0x7ffffffd
<span id="L994" class="ln">   994&nbsp;&nbsp;</span>	DT_USED      DynTag = 0x7ffffffe
<span id="L995" class="ln">   995&nbsp;&nbsp;</span>	DT_FILTER    DynTag = 0x7fffffff
<span id="L996" class="ln">   996&nbsp;&nbsp;</span>
<span id="L997" class="ln">   997&nbsp;&nbsp;</span>	DT_HIPROC DynTag = 0x7fffffff <span class="comment">/* Last processor-specific type. */</span>
<span id="L998" class="ln">   998&nbsp;&nbsp;</span>)
<span id="L999" class="ln">   999&nbsp;&nbsp;</span>
<span id="L1000" class="ln">  1000&nbsp;&nbsp;</span>var dtStrings = []intName{
<span id="L1001" class="ln">  1001&nbsp;&nbsp;</span>	{0, &#34;DT_NULL&#34;},
<span id="L1002" class="ln">  1002&nbsp;&nbsp;</span>	{1, &#34;DT_NEEDED&#34;},
<span id="L1003" class="ln">  1003&nbsp;&nbsp;</span>	{2, &#34;DT_PLTRELSZ&#34;},
<span id="L1004" class="ln">  1004&nbsp;&nbsp;</span>	{3, &#34;DT_PLTGOT&#34;},
<span id="L1005" class="ln">  1005&nbsp;&nbsp;</span>	{4, &#34;DT_HASH&#34;},
<span id="L1006" class="ln">  1006&nbsp;&nbsp;</span>	{5, &#34;DT_STRTAB&#34;},
<span id="L1007" class="ln">  1007&nbsp;&nbsp;</span>	{6, &#34;DT_SYMTAB&#34;},
<span id="L1008" class="ln">  1008&nbsp;&nbsp;</span>	{7, &#34;DT_RELA&#34;},
<span id="L1009" class="ln">  1009&nbsp;&nbsp;</span>	{8, &#34;DT_RELASZ&#34;},
<span id="L1010" class="ln">  1010&nbsp;&nbsp;</span>	{9, &#34;DT_RELAENT&#34;},
<span id="L1011" class="ln">  1011&nbsp;&nbsp;</span>	{10, &#34;DT_STRSZ&#34;},
<span id="L1012" class="ln">  1012&nbsp;&nbsp;</span>	{11, &#34;DT_SYMENT&#34;},
<span id="L1013" class="ln">  1013&nbsp;&nbsp;</span>	{12, &#34;DT_INIT&#34;},
<span id="L1014" class="ln">  1014&nbsp;&nbsp;</span>	{13, &#34;DT_FINI&#34;},
<span id="L1015" class="ln">  1015&nbsp;&nbsp;</span>	{14, &#34;DT_SONAME&#34;},
<span id="L1016" class="ln">  1016&nbsp;&nbsp;</span>	{15, &#34;DT_RPATH&#34;},
<span id="L1017" class="ln">  1017&nbsp;&nbsp;</span>	{16, &#34;DT_SYMBOLIC&#34;},
<span id="L1018" class="ln">  1018&nbsp;&nbsp;</span>	{17, &#34;DT_REL&#34;},
<span id="L1019" class="ln">  1019&nbsp;&nbsp;</span>	{18, &#34;DT_RELSZ&#34;},
<span id="L1020" class="ln">  1020&nbsp;&nbsp;</span>	{19, &#34;DT_RELENT&#34;},
<span id="L1021" class="ln">  1021&nbsp;&nbsp;</span>	{20, &#34;DT_PLTREL&#34;},
<span id="L1022" class="ln">  1022&nbsp;&nbsp;</span>	{21, &#34;DT_DEBUG&#34;},
<span id="L1023" class="ln">  1023&nbsp;&nbsp;</span>	{22, &#34;DT_TEXTREL&#34;},
<span id="L1024" class="ln">  1024&nbsp;&nbsp;</span>	{23, &#34;DT_JMPREL&#34;},
<span id="L1025" class="ln">  1025&nbsp;&nbsp;</span>	{24, &#34;DT_BIND_NOW&#34;},
<span id="L1026" class="ln">  1026&nbsp;&nbsp;</span>	{25, &#34;DT_INIT_ARRAY&#34;},
<span id="L1027" class="ln">  1027&nbsp;&nbsp;</span>	{26, &#34;DT_FINI_ARRAY&#34;},
<span id="L1028" class="ln">  1028&nbsp;&nbsp;</span>	{27, &#34;DT_INIT_ARRAYSZ&#34;},
<span id="L1029" class="ln">  1029&nbsp;&nbsp;</span>	{28, &#34;DT_FINI_ARRAYSZ&#34;},
<span id="L1030" class="ln">  1030&nbsp;&nbsp;</span>	{29, &#34;DT_RUNPATH&#34;},
<span id="L1031" class="ln">  1031&nbsp;&nbsp;</span>	{30, &#34;DT_FLAGS&#34;},
<span id="L1032" class="ln">  1032&nbsp;&nbsp;</span>	{32, &#34;DT_ENCODING&#34;},
<span id="L1033" class="ln">  1033&nbsp;&nbsp;</span>	{32, &#34;DT_PREINIT_ARRAY&#34;},
<span id="L1034" class="ln">  1034&nbsp;&nbsp;</span>	{33, &#34;DT_PREINIT_ARRAYSZ&#34;},
<span id="L1035" class="ln">  1035&nbsp;&nbsp;</span>	{34, &#34;DT_SYMTAB_SHNDX&#34;},
<span id="L1036" class="ln">  1036&nbsp;&nbsp;</span>	{0x6000000d, &#34;DT_LOOS&#34;},
<span id="L1037" class="ln">  1037&nbsp;&nbsp;</span>	{0x6ffff000, &#34;DT_HIOS&#34;},
<span id="L1038" class="ln">  1038&nbsp;&nbsp;</span>	{0x6ffffd00, &#34;DT_VALRNGLO&#34;},
<span id="L1039" class="ln">  1039&nbsp;&nbsp;</span>	{0x6ffffdf5, &#34;DT_GNU_PRELINKED&#34;},
<span id="L1040" class="ln">  1040&nbsp;&nbsp;</span>	{0x6ffffdf6, &#34;DT_GNU_CONFLICTSZ&#34;},
<span id="L1041" class="ln">  1041&nbsp;&nbsp;</span>	{0x6ffffdf7, &#34;DT_GNU_LIBLISTSZ&#34;},
<span id="L1042" class="ln">  1042&nbsp;&nbsp;</span>	{0x6ffffdf8, &#34;DT_CHECKSUM&#34;},
<span id="L1043" class="ln">  1043&nbsp;&nbsp;</span>	{0x6ffffdf9, &#34;DT_PLTPADSZ&#34;},
<span id="L1044" class="ln">  1044&nbsp;&nbsp;</span>	{0x6ffffdfa, &#34;DT_MOVEENT&#34;},
<span id="L1045" class="ln">  1045&nbsp;&nbsp;</span>	{0x6ffffdfb, &#34;DT_MOVESZ&#34;},
<span id="L1046" class="ln">  1046&nbsp;&nbsp;</span>	{0x6ffffdfc, &#34;DT_FEATURE&#34;},
<span id="L1047" class="ln">  1047&nbsp;&nbsp;</span>	{0x6ffffdfd, &#34;DT_POSFLAG_1&#34;},
<span id="L1048" class="ln">  1048&nbsp;&nbsp;</span>	{0x6ffffdfe, &#34;DT_SYMINSZ&#34;},
<span id="L1049" class="ln">  1049&nbsp;&nbsp;</span>	{0x6ffffdff, &#34;DT_SYMINENT&#34;},
<span id="L1050" class="ln">  1050&nbsp;&nbsp;</span>	{0x6ffffdff, &#34;DT_VALRNGHI&#34;},
<span id="L1051" class="ln">  1051&nbsp;&nbsp;</span>	{0x6ffffe00, &#34;DT_ADDRRNGLO&#34;},
<span id="L1052" class="ln">  1052&nbsp;&nbsp;</span>	{0x6ffffef5, &#34;DT_GNU_HASH&#34;},
<span id="L1053" class="ln">  1053&nbsp;&nbsp;</span>	{0x6ffffef6, &#34;DT_TLSDESC_PLT&#34;},
<span id="L1054" class="ln">  1054&nbsp;&nbsp;</span>	{0x6ffffef7, &#34;DT_TLSDESC_GOT&#34;},
<span id="L1055" class="ln">  1055&nbsp;&nbsp;</span>	{0x6ffffef8, &#34;DT_GNU_CONFLICT&#34;},
<span id="L1056" class="ln">  1056&nbsp;&nbsp;</span>	{0x6ffffef9, &#34;DT_GNU_LIBLIST&#34;},
<span id="L1057" class="ln">  1057&nbsp;&nbsp;</span>	{0x6ffffefa, &#34;DT_CONFIG&#34;},
<span id="L1058" class="ln">  1058&nbsp;&nbsp;</span>	{0x6ffffefb, &#34;DT_DEPAUDIT&#34;},
<span id="L1059" class="ln">  1059&nbsp;&nbsp;</span>	{0x6ffffefc, &#34;DT_AUDIT&#34;},
<span id="L1060" class="ln">  1060&nbsp;&nbsp;</span>	{0x6ffffefd, &#34;DT_PLTPAD&#34;},
<span id="L1061" class="ln">  1061&nbsp;&nbsp;</span>	{0x6ffffefe, &#34;DT_MOVETAB&#34;},
<span id="L1062" class="ln">  1062&nbsp;&nbsp;</span>	{0x6ffffeff, &#34;DT_SYMINFO&#34;},
<span id="L1063" class="ln">  1063&nbsp;&nbsp;</span>	{0x6ffffeff, &#34;DT_ADDRRNGHI&#34;},
<span id="L1064" class="ln">  1064&nbsp;&nbsp;</span>	{0x6ffffff0, &#34;DT_VERSYM&#34;},
<span id="L1065" class="ln">  1065&nbsp;&nbsp;</span>	{0x6ffffff9, &#34;DT_RELACOUNT&#34;},
<span id="L1066" class="ln">  1066&nbsp;&nbsp;</span>	{0x6ffffffa, &#34;DT_RELCOUNT&#34;},
<span id="L1067" class="ln">  1067&nbsp;&nbsp;</span>	{0x6ffffffb, &#34;DT_FLAGS_1&#34;},
<span id="L1068" class="ln">  1068&nbsp;&nbsp;</span>	{0x6ffffffc, &#34;DT_VERDEF&#34;},
<span id="L1069" class="ln">  1069&nbsp;&nbsp;</span>	{0x6ffffffd, &#34;DT_VERDEFNUM&#34;},
<span id="L1070" class="ln">  1070&nbsp;&nbsp;</span>	{0x6ffffffe, &#34;DT_VERNEED&#34;},
<span id="L1071" class="ln">  1071&nbsp;&nbsp;</span>	{0x6fffffff, &#34;DT_VERNEEDNUM&#34;},
<span id="L1072" class="ln">  1072&nbsp;&nbsp;</span>	{0x70000000, &#34;DT_LOPROC&#34;},
<span id="L1073" class="ln">  1073&nbsp;&nbsp;</span>	<span class="comment">// We don&#39;t list the processor-dependent DynTags,</span>
<span id="L1074" class="ln">  1074&nbsp;&nbsp;</span>	<span class="comment">// as the values overlap.</span>
<span id="L1075" class="ln">  1075&nbsp;&nbsp;</span>	{0x7ffffffd, &#34;DT_AUXILIARY&#34;},
<span id="L1076" class="ln">  1076&nbsp;&nbsp;</span>	{0x7ffffffe, &#34;DT_USED&#34;},
<span id="L1077" class="ln">  1077&nbsp;&nbsp;</span>	{0x7fffffff, &#34;DT_FILTER&#34;},
<span id="L1078" class="ln">  1078&nbsp;&nbsp;</span>}
<span id="L1079" class="ln">  1079&nbsp;&nbsp;</span>
<span id="L1080" class="ln">  1080&nbsp;&nbsp;</span>func (i DynTag) String() string   { return stringName(uint32(i), dtStrings, false) }
<span id="L1081" class="ln">  1081&nbsp;&nbsp;</span>func (i DynTag) GoString() string { return stringName(uint32(i), dtStrings, true) }
<span id="L1082" class="ln">  1082&nbsp;&nbsp;</span>
<span id="L1083" class="ln">  1083&nbsp;&nbsp;</span><span class="comment">// DT_FLAGS values.</span>
<span id="L1084" class="ln">  1084&nbsp;&nbsp;</span>type DynFlag int
<span id="L1085" class="ln">  1085&nbsp;&nbsp;</span>
<span id="L1086" class="ln">  1086&nbsp;&nbsp;</span>const (
<span id="L1087" class="ln">  1087&nbsp;&nbsp;</span>	DF_ORIGIN DynFlag = 0x0001 <span class="comment">/* Indicates that the object being loaded may
<span id="L1088" class="ln">  1088&nbsp;&nbsp;</span>	   make reference to the
<span id="L1089" class="ln">  1089&nbsp;&nbsp;</span>	   $ORIGIN substitution string */</span>
<span id="L1090" class="ln">  1090&nbsp;&nbsp;</span>	DF_SYMBOLIC DynFlag = 0x0002 <span class="comment">/* Indicates &#34;symbolic&#34; linking. */</span>
<span id="L1091" class="ln">  1091&nbsp;&nbsp;</span>	DF_TEXTREL  DynFlag = 0x0004 <span class="comment">/* Indicates there may be relocations in non-writable segments. */</span>
<span id="L1092" class="ln">  1092&nbsp;&nbsp;</span>	DF_BIND_NOW DynFlag = 0x0008 <span class="comment">/* Indicates that the dynamic linker should
<span id="L1093" class="ln">  1093&nbsp;&nbsp;</span>	   process all relocations for the object
<span id="L1094" class="ln">  1094&nbsp;&nbsp;</span>	   containing this entry before transferring
<span id="L1095" class="ln">  1095&nbsp;&nbsp;</span>	   control to the program. */</span>
<span id="L1096" class="ln">  1096&nbsp;&nbsp;</span>	DF_STATIC_TLS DynFlag = 0x0010 <span class="comment">/* Indicates that the shared object or
<span id="L1097" class="ln">  1097&nbsp;&nbsp;</span>	   executable contains code using a static
<span id="L1098" class="ln">  1098&nbsp;&nbsp;</span>	   thread-local storage scheme. */</span>
<span id="L1099" class="ln">  1099&nbsp;&nbsp;</span>)
<span id="L1100" class="ln">  1100&nbsp;&nbsp;</span>
<span id="L1101" class="ln">  1101&nbsp;&nbsp;</span>var dflagStrings = []intName{
<span id="L1102" class="ln">  1102&nbsp;&nbsp;</span>	{0x0001, &#34;DF_ORIGIN&#34;},
<span id="L1103" class="ln">  1103&nbsp;&nbsp;</span>	{0x0002, &#34;DF_SYMBOLIC&#34;},
<span id="L1104" class="ln">  1104&nbsp;&nbsp;</span>	{0x0004, &#34;DF_TEXTREL&#34;},
<span id="L1105" class="ln">  1105&nbsp;&nbsp;</span>	{0x0008, &#34;DF_BIND_NOW&#34;},
<span id="L1106" class="ln">  1106&nbsp;&nbsp;</span>	{0x0010, &#34;DF_STATIC_TLS&#34;},
<span id="L1107" class="ln">  1107&nbsp;&nbsp;</span>}
<span id="L1108" class="ln">  1108&nbsp;&nbsp;</span>
<span id="L1109" class="ln">  1109&nbsp;&nbsp;</span><span class="selection">func (i DynFlag) String() string</span>   { return flagName(uint32(i), dflagStrings, false) }
<span id="L1110" class="ln">  1110&nbsp;&nbsp;</span>func (i DynFlag) GoString() string { return flagName(uint32(i), dflagStrings, true) }
<span id="L1111" class="ln">  1111&nbsp;&nbsp;</span>
<span id="L1112" class="ln">  1112&nbsp;&nbsp;</span><span class="comment">// DT_FLAGS_1 values.</span>
<span id="L1113" class="ln">  1113&nbsp;&nbsp;</span>type DynFlag1 uint32
<span id="L1114" class="ln">  1114&nbsp;&nbsp;</span>
<span id="L1115" class="ln">  1115&nbsp;&nbsp;</span>const (
<span id="L1116" class="ln">  1116&nbsp;&nbsp;</span>	<span class="comment">// Indicates that all relocations for this object must be processed before</span>
<span id="L1117" class="ln">  1117&nbsp;&nbsp;</span>	<span class="comment">// returning control to the program.</span>
<span id="L1118" class="ln">  1118&nbsp;&nbsp;</span>	DF_1_NOW DynFlag1 = 0x00000001
<span id="L1119" class="ln">  1119&nbsp;&nbsp;</span>	<span class="comment">// Unused.</span>
<span id="L1120" class="ln">  1120&nbsp;&nbsp;</span>	DF_1_GLOBAL DynFlag1 = 0x00000002
<span id="L1121" class="ln">  1121&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object is a member of a group.</span>
<span id="L1122" class="ln">  1122&nbsp;&nbsp;</span>	DF_1_GROUP DynFlag1 = 0x00000004
<span id="L1123" class="ln">  1123&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object cannot be deleted from a process.</span>
<span id="L1124" class="ln">  1124&nbsp;&nbsp;</span>	DF_1_NODELETE DynFlag1 = 0x00000008
<span id="L1125" class="ln">  1125&nbsp;&nbsp;</span>	<span class="comment">// Meaningful only for filters. Indicates that all associated filtees be</span>
<span id="L1126" class="ln">  1126&nbsp;&nbsp;</span>	<span class="comment">// processed immediately.</span>
<span id="L1127" class="ln">  1127&nbsp;&nbsp;</span>	DF_1_LOADFLTR DynFlag1 = 0x00000010
<span id="L1128" class="ln">  1128&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object&#39;s initialization section be run before any other</span>
<span id="L1129" class="ln">  1129&nbsp;&nbsp;</span>	<span class="comment">// objects loaded.</span>
<span id="L1130" class="ln">  1130&nbsp;&nbsp;</span>	DF_1_INITFIRST DynFlag1 = 0x00000020
<span id="L1131" class="ln">  1131&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object cannot be added to a running process with dlopen.</span>
<span id="L1132" class="ln">  1132&nbsp;&nbsp;</span>	DF_1_NOOPEN DynFlag1 = 0x00000040
<span id="L1133" class="ln">  1133&nbsp;&nbsp;</span>	<span class="comment">// Indicates the object requires $ORIGIN processing.</span>
<span id="L1134" class="ln">  1134&nbsp;&nbsp;</span>	DF_1_ORIGIN DynFlag1 = 0x00000080
<span id="L1135" class="ln">  1135&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object should use direct binding information.</span>
<span id="L1136" class="ln">  1136&nbsp;&nbsp;</span>	DF_1_DIRECT DynFlag1 = 0x00000100
<span id="L1137" class="ln">  1137&nbsp;&nbsp;</span>	<span class="comment">// Unused.</span>
<span id="L1138" class="ln">  1138&nbsp;&nbsp;</span>	DF_1_TRANS DynFlag1 = 0x00000200
<span id="L1139" class="ln">  1139&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the objects symbol table is to interpose before all symbols</span>
<span id="L1140" class="ln">  1140&nbsp;&nbsp;</span>	<span class="comment">// except the primary load object, which is typically the executable.</span>
<span id="L1141" class="ln">  1141&nbsp;&nbsp;</span>	DF_1_INTERPOSE DynFlag1 = 0x00000400
<span id="L1142" class="ln">  1142&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the search for dependencies of this object ignores any</span>
<span id="L1143" class="ln">  1143&nbsp;&nbsp;</span>	<span class="comment">// default library search paths.</span>
<span id="L1144" class="ln">  1144&nbsp;&nbsp;</span>	DF_1_NODEFLIB DynFlag1 = 0x00000800
<span id="L1145" class="ln">  1145&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object is not dumped by dldump. Candidates are objects</span>
<span id="L1146" class="ln">  1146&nbsp;&nbsp;</span>	<span class="comment">// with no relocations that might get included when generating alternative</span>
<span id="L1147" class="ln">  1147&nbsp;&nbsp;</span>	<span class="comment">// objects using.</span>
<span id="L1148" class="ln">  1148&nbsp;&nbsp;</span>	DF_1_NODUMP DynFlag1 = 0x00001000
<span id="L1149" class="ln">  1149&nbsp;&nbsp;</span>	<span class="comment">// Identifies this object as a configuration alternative object generated by</span>
<span id="L1150" class="ln">  1150&nbsp;&nbsp;</span>	<span class="comment">// crle. Triggers the runtime linker to search for a configuration file $ORIGIN/ld.config.app-name.</span>
<span id="L1151" class="ln">  1151&nbsp;&nbsp;</span>	DF_1_CONFALT DynFlag1 = 0x00002000
<span id="L1152" class="ln">  1152&nbsp;&nbsp;</span>	<span class="comment">// Meaningful only for filtees. Terminates a filters search for any</span>
<span id="L1153" class="ln">  1153&nbsp;&nbsp;</span>	<span class="comment">// further filtees.</span>
<span id="L1154" class="ln">  1154&nbsp;&nbsp;</span>	DF_1_ENDFILTEE DynFlag1 = 0x00004000
<span id="L1155" class="ln">  1155&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object has displacement relocations applied.</span>
<span id="L1156" class="ln">  1156&nbsp;&nbsp;</span>	DF_1_DISPRELDNE DynFlag1 = 0x00008000
<span id="L1157" class="ln">  1157&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object has displacement relocations pending.</span>
<span id="L1158" class="ln">  1158&nbsp;&nbsp;</span>	DF_1_DISPRELPND DynFlag1 = 0x00010000
<span id="L1159" class="ln">  1159&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object contains symbols that cannot be directly</span>
<span id="L1160" class="ln">  1160&nbsp;&nbsp;</span>	<span class="comment">// bound to.</span>
<span id="L1161" class="ln">  1161&nbsp;&nbsp;</span>	DF_1_NODIRECT DynFlag1 = 0x00020000
<span id="L1162" class="ln">  1162&nbsp;&nbsp;</span>	<span class="comment">// Reserved for internal use by the kernel runtime-linker.</span>
<span id="L1163" class="ln">  1163&nbsp;&nbsp;</span>	DF_1_IGNMULDEF DynFlag1 = 0x00040000
<span id="L1164" class="ln">  1164&nbsp;&nbsp;</span>	<span class="comment">// Reserved for internal use by the kernel runtime-linker.</span>
<span id="L1165" class="ln">  1165&nbsp;&nbsp;</span>	DF_1_NOKSYMS DynFlag1 = 0x00080000
<span id="L1166" class="ln">  1166&nbsp;&nbsp;</span>	<span class="comment">// Reserved for internal use by the kernel runtime-linker.</span>
<span id="L1167" class="ln">  1167&nbsp;&nbsp;</span>	DF_1_NOHDR DynFlag1 = 0x00100000
<span id="L1168" class="ln">  1168&nbsp;&nbsp;</span>	<span class="comment">// Indicates that this object has been edited or has been modified since the</span>
<span id="L1169" class="ln">  1169&nbsp;&nbsp;</span>	<span class="comment">// objects original construction by the link-editor.</span>
<span id="L1170" class="ln">  1170&nbsp;&nbsp;</span>	DF_1_EDITED DynFlag1 = 0x00200000
<span id="L1171" class="ln">  1171&nbsp;&nbsp;</span>	<span class="comment">// Reserved for internal use by the kernel runtime-linker.</span>
<span id="L1172" class="ln">  1172&nbsp;&nbsp;</span>	DF_1_NORELOC DynFlag1 = 0x00400000
<span id="L1173" class="ln">  1173&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object contains individual symbols that should interpose</span>
<span id="L1174" class="ln">  1174&nbsp;&nbsp;</span>	<span class="comment">// before all symbols except the primary load object, which is typically the</span>
<span id="L1175" class="ln">  1175&nbsp;&nbsp;</span>	<span class="comment">// executable.</span>
<span id="L1176" class="ln">  1176&nbsp;&nbsp;</span>	DF_1_SYMINTPOSE DynFlag1 = 0x00800000
<span id="L1177" class="ln">  1177&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the executable requires global auditing.</span>
<span id="L1178" class="ln">  1178&nbsp;&nbsp;</span>	DF_1_GLOBAUDIT DynFlag1 = 0x01000000
<span id="L1179" class="ln">  1179&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object defines, or makes reference to singleton symbols.</span>
<span id="L1180" class="ln">  1180&nbsp;&nbsp;</span>	DF_1_SINGLETON DynFlag1 = 0x02000000
<span id="L1181" class="ln">  1181&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object is a stub.</span>
<span id="L1182" class="ln">  1182&nbsp;&nbsp;</span>	DF_1_STUB DynFlag1 = 0x04000000
<span id="L1183" class="ln">  1183&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object is a position-independent executable.</span>
<span id="L1184" class="ln">  1184&nbsp;&nbsp;</span>	DF_1_PIE DynFlag1 = 0x08000000
<span id="L1185" class="ln">  1185&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object is a kernel module.</span>
<span id="L1186" class="ln">  1186&nbsp;&nbsp;</span>	DF_1_KMOD DynFlag1 = 0x10000000
<span id="L1187" class="ln">  1187&nbsp;&nbsp;</span>	<span class="comment">// Indicates that the object is a weak standard filter.</span>
<span id="L1188" class="ln">  1188&nbsp;&nbsp;</span>	DF_1_WEAKFILTER DynFlag1 = 0x20000000
<span id="L1189" class="ln">  1189&nbsp;&nbsp;</span>	<span class="comment">// Unused.</span>
<span id="L1190" class="ln">  1190&nbsp;&nbsp;</span>	DF_1_NOCOMMON DynFlag1 = 0x40000000
<span id="L1191" class="ln">  1191&nbsp;&nbsp;</span>)
<span id="L1192" class="ln">  1192&nbsp;&nbsp;</span>
<span id="L1193" class="ln">  1193&nbsp;&nbsp;</span>var dflag1Strings = []intName{
<span id="L1194" class="ln">  1194&nbsp;&nbsp;</span>	{0x00000001, &#34;DF_1_NOW&#34;},
<span id="L1195" class="ln">  1195&nbsp;&nbsp;</span>	{0x00000002, &#34;DF_1_GLOBAL&#34;},
<span id="L1196" class="ln">  1196&nbsp;&nbsp;</span>	{0x00000004, &#34;DF_1_GROUP&#34;},
<span id="L1197" class="ln">  1197&nbsp;&nbsp;</span>	{0x00000008, &#34;DF_1_NODELETE&#34;},
<span id="L1198" class="ln">  1198&nbsp;&nbsp;</span>	{0x00000010, &#34;DF_1_LOADFLTR&#34;},
<span id="L1199" class="ln">  1199&nbsp;&nbsp;</span>	{0x00000020, &#34;DF_1_INITFIRST&#34;},
<span id="L1200" class="ln">  1200&nbsp;&nbsp;</span>	{0x00000040, &#34;DF_1_NOOPEN&#34;},
<span id="L1201" class="ln">  1201&nbsp;&nbsp;</span>	{0x00000080, &#34;DF_1_ORIGIN&#34;},
<span id="L1202" class="ln">  1202&nbsp;&nbsp;</span>	{0x00000100, &#34;DF_1_DIRECT&#34;},
<span id="L1203" class="ln">  1203&nbsp;&nbsp;</span>	{0x00000200, &#34;DF_1_TRANS&#34;},
<span id="L1204" class="ln">  1204&nbsp;&nbsp;</span>	{0x00000400, &#34;DF_1_INTERPOSE&#34;},
<span id="L1205" class="ln">  1205&nbsp;&nbsp;</span>	{0x00000800, &#34;DF_1_NODEFLIB&#34;},
<span id="L1206" class="ln">  1206&nbsp;&nbsp;</span>	{0x00001000, &#34;DF_1_NODUMP&#34;},
<span id="L1207" class="ln">  1207&nbsp;&nbsp;</span>	{0x00002000, &#34;DF_1_CONFALT&#34;},
<span id="L1208" class="ln">  1208&nbsp;&nbsp;</span>	{0x00004000, &#34;DF_1_ENDFILTEE&#34;},
<span id="L1209" class="ln">  1209&nbsp;&nbsp;</span>	{0x00008000, &#34;DF_1_DISPRELDNE&#34;},
<span id="L1210" class="ln">  1210&nbsp;&nbsp;</span>	{0x00010000, &#34;DF_1_DISPRELPND&#34;},
<span id="L1211" class="ln">  1211&nbsp;&nbsp;</span>	{0x00020000, &#34;DF_1_NODIRECT&#34;},
<span id="L1212" class="ln">  1212&nbsp;&nbsp;</span>	{0x00040000, &#34;DF_1_IGNMULDEF&#34;},
<span id="L1213" class="ln">  1213&nbsp;&nbsp;</span>	{0x00080000, &#34;DF_1_NOKSYMS&#34;},
<span id="L1214" class="ln">  1214&nbsp;&nbsp;</span>	{0x00100000, &#34;DF_1_NOHDR&#34;},
<span id="L1215" class="ln">  1215&nbsp;&nbsp;</span>	{0x00200000, &#34;DF_1_EDITED&#34;},
<span id="L1216" class="ln">  1216&nbsp;&nbsp;</span>	{0x00400000, &#34;DF_1_NORELOC&#34;},
<span id="L1217" class="ln">  1217&nbsp;&nbsp;</span>	{0x00800000, &#34;DF_1_SYMINTPOSE&#34;},
<span id="L1218" class="ln">  1218&nbsp;&nbsp;</span>	{0x01000000, &#34;DF_1_GLOBAUDIT&#34;},
<span id="L1219" class="ln">  1219&nbsp;&nbsp;</span>	{0x02000000, &#34;DF_1_SINGLETON&#34;},
<span id="L1220" class="ln">  1220&nbsp;&nbsp;</span>	{0x04000000, &#34;DF_1_STUB&#34;},
<span id="L1221" class="ln">  1221&nbsp;&nbsp;</span>	{0x08000000, &#34;DF_1_PIE&#34;},
<span id="L1222" class="ln">  1222&nbsp;&nbsp;</span>	{0x10000000, &#34;DF_1_KMOD&#34;},
<span id="L1223" class="ln">  1223&nbsp;&nbsp;</span>	{0x20000000, &#34;DF_1_WEAKFILTER&#34;},
<span id="L1224" class="ln">  1224&nbsp;&nbsp;</span>	{0x40000000, &#34;DF_1_NOCOMMON&#34;},
<span id="L1225" class="ln">  1225&nbsp;&nbsp;</span>}
<span id="L1226" class="ln">  1226&nbsp;&nbsp;</span>
<span id="L1227" class="ln">  1227&nbsp;&nbsp;</span>func (i DynFlag1) String() string   { return flagName(uint32(i), dflag1Strings, false) }
<span id="L1228" class="ln">  1228&nbsp;&nbsp;</span>func (i DynFlag1) GoString() string { return flagName(uint32(i), dflag1Strings, true) }
<span id="L1229" class="ln">  1229&nbsp;&nbsp;</span>
<span id="L1230" class="ln">  1230&nbsp;&nbsp;</span><span class="comment">// NType values; used in core files.</span>
<span id="L1231" class="ln">  1231&nbsp;&nbsp;</span>type NType int
<span id="L1232" class="ln">  1232&nbsp;&nbsp;</span>
<span id="L1233" class="ln">  1233&nbsp;&nbsp;</span>const (
<span id="L1234" class="ln">  1234&nbsp;&nbsp;</span>	NT_PRSTATUS NType = 1 <span class="comment">/* Process status. */</span>
<span id="L1235" class="ln">  1235&nbsp;&nbsp;</span>	NT_FPREGSET NType = 2 <span class="comment">/* Floating point registers. */</span>
<span id="L1236" class="ln">  1236&nbsp;&nbsp;</span>	NT_PRPSINFO NType = 3 <span class="comment">/* Process state info. */</span>
<span id="L1237" class="ln">  1237&nbsp;&nbsp;</span>)
<span id="L1238" class="ln">  1238&nbsp;&nbsp;</span>
<span id="L1239" class="ln">  1239&nbsp;&nbsp;</span>var ntypeStrings = []intName{
<span id="L1240" class="ln">  1240&nbsp;&nbsp;</span>	{1, &#34;NT_PRSTATUS&#34;},
<span id="L1241" class="ln">  1241&nbsp;&nbsp;</span>	{2, &#34;NT_FPREGSET&#34;},
<span id="L1242" class="ln">  1242&nbsp;&nbsp;</span>	{3, &#34;NT_PRPSINFO&#34;},
<span id="L1243" class="ln">  1243&nbsp;&nbsp;</span>}
<span id="L1244" class="ln">  1244&nbsp;&nbsp;</span>
<span id="L1245" class="ln">  1245&nbsp;&nbsp;</span>func (i NType) String() string   { return stringName(uint32(i), ntypeStrings, false) }
<span id="L1246" class="ln">  1246&nbsp;&nbsp;</span>func (i NType) GoString() string { return stringName(uint32(i), ntypeStrings, true) }
<span id="L1247" class="ln">  1247&nbsp;&nbsp;</span>
<span id="L1248" class="ln">  1248&nbsp;&nbsp;</span><span class="comment">/* Symbol Binding - ELFNN_ST_BIND - st_info */</span>
<span id="L1249" class="ln">  1249&nbsp;&nbsp;</span>type SymBind int
<span id="L1250" class="ln">  1250&nbsp;&nbsp;</span>
<span id="L1251" class="ln">  1251&nbsp;&nbsp;</span>const (
<span id="L1252" class="ln">  1252&nbsp;&nbsp;</span>	STB_LOCAL  SymBind = 0  <span class="comment">/* Local symbol */</span>
<span id="L1253" class="ln">  1253&nbsp;&nbsp;</span>	STB_GLOBAL SymBind = 1  <span class="comment">/* Global symbol */</span>
<span id="L1254" class="ln">  1254&nbsp;&nbsp;</span>	STB_WEAK   SymBind = 2  <span class="comment">/* like global - lower precedence */</span>
<span id="L1255" class="ln">  1255&nbsp;&nbsp;</span>	STB_LOOS   SymBind = 10 <span class="comment">/* Reserved range for operating system */</span>
<span id="L1256" class="ln">  1256&nbsp;&nbsp;</span>	STB_HIOS   SymBind = 12 <span class="comment">/*   specific semantics. */</span>
<span id="L1257" class="ln">  1257&nbsp;&nbsp;</span>	STB_LOPROC SymBind = 13 <span class="comment">/* reserved range for processor */</span>
<span id="L1258" class="ln">  1258&nbsp;&nbsp;</span>	STB_HIPROC SymBind = 15 <span class="comment">/*   specific semantics. */</span>
<span id="L1259" class="ln">  1259&nbsp;&nbsp;</span>)
<span id="L1260" class="ln">  1260&nbsp;&nbsp;</span>
<span id="L1261" class="ln">  1261&nbsp;&nbsp;</span>var stbStrings = []intName{
<span id="L1262" class="ln">  1262&nbsp;&nbsp;</span>	{0, &#34;STB_LOCAL&#34;},
<span id="L1263" class="ln">  1263&nbsp;&nbsp;</span>	{1, &#34;STB_GLOBAL&#34;},
<span id="L1264" class="ln">  1264&nbsp;&nbsp;</span>	{2, &#34;STB_WEAK&#34;},
<span id="L1265" class="ln">  1265&nbsp;&nbsp;</span>	{10, &#34;STB_LOOS&#34;},
<span id="L1266" class="ln">  1266&nbsp;&nbsp;</span>	{12, &#34;STB_HIOS&#34;},
<span id="L1267" class="ln">  1267&nbsp;&nbsp;</span>	{13, &#34;STB_LOPROC&#34;},
<span id="L1268" class="ln">  1268&nbsp;&nbsp;</span>	{15, &#34;STB_HIPROC&#34;},
<span id="L1269" class="ln">  1269&nbsp;&nbsp;</span>}
<span id="L1270" class="ln">  1270&nbsp;&nbsp;</span>
<span id="L1271" class="ln">  1271&nbsp;&nbsp;</span>func (i SymBind) String() string   { return stringName(uint32(i), stbStrings, false) }
<span id="L1272" class="ln">  1272&nbsp;&nbsp;</span>func (i SymBind) GoString() string { return stringName(uint32(i), stbStrings, true) }
<span id="L1273" class="ln">  1273&nbsp;&nbsp;</span>
<span id="L1274" class="ln">  1274&nbsp;&nbsp;</span><span class="comment">/* Symbol type - ELFNN_ST_TYPE - st_info */</span>
<span id="L1275" class="ln">  1275&nbsp;&nbsp;</span>type SymType int
<span id="L1276" class="ln">  1276&nbsp;&nbsp;</span>
<span id="L1277" class="ln">  1277&nbsp;&nbsp;</span>const (
<span id="L1278" class="ln">  1278&nbsp;&nbsp;</span>	STT_NOTYPE  SymType = 0  <span class="comment">/* Unspecified type. */</span>
<span id="L1279" class="ln">  1279&nbsp;&nbsp;</span>	STT_OBJECT  SymType = 1  <span class="comment">/* Data object. */</span>
<span id="L1280" class="ln">  1280&nbsp;&nbsp;</span>	STT_FUNC    SymType = 2  <span class="comment">/* Function. */</span>
<span id="L1281" class="ln">  1281&nbsp;&nbsp;</span>	STT_SECTION SymType = 3  <span class="comment">/* Section. */</span>
<span id="L1282" class="ln">  1282&nbsp;&nbsp;</span>	STT_FILE    SymType = 4  <span class="comment">/* Source file. */</span>
<span id="L1283" class="ln">  1283&nbsp;&nbsp;</span>	STT_COMMON  SymType = 5  <span class="comment">/* Uninitialized common block. */</span>
<span id="L1284" class="ln">  1284&nbsp;&nbsp;</span>	STT_TLS     SymType = 6  <span class="comment">/* TLS object. */</span>
<span id="L1285" class="ln">  1285&nbsp;&nbsp;</span>	STT_LOOS    SymType = 10 <span class="comment">/* Reserved range for operating system */</span>
<span id="L1286" class="ln">  1286&nbsp;&nbsp;</span>	STT_HIOS    SymType = 12 <span class="comment">/*   specific semantics. */</span>
<span id="L1287" class="ln">  1287&nbsp;&nbsp;</span>	STT_LOPROC  SymType = 13 <span class="comment">/* reserved range for processor */</span>
<span id="L1288" class="ln">  1288&nbsp;&nbsp;</span>	STT_HIPROC  SymType = 15 <span class="comment">/*   specific semantics. */</span>
<span id="L1289" class="ln">  1289&nbsp;&nbsp;</span>)
<span id="L1290" class="ln">  1290&nbsp;&nbsp;</span>
<span id="L1291" class="ln">  1291&nbsp;&nbsp;</span>var sttStrings = []intName{
<span id="L1292" class="ln">  1292&nbsp;&nbsp;</span>	{0, &#34;STT_NOTYPE&#34;},
<span id="L1293" class="ln">  1293&nbsp;&nbsp;</span>	{1, &#34;STT_OBJECT&#34;},
<span id="L1294" class="ln">  1294&nbsp;&nbsp;</span>	{2, &#34;STT_FUNC&#34;},
<span id="L1295" class="ln">  1295&nbsp;&nbsp;</span>	{3, &#34;STT_SECTION&#34;},
<span id="L1296" class="ln">  1296&nbsp;&nbsp;</span>	{4, &#34;STT_FILE&#34;},
<span id="L1297" class="ln">  1297&nbsp;&nbsp;</span>	{5, &#34;STT_COMMON&#34;},
<span id="L1298" class="ln">  1298&nbsp;&nbsp;</span>	{6, &#34;STT_TLS&#34;},
<span id="L1299" class="ln">  1299&nbsp;&nbsp;</span>	{10, &#34;STT_LOOS&#34;},
<span id="L1300" class="ln">  1300&nbsp;&nbsp;</span>	{12, &#34;STT_HIOS&#34;},
<span id="L1301" class="ln">  1301&nbsp;&nbsp;</span>	{13, &#34;STT_LOPROC&#34;},
<span id="L1302" class="ln">  1302&nbsp;&nbsp;</span>	{15, &#34;STT_HIPROC&#34;},
<span id="L1303" class="ln">  1303&nbsp;&nbsp;</span>}
<span id="L1304" class="ln">  1304&nbsp;&nbsp;</span>
<span id="L1305" class="ln">  1305&nbsp;&nbsp;</span>func (i SymType) String() string   { return stringName(uint32(i), sttStrings, false) }
<span id="L1306" class="ln">  1306&nbsp;&nbsp;</span>func (i SymType) GoString() string { return stringName(uint32(i), sttStrings, true) }
<span id="L1307" class="ln">  1307&nbsp;&nbsp;</span>
<span id="L1308" class="ln">  1308&nbsp;&nbsp;</span><span class="comment">/* Symbol visibility - ELFNN_ST_VISIBILITY - st_other */</span>
<span id="L1309" class="ln">  1309&nbsp;&nbsp;</span>type SymVis int
<span id="L1310" class="ln">  1310&nbsp;&nbsp;</span>
<span id="L1311" class="ln">  1311&nbsp;&nbsp;</span>const (
<span id="L1312" class="ln">  1312&nbsp;&nbsp;</span>	STV_DEFAULT   SymVis = 0x0 <span class="comment">/* Default visibility (see binding). */</span>
<span id="L1313" class="ln">  1313&nbsp;&nbsp;</span>	STV_INTERNAL  SymVis = 0x1 <span class="comment">/* Special meaning in relocatable objects. */</span>
<span id="L1314" class="ln">  1314&nbsp;&nbsp;</span>	STV_HIDDEN    SymVis = 0x2 <span class="comment">/* Not visible. */</span>
<span id="L1315" class="ln">  1315&nbsp;&nbsp;</span>	STV_PROTECTED SymVis = 0x3 <span class="comment">/* Visible but not preemptible. */</span>
<span id="L1316" class="ln">  1316&nbsp;&nbsp;</span>)
<span id="L1317" class="ln">  1317&nbsp;&nbsp;</span>
<span id="L1318" class="ln">  1318&nbsp;&nbsp;</span>var stvStrings = []intName{
<span id="L1319" class="ln">  1319&nbsp;&nbsp;</span>	{0x0, &#34;STV_DEFAULT&#34;},
<span id="L1320" class="ln">  1320&nbsp;&nbsp;</span>	{0x1, &#34;STV_INTERNAL&#34;},
<span id="L1321" class="ln">  1321&nbsp;&nbsp;</span>	{0x2, &#34;STV_HIDDEN&#34;},
<span id="L1322" class="ln">  1322&nbsp;&nbsp;</span>	{0x3, &#34;STV_PROTECTED&#34;},
<span id="L1323" class="ln">  1323&nbsp;&nbsp;</span>}
<span id="L1324" class="ln">  1324&nbsp;&nbsp;</span>
<span id="L1325" class="ln">  1325&nbsp;&nbsp;</span>func (i SymVis) String() string   { return stringName(uint32(i), stvStrings, false) }
<span id="L1326" class="ln">  1326&nbsp;&nbsp;</span>func (i SymVis) GoString() string { return stringName(uint32(i), stvStrings, true) }
<span id="L1327" class="ln">  1327&nbsp;&nbsp;</span>
<span id="L1328" class="ln">  1328&nbsp;&nbsp;</span><span class="comment">/*
<span id="L1329" class="ln">  1329&nbsp;&nbsp;</span> * Relocation types.
<span id="L1330" class="ln">  1330&nbsp;&nbsp;</span> */</span>
<span id="L1331" class="ln">  1331&nbsp;&nbsp;</span>
<span id="L1332" class="ln">  1332&nbsp;&nbsp;</span><span class="comment">// Relocation types for x86-64.</span>
<span id="L1333" class="ln">  1333&nbsp;&nbsp;</span>type R_X86_64 int
<span id="L1334" class="ln">  1334&nbsp;&nbsp;</span>
<span id="L1335" class="ln">  1335&nbsp;&nbsp;</span>const (
<span id="L1336" class="ln">  1336&nbsp;&nbsp;</span>	R_X86_64_NONE            R_X86_64 = 0  <span class="comment">/* No relocation. */</span>
<span id="L1337" class="ln">  1337&nbsp;&nbsp;</span>	R_X86_64_64              R_X86_64 = 1  <span class="comment">/* Add 64 bit symbol value. */</span>
<span id="L1338" class="ln">  1338&nbsp;&nbsp;</span>	R_X86_64_PC32            R_X86_64 = 2  <span class="comment">/* PC-relative 32 bit signed sym value. */</span>
<span id="L1339" class="ln">  1339&nbsp;&nbsp;</span>	R_X86_64_GOT32           R_X86_64 = 3  <span class="comment">/* PC-relative 32 bit GOT offset. */</span>
<span id="L1340" class="ln">  1340&nbsp;&nbsp;</span>	R_X86_64_PLT32           R_X86_64 = 4  <span class="comment">/* PC-relative 32 bit PLT offset. */</span>
<span id="L1341" class="ln">  1341&nbsp;&nbsp;</span>	R_X86_64_COPY            R_X86_64 = 5  <span class="comment">/* Copy data from shared object. */</span>
<span id="L1342" class="ln">  1342&nbsp;&nbsp;</span>	R_X86_64_GLOB_DAT        R_X86_64 = 6  <span class="comment">/* Set GOT entry to data address. */</span>
<span id="L1343" class="ln">  1343&nbsp;&nbsp;</span>	R_X86_64_JMP_SLOT        R_X86_64 = 7  <span class="comment">/* Set GOT entry to code address. */</span>
<span id="L1344" class="ln">  1344&nbsp;&nbsp;</span>	R_X86_64_RELATIVE        R_X86_64 = 8  <span class="comment">/* Add load address of shared object. */</span>
<span id="L1345" class="ln">  1345&nbsp;&nbsp;</span>	R_X86_64_GOTPCREL        R_X86_64 = 9  <span class="comment">/* Add 32 bit signed pcrel offset to GOT. */</span>
<span id="L1346" class="ln">  1346&nbsp;&nbsp;</span>	R_X86_64_32              R_X86_64 = 10 <span class="comment">/* Add 32 bit zero extended symbol value */</span>
<span id="L1347" class="ln">  1347&nbsp;&nbsp;</span>	R_X86_64_32S             R_X86_64 = 11 <span class="comment">/* Add 32 bit sign extended symbol value */</span>
<span id="L1348" class="ln">  1348&nbsp;&nbsp;</span>	R_X86_64_16              R_X86_64 = 12 <span class="comment">/* Add 16 bit zero extended symbol value */</span>
<span id="L1349" class="ln">  1349&nbsp;&nbsp;</span>	R_X86_64_PC16            R_X86_64 = 13 <span class="comment">/* Add 16 bit signed extended pc relative symbol value */</span>
<span id="L1350" class="ln">  1350&nbsp;&nbsp;</span>	R_X86_64_8               R_X86_64 = 14 <span class="comment">/* Add 8 bit zero extended symbol value */</span>
<span id="L1351" class="ln">  1351&nbsp;&nbsp;</span>	R_X86_64_PC8             R_X86_64 = 15 <span class="comment">/* Add 8 bit signed extended pc relative symbol value */</span>
<span id="L1352" class="ln">  1352&nbsp;&nbsp;</span>	R_X86_64_DTPMOD64        R_X86_64 = 16 <span class="comment">/* ID of module containing symbol */</span>
<span id="L1353" class="ln">  1353&nbsp;&nbsp;</span>	R_X86_64_DTPOFF64        R_X86_64 = 17 <span class="comment">/* Offset in TLS block */</span>
<span id="L1354" class="ln">  1354&nbsp;&nbsp;</span>	R_X86_64_TPOFF64         R_X86_64 = 18 <span class="comment">/* Offset in static TLS block */</span>
<span id="L1355" class="ln">  1355&nbsp;&nbsp;</span>	R_X86_64_TLSGD           R_X86_64 = 19 <span class="comment">/* PC relative offset to GD GOT entry */</span>
<span id="L1356" class="ln">  1356&nbsp;&nbsp;</span>	R_X86_64_TLSLD           R_X86_64 = 20 <span class="comment">/* PC relative offset to LD GOT entry */</span>
<span id="L1357" class="ln">  1357&nbsp;&nbsp;</span>	R_X86_64_DTPOFF32        R_X86_64 = 21 <span class="comment">/* Offset in TLS block */</span>
<span id="L1358" class="ln">  1358&nbsp;&nbsp;</span>	R_X86_64_GOTTPOFF        R_X86_64 = 22 <span class="comment">/* PC relative offset to IE GOT entry */</span>
<span id="L1359" class="ln">  1359&nbsp;&nbsp;</span>	R_X86_64_TPOFF32         R_X86_64 = 23 <span class="comment">/* Offset in static TLS block */</span>
<span id="L1360" class="ln">  1360&nbsp;&nbsp;</span>	R_X86_64_PC64            R_X86_64 = 24 <span class="comment">/* PC relative 64-bit sign extended symbol value. */</span>
<span id="L1361" class="ln">  1361&nbsp;&nbsp;</span>	R_X86_64_GOTOFF64        R_X86_64 = 25
<span id="L1362" class="ln">  1362&nbsp;&nbsp;</span>	R_X86_64_GOTPC32         R_X86_64 = 26
<span id="L1363" class="ln">  1363&nbsp;&nbsp;</span>	R_X86_64_GOT64           R_X86_64 = 27
<span id="L1364" class="ln">  1364&nbsp;&nbsp;</span>	R_X86_64_GOTPCREL64      R_X86_64 = 28
<span id="L1365" class="ln">  1365&nbsp;&nbsp;</span>	R_X86_64_GOTPC64         R_X86_64 = 29
<span id="L1366" class="ln">  1366&nbsp;&nbsp;</span>	R_X86_64_GOTPLT64        R_X86_64 = 30
<span id="L1367" class="ln">  1367&nbsp;&nbsp;</span>	R_X86_64_PLTOFF64        R_X86_64 = 31
<span id="L1368" class="ln">  1368&nbsp;&nbsp;</span>	R_X86_64_SIZE32          R_X86_64 = 32
<span id="L1369" class="ln">  1369&nbsp;&nbsp;</span>	R_X86_64_SIZE64          R_X86_64 = 33
<span id="L1370" class="ln">  1370&nbsp;&nbsp;</span>	R_X86_64_GOTPC32_TLSDESC R_X86_64 = 34
<span id="L1371" class="ln">  1371&nbsp;&nbsp;</span>	R_X86_64_TLSDESC_CALL    R_X86_64 = 35
<span id="L1372" class="ln">  1372&nbsp;&nbsp;</span>	R_X86_64_TLSDESC         R_X86_64 = 36
<span id="L1373" class="ln">  1373&nbsp;&nbsp;</span>	R_X86_64_IRELATIVE       R_X86_64 = 37
<span id="L1374" class="ln">  1374&nbsp;&nbsp;</span>	R_X86_64_RELATIVE64      R_X86_64 = 38
<span id="L1375" class="ln">  1375&nbsp;&nbsp;</span>	R_X86_64_PC32_BND        R_X86_64 = 39
<span id="L1376" class="ln">  1376&nbsp;&nbsp;</span>	R_X86_64_PLT32_BND       R_X86_64 = 40
<span id="L1377" class="ln">  1377&nbsp;&nbsp;</span>	R_X86_64_GOTPCRELX       R_X86_64 = 41
<span id="L1378" class="ln">  1378&nbsp;&nbsp;</span>	R_X86_64_REX_GOTPCRELX   R_X86_64 = 42
<span id="L1379" class="ln">  1379&nbsp;&nbsp;</span>)
<span id="L1380" class="ln">  1380&nbsp;&nbsp;</span>
<span id="L1381" class="ln">  1381&nbsp;&nbsp;</span>var rx86_64Strings = []intName{
<span id="L1382" class="ln">  1382&nbsp;&nbsp;</span>	{0, &#34;R_X86_64_NONE&#34;},
<span id="L1383" class="ln">  1383&nbsp;&nbsp;</span>	{1, &#34;R_X86_64_64&#34;},
<span id="L1384" class="ln">  1384&nbsp;&nbsp;</span>	{2, &#34;R_X86_64_PC32&#34;},
<span id="L1385" class="ln">  1385&nbsp;&nbsp;</span>	{3, &#34;R_X86_64_GOT32&#34;},
<span id="L1386" class="ln">  1386&nbsp;&nbsp;</span>	{4, &#34;R_X86_64_PLT32&#34;},
<span id="L1387" class="ln">  1387&nbsp;&nbsp;</span>	{5, &#34;R_X86_64_COPY&#34;},
<span id="L1388" class="ln">  1388&nbsp;&nbsp;</span>	{6, &#34;R_X86_64_GLOB_DAT&#34;},
<span id="L1389" class="ln">  1389&nbsp;&nbsp;</span>	{7, &#34;R_X86_64_JMP_SLOT&#34;},
<span id="L1390" class="ln">  1390&nbsp;&nbsp;</span>	{8, &#34;R_X86_64_RELATIVE&#34;},
<span id="L1391" class="ln">  1391&nbsp;&nbsp;</span>	{9, &#34;R_X86_64_GOTPCREL&#34;},
<span id="L1392" class="ln">  1392&nbsp;&nbsp;</span>	{10, &#34;R_X86_64_32&#34;},
<span id="L1393" class="ln">  1393&nbsp;&nbsp;</span>	{11, &#34;R_X86_64_32S&#34;},
<span id="L1394" class="ln">  1394&nbsp;&nbsp;</span>	{12, &#34;R_X86_64_16&#34;},
<span id="L1395" class="ln">  1395&nbsp;&nbsp;</span>	{13, &#34;R_X86_64_PC16&#34;},
<span id="L1396" class="ln">  1396&nbsp;&nbsp;</span>	{14, &#34;R_X86_64_8&#34;},
<span id="L1397" class="ln">  1397&nbsp;&nbsp;</span>	{15, &#34;R_X86_64_PC8&#34;},
<span id="L1398" class="ln">  1398&nbsp;&nbsp;</span>	{16, &#34;R_X86_64_DTPMOD64&#34;},
<span id="L1399" class="ln">  1399&nbsp;&nbsp;</span>	{17, &#34;R_X86_64_DTPOFF64&#34;},
<span id="L1400" class="ln">  1400&nbsp;&nbsp;</span>	{18, &#34;R_X86_64_TPOFF64&#34;},
<span id="L1401" class="ln">  1401&nbsp;&nbsp;</span>	{19, &#34;R_X86_64_TLSGD&#34;},
<span id="L1402" class="ln">  1402&nbsp;&nbsp;</span>	{20, &#34;R_X86_64_TLSLD&#34;},
<span id="L1403" class="ln">  1403&nbsp;&nbsp;</span>	{21, &#34;R_X86_64_DTPOFF32&#34;},
<span id="L1404" class="ln">  1404&nbsp;&nbsp;</span>	{22, &#34;R_X86_64_GOTTPOFF&#34;},
<span id="L1405" class="ln">  1405&nbsp;&nbsp;</span>	{23, &#34;R_X86_64_TPOFF32&#34;},
<span id="L1406" class="ln">  1406&nbsp;&nbsp;</span>	{24, &#34;R_X86_64_PC64&#34;},
<span id="L1407" class="ln">  1407&nbsp;&nbsp;</span>	{25, &#34;R_X86_64_GOTOFF64&#34;},
<span id="L1408" class="ln">  1408&nbsp;&nbsp;</span>	{26, &#34;R_X86_64_GOTPC32&#34;},
<span id="L1409" class="ln">  1409&nbsp;&nbsp;</span>	{27, &#34;R_X86_64_GOT64&#34;},
<span id="L1410" class="ln">  1410&nbsp;&nbsp;</span>	{28, &#34;R_X86_64_GOTPCREL64&#34;},
<span id="L1411" class="ln">  1411&nbsp;&nbsp;</span>	{29, &#34;R_X86_64_GOTPC64&#34;},
<span id="L1412" class="ln">  1412&nbsp;&nbsp;</span>	{30, &#34;R_X86_64_GOTPLT64&#34;},
<span id="L1413" class="ln">  1413&nbsp;&nbsp;</span>	{31, &#34;R_X86_64_PLTOFF64&#34;},
<span id="L1414" class="ln">  1414&nbsp;&nbsp;</span>	{32, &#34;R_X86_64_SIZE32&#34;},
<span id="L1415" class="ln">  1415&nbsp;&nbsp;</span>	{33, &#34;R_X86_64_SIZE64&#34;},
<span id="L1416" class="ln">  1416&nbsp;&nbsp;</span>	{34, &#34;R_X86_64_GOTPC32_TLSDESC&#34;},
<span id="L1417" class="ln">  1417&nbsp;&nbsp;</span>	{35, &#34;R_X86_64_TLSDESC_CALL&#34;},
<span id="L1418" class="ln">  1418&nbsp;&nbsp;</span>	{36, &#34;R_X86_64_TLSDESC&#34;},
<span id="L1419" class="ln">  1419&nbsp;&nbsp;</span>	{37, &#34;R_X86_64_IRELATIVE&#34;},
<span id="L1420" class="ln">  1420&nbsp;&nbsp;</span>	{38, &#34;R_X86_64_RELATIVE64&#34;},
<span id="L1421" class="ln">  1421&nbsp;&nbsp;</span>	{39, &#34;R_X86_64_PC32_BND&#34;},
<span id="L1422" class="ln">  1422&nbsp;&nbsp;</span>	{40, &#34;R_X86_64_PLT32_BND&#34;},
<span id="L1423" class="ln">  1423&nbsp;&nbsp;</span>	{41, &#34;R_X86_64_GOTPCRELX&#34;},
<span id="L1424" class="ln">  1424&nbsp;&nbsp;</span>	{42, &#34;R_X86_64_REX_GOTPCRELX&#34;},
<span id="L1425" class="ln">  1425&nbsp;&nbsp;</span>}
<span id="L1426" class="ln">  1426&nbsp;&nbsp;</span>
<span id="L1427" class="ln">  1427&nbsp;&nbsp;</span>func (i R_X86_64) String() string   { return stringName(uint32(i), rx86_64Strings, false) }
<span id="L1428" class="ln">  1428&nbsp;&nbsp;</span>func (i R_X86_64) GoString() string { return stringName(uint32(i), rx86_64Strings, true) }
<span id="L1429" class="ln">  1429&nbsp;&nbsp;</span>
<span id="L1430" class="ln">  1430&nbsp;&nbsp;</span><span class="comment">// Relocation types for AArch64 (aka arm64)</span>
<span id="L1431" class="ln">  1431&nbsp;&nbsp;</span>type R_AARCH64 int
<span id="L1432" class="ln">  1432&nbsp;&nbsp;</span>
<span id="L1433" class="ln">  1433&nbsp;&nbsp;</span>const (
<span id="L1434" class="ln">  1434&nbsp;&nbsp;</span>	R_AARCH64_NONE                            R_AARCH64 = 0
<span id="L1435" class="ln">  1435&nbsp;&nbsp;</span>	R_AARCH64_P32_ABS32                       R_AARCH64 = 1
<span id="L1436" class="ln">  1436&nbsp;&nbsp;</span>	R_AARCH64_P32_ABS16                       R_AARCH64 = 2
<span id="L1437" class="ln">  1437&nbsp;&nbsp;</span>	R_AARCH64_P32_PREL32                      R_AARCH64 = 3
<span id="L1438" class="ln">  1438&nbsp;&nbsp;</span>	R_AARCH64_P32_PREL16                      R_AARCH64 = 4
<span id="L1439" class="ln">  1439&nbsp;&nbsp;</span>	R_AARCH64_P32_MOVW_UABS_G0                R_AARCH64 = 5
<span id="L1440" class="ln">  1440&nbsp;&nbsp;</span>	R_AARCH64_P32_MOVW_UABS_G0_NC             R_AARCH64 = 6
<span id="L1441" class="ln">  1441&nbsp;&nbsp;</span>	R_AARCH64_P32_MOVW_UABS_G1                R_AARCH64 = 7
<span id="L1442" class="ln">  1442&nbsp;&nbsp;</span>	R_AARCH64_P32_MOVW_SABS_G0                R_AARCH64 = 8
<span id="L1443" class="ln">  1443&nbsp;&nbsp;</span>	R_AARCH64_P32_LD_PREL_LO19                R_AARCH64 = 9
<span id="L1444" class="ln">  1444&nbsp;&nbsp;</span>	R_AARCH64_P32_ADR_PREL_LO21               R_AARCH64 = 10
<span id="L1445" class="ln">  1445&nbsp;&nbsp;</span>	R_AARCH64_P32_ADR_PREL_PG_HI21            R_AARCH64 = 11
<span id="L1446" class="ln">  1446&nbsp;&nbsp;</span>	R_AARCH64_P32_ADD_ABS_LO12_NC             R_AARCH64 = 12
<span id="L1447" class="ln">  1447&nbsp;&nbsp;</span>	R_AARCH64_P32_LDST8_ABS_LO12_NC           R_AARCH64 = 13
<span id="L1448" class="ln">  1448&nbsp;&nbsp;</span>	R_AARCH64_P32_LDST16_ABS_LO12_NC          R_AARCH64 = 14
<span id="L1449" class="ln">  1449&nbsp;&nbsp;</span>	R_AARCH64_P32_LDST32_ABS_LO12_NC          R_AARCH64 = 15
<span id="L1450" class="ln">  1450&nbsp;&nbsp;</span>	R_AARCH64_P32_LDST64_ABS_LO12_NC          R_AARCH64 = 16
<span id="L1451" class="ln">  1451&nbsp;&nbsp;</span>	R_AARCH64_P32_LDST128_ABS_LO12_NC         R_AARCH64 = 17
<span id="L1452" class="ln">  1452&nbsp;&nbsp;</span>	R_AARCH64_P32_TSTBR14                     R_AARCH64 = 18
<span id="L1453" class="ln">  1453&nbsp;&nbsp;</span>	R_AARCH64_P32_CONDBR19                    R_AARCH64 = 19
<span id="L1454" class="ln">  1454&nbsp;&nbsp;</span>	R_AARCH64_P32_JUMP26                      R_AARCH64 = 20
<span id="L1455" class="ln">  1455&nbsp;&nbsp;</span>	R_AARCH64_P32_CALL26                      R_AARCH64 = 21
<span id="L1456" class="ln">  1456&nbsp;&nbsp;</span>	R_AARCH64_P32_GOT_LD_PREL19               R_AARCH64 = 25
<span id="L1457" class="ln">  1457&nbsp;&nbsp;</span>	R_AARCH64_P32_ADR_GOT_PAGE                R_AARCH64 = 26
<span id="L1458" class="ln">  1458&nbsp;&nbsp;</span>	R_AARCH64_P32_LD32_GOT_LO12_NC            R_AARCH64 = 27
<span id="L1459" class="ln">  1459&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSGD_ADR_PAGE21            R_AARCH64 = 81
<span id="L1460" class="ln">  1460&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSGD_ADD_LO12_NC           R_AARCH64 = 82
<span id="L1461" class="ln">  1461&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21   R_AARCH64 = 103
<span id="L1462" class="ln">  1462&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC R_AARCH64 = 104
<span id="L1463" class="ln">  1463&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19    R_AARCH64 = 105
<span id="L1464" class="ln">  1464&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_MOVW_TPREL_G1         R_AARCH64 = 106
<span id="L1465" class="ln">  1465&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_MOVW_TPREL_G0         R_AARCH64 = 107
<span id="L1466" class="ln">  1466&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC      R_AARCH64 = 108
<span id="L1467" class="ln">  1467&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_ADD_TPREL_HI12        R_AARCH64 = 109
<span id="L1468" class="ln">  1468&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_ADD_TPREL_LO12        R_AARCH64 = 110
<span id="L1469" class="ln">  1469&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC     R_AARCH64 = 111
<span id="L1470" class="ln">  1470&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_LD_PREL19           R_AARCH64 = 122
<span id="L1471" class="ln">  1471&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_ADR_PREL21          R_AARCH64 = 123
<span id="L1472" class="ln">  1472&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_ADR_PAGE21          R_AARCH64 = 124
<span id="L1473" class="ln">  1473&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_LD32_LO12_NC        R_AARCH64 = 125
<span id="L1474" class="ln">  1474&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_ADD_LO12_NC         R_AARCH64 = 126
<span id="L1475" class="ln">  1475&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC_CALL                R_AARCH64 = 127
<span id="L1476" class="ln">  1476&nbsp;&nbsp;</span>	R_AARCH64_P32_COPY                        R_AARCH64 = 180
<span id="L1477" class="ln">  1477&nbsp;&nbsp;</span>	R_AARCH64_P32_GLOB_DAT                    R_AARCH64 = 181
<span id="L1478" class="ln">  1478&nbsp;&nbsp;</span>	R_AARCH64_P32_JUMP_SLOT                   R_AARCH64 = 182
<span id="L1479" class="ln">  1479&nbsp;&nbsp;</span>	R_AARCH64_P32_RELATIVE                    R_AARCH64 = 183
<span id="L1480" class="ln">  1480&nbsp;&nbsp;</span>	R_AARCH64_P32_TLS_DTPMOD                  R_AARCH64 = 184
<span id="L1481" class="ln">  1481&nbsp;&nbsp;</span>	R_AARCH64_P32_TLS_DTPREL                  R_AARCH64 = 185
<span id="L1482" class="ln">  1482&nbsp;&nbsp;</span>	R_AARCH64_P32_TLS_TPREL                   R_AARCH64 = 186
<span id="L1483" class="ln">  1483&nbsp;&nbsp;</span>	R_AARCH64_P32_TLSDESC                     R_AARCH64 = 187
<span id="L1484" class="ln">  1484&nbsp;&nbsp;</span>	R_AARCH64_P32_IRELATIVE                   R_AARCH64 = 188
<span id="L1485" class="ln">  1485&nbsp;&nbsp;</span>	R_AARCH64_NULL                            R_AARCH64 = 256
<span id="L1486" class="ln">  1486&nbsp;&nbsp;</span>	R_AARCH64_ABS64                           R_AARCH64 = 257
<span id="L1487" class="ln">  1487&nbsp;&nbsp;</span>	R_AARCH64_ABS32                           R_AARCH64 = 258
<span id="L1488" class="ln">  1488&nbsp;&nbsp;</span>	R_AARCH64_ABS16                           R_AARCH64 = 259
<span id="L1489" class="ln">  1489&nbsp;&nbsp;</span>	R_AARCH64_PREL64                          R_AARCH64 = 260
<span id="L1490" class="ln">  1490&nbsp;&nbsp;</span>	R_AARCH64_PREL32                          R_AARCH64 = 261
<span id="L1491" class="ln">  1491&nbsp;&nbsp;</span>	R_AARCH64_PREL16                          R_AARCH64 = 262
<span id="L1492" class="ln">  1492&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G0                    R_AARCH64 = 263
<span id="L1493" class="ln">  1493&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G0_NC                 R_AARCH64 = 264
<span id="L1494" class="ln">  1494&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G1                    R_AARCH64 = 265
<span id="L1495" class="ln">  1495&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G1_NC                 R_AARCH64 = 266
<span id="L1496" class="ln">  1496&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G2                    R_AARCH64 = 267
<span id="L1497" class="ln">  1497&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G2_NC                 R_AARCH64 = 268
<span id="L1498" class="ln">  1498&nbsp;&nbsp;</span>	R_AARCH64_MOVW_UABS_G3                    R_AARCH64 = 269
<span id="L1499" class="ln">  1499&nbsp;&nbsp;</span>	R_AARCH64_MOVW_SABS_G0                    R_AARCH64 = 270
<span id="L1500" class="ln">  1500&nbsp;&nbsp;</span>	R_AARCH64_MOVW_SABS_G1                    R_AARCH64 = 271
<span id="L1501" class="ln">  1501&nbsp;&nbsp;</span>	R_AARCH64_MOVW_SABS_G2                    R_AARCH64 = 272
<span id="L1502" class="ln">  1502&nbsp;&nbsp;</span>	R_AARCH64_LD_PREL_LO19                    R_AARCH64 = 273
<span id="L1503" class="ln">  1503&nbsp;&nbsp;</span>	R_AARCH64_ADR_PREL_LO21                   R_AARCH64 = 274
<span id="L1504" class="ln">  1504&nbsp;&nbsp;</span>	R_AARCH64_ADR_PREL_PG_HI21                R_AARCH64 = 275
<span id="L1505" class="ln">  1505&nbsp;&nbsp;</span>	R_AARCH64_ADR_PREL_PG_HI21_NC             R_AARCH64 = 276
<span id="L1506" class="ln">  1506&nbsp;&nbsp;</span>	R_AARCH64_ADD_ABS_LO12_NC                 R_AARCH64 = 277
<span id="L1507" class="ln">  1507&nbsp;&nbsp;</span>	R_AARCH64_LDST8_ABS_LO12_NC               R_AARCH64 = 278
<span id="L1508" class="ln">  1508&nbsp;&nbsp;</span>	R_AARCH64_TSTBR14                         R_AARCH64 = 279
<span id="L1509" class="ln">  1509&nbsp;&nbsp;</span>	R_AARCH64_CONDBR19                        R_AARCH64 = 280
<span id="L1510" class="ln">  1510&nbsp;&nbsp;</span>	R_AARCH64_JUMP26                          R_AARCH64 = 282
<span id="L1511" class="ln">  1511&nbsp;&nbsp;</span>	R_AARCH64_CALL26                          R_AARCH64 = 283
<span id="L1512" class="ln">  1512&nbsp;&nbsp;</span>	R_AARCH64_LDST16_ABS_LO12_NC              R_AARCH64 = 284
<span id="L1513" class="ln">  1513&nbsp;&nbsp;</span>	R_AARCH64_LDST32_ABS_LO12_NC              R_AARCH64 = 285
<span id="L1514" class="ln">  1514&nbsp;&nbsp;</span>	R_AARCH64_LDST64_ABS_LO12_NC              R_AARCH64 = 286
<span id="L1515" class="ln">  1515&nbsp;&nbsp;</span>	R_AARCH64_LDST128_ABS_LO12_NC             R_AARCH64 = 299
<span id="L1516" class="ln">  1516&nbsp;&nbsp;</span>	R_AARCH64_GOT_LD_PREL19                   R_AARCH64 = 309
<span id="L1517" class="ln">  1517&nbsp;&nbsp;</span>	R_AARCH64_LD64_GOTOFF_LO15                R_AARCH64 = 310
<span id="L1518" class="ln">  1518&nbsp;&nbsp;</span>	R_AARCH64_ADR_GOT_PAGE                    R_AARCH64 = 311
<span id="L1519" class="ln">  1519&nbsp;&nbsp;</span>	R_AARCH64_LD64_GOT_LO12_NC                R_AARCH64 = 312
<span id="L1520" class="ln">  1520&nbsp;&nbsp;</span>	R_AARCH64_LD64_GOTPAGE_LO15               R_AARCH64 = 313
<span id="L1521" class="ln">  1521&nbsp;&nbsp;</span>	R_AARCH64_TLSGD_ADR_PREL21                R_AARCH64 = 512
<span id="L1522" class="ln">  1522&nbsp;&nbsp;</span>	R_AARCH64_TLSGD_ADR_PAGE21                R_AARCH64 = 513
<span id="L1523" class="ln">  1523&nbsp;&nbsp;</span>	R_AARCH64_TLSGD_ADD_LO12_NC               R_AARCH64 = 514
<span id="L1524" class="ln">  1524&nbsp;&nbsp;</span>	R_AARCH64_TLSGD_MOVW_G1                   R_AARCH64 = 515
<span id="L1525" class="ln">  1525&nbsp;&nbsp;</span>	R_AARCH64_TLSGD_MOVW_G0_NC                R_AARCH64 = 516
<span id="L1526" class="ln">  1526&nbsp;&nbsp;</span>	R_AARCH64_TLSLD_ADR_PREL21                R_AARCH64 = 517
<span id="L1527" class="ln">  1527&nbsp;&nbsp;</span>	R_AARCH64_TLSLD_ADR_PAGE21                R_AARCH64 = 518
<span id="L1528" class="ln">  1528&nbsp;&nbsp;</span>	R_AARCH64_TLSIE_MOVW_GOTTPREL_G1          R_AARCH64 = 539
<span id="L1529" class="ln">  1529&nbsp;&nbsp;</span>	R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC       R_AARCH64 = 540
<span id="L1530" class="ln">  1530&nbsp;&nbsp;</span>	R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21       R_AARCH64 = 541
<span id="L1531" class="ln">  1531&nbsp;&nbsp;</span>	R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC     R_AARCH64 = 542
<span id="L1532" class="ln">  1532&nbsp;&nbsp;</span>	R_AARCH64_TLSIE_LD_GOTTPREL_PREL19        R_AARCH64 = 543
<span id="L1533" class="ln">  1533&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_MOVW_TPREL_G2             R_AARCH64 = 544
<span id="L1534" class="ln">  1534&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_MOVW_TPREL_G1             R_AARCH64 = 545
<span id="L1535" class="ln">  1535&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_MOVW_TPREL_G1_NC          R_AARCH64 = 546
<span id="L1536" class="ln">  1536&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_MOVW_TPREL_G0             R_AARCH64 = 547
<span id="L1537" class="ln">  1537&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_MOVW_TPREL_G0_NC          R_AARCH64 = 548
<span id="L1538" class="ln">  1538&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_ADD_TPREL_HI12            R_AARCH64 = 549
<span id="L1539" class="ln">  1539&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_ADD_TPREL_LO12            R_AARCH64 = 550
<span id="L1540" class="ln">  1540&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_ADD_TPREL_LO12_NC         R_AARCH64 = 551
<span id="L1541" class="ln">  1541&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_LD_PREL19               R_AARCH64 = 560
<span id="L1542" class="ln">  1542&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_ADR_PREL21              R_AARCH64 = 561
<span id="L1543" class="ln">  1543&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_ADR_PAGE21              R_AARCH64 = 562
<span id="L1544" class="ln">  1544&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_LD64_LO12_NC            R_AARCH64 = 563
<span id="L1545" class="ln">  1545&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_ADD_LO12_NC             R_AARCH64 = 564
<span id="L1546" class="ln">  1546&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_OFF_G1                  R_AARCH64 = 565
<span id="L1547" class="ln">  1547&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_OFF_G0_NC               R_AARCH64 = 566
<span id="L1548" class="ln">  1548&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_LDR                     R_AARCH64 = 567
<span id="L1549" class="ln">  1549&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_ADD                     R_AARCH64 = 568
<span id="L1550" class="ln">  1550&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC_CALL                    R_AARCH64 = 569
<span id="L1551" class="ln">  1551&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_LDST128_TPREL_LO12        R_AARCH64 = 570
<span id="L1552" class="ln">  1552&nbsp;&nbsp;</span>	R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC     R_AARCH64 = 571
<span id="L1553" class="ln">  1553&nbsp;&nbsp;</span>	R_AARCH64_TLSLD_LDST128_DTPREL_LO12       R_AARCH64 = 572
<span id="L1554" class="ln">  1554&nbsp;&nbsp;</span>	R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC    R_AARCH64 = 573
<span id="L1555" class="ln">  1555&nbsp;&nbsp;</span>	R_AARCH64_COPY                            R_AARCH64 = 1024
<span id="L1556" class="ln">  1556&nbsp;&nbsp;</span>	R_AARCH64_GLOB_DAT                        R_AARCH64 = 1025
<span id="L1557" class="ln">  1557&nbsp;&nbsp;</span>	R_AARCH64_JUMP_SLOT                       R_AARCH64 = 1026
<span id="L1558" class="ln">  1558&nbsp;&nbsp;</span>	R_AARCH64_RELATIVE                        R_AARCH64 = 1027
<span id="L1559" class="ln">  1559&nbsp;&nbsp;</span>	R_AARCH64_TLS_DTPMOD64                    R_AARCH64 = 1028
<span id="L1560" class="ln">  1560&nbsp;&nbsp;</span>	R_AARCH64_TLS_DTPREL64                    R_AARCH64 = 1029
<span id="L1561" class="ln">  1561&nbsp;&nbsp;</span>	R_AARCH64_TLS_TPREL64                     R_AARCH64 = 1030
<span id="L1562" class="ln">  1562&nbsp;&nbsp;</span>	R_AARCH64_TLSDESC                         R_AARCH64 = 1031
<span id="L1563" class="ln">  1563&nbsp;&nbsp;</span>	R_AARCH64_IRELATIVE                       R_AARCH64 = 1032
<span id="L1564" class="ln">  1564&nbsp;&nbsp;</span>)
<span id="L1565" class="ln">  1565&nbsp;&nbsp;</span>
<span id="L1566" class="ln">  1566&nbsp;&nbsp;</span>var raarch64Strings = []intName{
<span id="L1567" class="ln">  1567&nbsp;&nbsp;</span>	{0, &#34;R_AARCH64_NONE&#34;},
<span id="L1568" class="ln">  1568&nbsp;&nbsp;</span>	{1, &#34;R_AARCH64_P32_ABS32&#34;},
<span id="L1569" class="ln">  1569&nbsp;&nbsp;</span>	{2, &#34;R_AARCH64_P32_ABS16&#34;},
<span id="L1570" class="ln">  1570&nbsp;&nbsp;</span>	{3, &#34;R_AARCH64_P32_PREL32&#34;},
<span id="L1571" class="ln">  1571&nbsp;&nbsp;</span>	{4, &#34;R_AARCH64_P32_PREL16&#34;},
<span id="L1572" class="ln">  1572&nbsp;&nbsp;</span>	{5, &#34;R_AARCH64_P32_MOVW_UABS_G0&#34;},
<span id="L1573" class="ln">  1573&nbsp;&nbsp;</span>	{6, &#34;R_AARCH64_P32_MOVW_UABS_G0_NC&#34;},
<span id="L1574" class="ln">  1574&nbsp;&nbsp;</span>	{7, &#34;R_AARCH64_P32_MOVW_UABS_G1&#34;},
<span id="L1575" class="ln">  1575&nbsp;&nbsp;</span>	{8, &#34;R_AARCH64_P32_MOVW_SABS_G0&#34;},
<span id="L1576" class="ln">  1576&nbsp;&nbsp;</span>	{9, &#34;R_AARCH64_P32_LD_PREL_LO19&#34;},
<span id="L1577" class="ln">  1577&nbsp;&nbsp;</span>	{10, &#34;R_AARCH64_P32_ADR_PREL_LO21&#34;},
<span id="L1578" class="ln">  1578&nbsp;&nbsp;</span>	{11, &#34;R_AARCH64_P32_ADR_PREL_PG_HI21&#34;},
<span id="L1579" class="ln">  1579&nbsp;&nbsp;</span>	{12, &#34;R_AARCH64_P32_ADD_ABS_LO12_NC&#34;},
<span id="L1580" class="ln">  1580&nbsp;&nbsp;</span>	{13, &#34;R_AARCH64_P32_LDST8_ABS_LO12_NC&#34;},
<span id="L1581" class="ln">  1581&nbsp;&nbsp;</span>	{14, &#34;R_AARCH64_P32_LDST16_ABS_LO12_NC&#34;},
<span id="L1582" class="ln">  1582&nbsp;&nbsp;</span>	{15, &#34;R_AARCH64_P32_LDST32_ABS_LO12_NC&#34;},
<span id="L1583" class="ln">  1583&nbsp;&nbsp;</span>	{16, &#34;R_AARCH64_P32_LDST64_ABS_LO12_NC&#34;},
<span id="L1584" class="ln">  1584&nbsp;&nbsp;</span>	{17, &#34;R_AARCH64_P32_LDST128_ABS_LO12_NC&#34;},
<span id="L1585" class="ln">  1585&nbsp;&nbsp;</span>	{18, &#34;R_AARCH64_P32_TSTBR14&#34;},
<span id="L1586" class="ln">  1586&nbsp;&nbsp;</span>	{19, &#34;R_AARCH64_P32_CONDBR19&#34;},
<span id="L1587" class="ln">  1587&nbsp;&nbsp;</span>	{20, &#34;R_AARCH64_P32_JUMP26&#34;},
<span id="L1588" class="ln">  1588&nbsp;&nbsp;</span>	{21, &#34;R_AARCH64_P32_CALL26&#34;},
<span id="L1589" class="ln">  1589&nbsp;&nbsp;</span>	{25, &#34;R_AARCH64_P32_GOT_LD_PREL19&#34;},
<span id="L1590" class="ln">  1590&nbsp;&nbsp;</span>	{26, &#34;R_AARCH64_P32_ADR_GOT_PAGE&#34;},
<span id="L1591" class="ln">  1591&nbsp;&nbsp;</span>	{27, &#34;R_AARCH64_P32_LD32_GOT_LO12_NC&#34;},
<span id="L1592" class="ln">  1592&nbsp;&nbsp;</span>	{81, &#34;R_AARCH64_P32_TLSGD_ADR_PAGE21&#34;},
<span id="L1593" class="ln">  1593&nbsp;&nbsp;</span>	{82, &#34;R_AARCH64_P32_TLSGD_ADD_LO12_NC&#34;},
<span id="L1594" class="ln">  1594&nbsp;&nbsp;</span>	{103, &#34;R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21&#34;},
<span id="L1595" class="ln">  1595&nbsp;&nbsp;</span>	{104, &#34;R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC&#34;},
<span id="L1596" class="ln">  1596&nbsp;&nbsp;</span>	{105, &#34;R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19&#34;},
<span id="L1597" class="ln">  1597&nbsp;&nbsp;</span>	{106, &#34;R_AARCH64_P32_TLSLE_MOVW_TPREL_G1&#34;},
<span id="L1598" class="ln">  1598&nbsp;&nbsp;</span>	{107, &#34;R_AARCH64_P32_TLSLE_MOVW_TPREL_G0&#34;},
<span id="L1599" class="ln">  1599&nbsp;&nbsp;</span>	{108, &#34;R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC&#34;},
<span id="L1600" class="ln">  1600&nbsp;&nbsp;</span>	{109, &#34;R_AARCH64_P32_TLSLE_ADD_TPREL_HI12&#34;},
<span id="L1601" class="ln">  1601&nbsp;&nbsp;</span>	{110, &#34;R_AARCH64_P32_TLSLE_ADD_TPREL_LO12&#34;},
<span id="L1602" class="ln">  1602&nbsp;&nbsp;</span>	{111, &#34;R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC&#34;},
<span id="L1603" class="ln">  1603&nbsp;&nbsp;</span>	{122, &#34;R_AARCH64_P32_TLSDESC_LD_PREL19&#34;},
<span id="L1604" class="ln">  1604&nbsp;&nbsp;</span>	{123, &#34;R_AARCH64_P32_TLSDESC_ADR_PREL21&#34;},
<span id="L1605" class="ln">  1605&nbsp;&nbsp;</span>	{124, &#34;R_AARCH64_P32_TLSDESC_ADR_PAGE21&#34;},
<span id="L1606" class="ln">  1606&nbsp;&nbsp;</span>	{125, &#34;R_AARCH64_P32_TLSDESC_LD32_LO12_NC&#34;},
<span id="L1607" class="ln">  1607&nbsp;&nbsp;</span>	{126, &#34;R_AARCH64_P32_TLSDESC_ADD_LO12_NC&#34;},
<span id="L1608" class="ln">  1608&nbsp;&nbsp;</span>	{127, &#34;R_AARCH64_P32_TLSDESC_CALL&#34;},
<span id="L1609" class="ln">  1609&nbsp;&nbsp;</span>	{180, &#34;R_AARCH64_P32_COPY&#34;},
<span id="L1610" class="ln">  1610&nbsp;&nbsp;</span>	{181, &#34;R_AARCH64_P32_GLOB_DAT&#34;},
<span id="L1611" class="ln">  1611&nbsp;&nbsp;</span>	{182, &#34;R_AARCH64_P32_JUMP_SLOT&#34;},
<span id="L1612" class="ln">  1612&nbsp;&nbsp;</span>	{183, &#34;R_AARCH64_P32_RELATIVE&#34;},
<span id="L1613" class="ln">  1613&nbsp;&nbsp;</span>	{184, &#34;R_AARCH64_P32_TLS_DTPMOD&#34;},
<span id="L1614" class="ln">  1614&nbsp;&nbsp;</span>	{185, &#34;R_AARCH64_P32_TLS_DTPREL&#34;},
<span id="L1615" class="ln">  1615&nbsp;&nbsp;</span>	{186, &#34;R_AARCH64_P32_TLS_TPREL&#34;},
<span id="L1616" class="ln">  1616&nbsp;&nbsp;</span>	{187, &#34;R_AARCH64_P32_TLSDESC&#34;},
<span id="L1617" class="ln">  1617&nbsp;&nbsp;</span>	{188, &#34;R_AARCH64_P32_IRELATIVE&#34;},
<span id="L1618" class="ln">  1618&nbsp;&nbsp;</span>	{256, &#34;R_AARCH64_NULL&#34;},
<span id="L1619" class="ln">  1619&nbsp;&nbsp;</span>	{257, &#34;R_AARCH64_ABS64&#34;},
<span id="L1620" class="ln">  1620&nbsp;&nbsp;</span>	{258, &#34;R_AARCH64_ABS32&#34;},
<span id="L1621" class="ln">  1621&nbsp;&nbsp;</span>	{259, &#34;R_AARCH64_ABS16&#34;},
<span id="L1622" class="ln">  1622&nbsp;&nbsp;</span>	{260, &#34;R_AARCH64_PREL64&#34;},
<span id="L1623" class="ln">  1623&nbsp;&nbsp;</span>	{261, &#34;R_AARCH64_PREL32&#34;},
<span id="L1624" class="ln">  1624&nbsp;&nbsp;</span>	{262, &#34;R_AARCH64_PREL16&#34;},
<span id="L1625" class="ln">  1625&nbsp;&nbsp;</span>	{263, &#34;R_AARCH64_MOVW_UABS_G0&#34;},
<span id="L1626" class="ln">  1626&nbsp;&nbsp;</span>	{264, &#34;R_AARCH64_MOVW_UABS_G0_NC&#34;},
<span id="L1627" class="ln">  1627&nbsp;&nbsp;</span>	{265, &#34;R_AARCH64_MOVW_UABS_G1&#34;},
<span id="L1628" class="ln">  1628&nbsp;&nbsp;</span>	{266, &#34;R_AARCH64_MOVW_UABS_G1_NC&#34;},
<span id="L1629" class="ln">  1629&nbsp;&nbsp;</span>	{267, &#34;R_AARCH64_MOVW_UABS_G2&#34;},
<span id="L1630" class="ln">  1630&nbsp;&nbsp;</span>	{268, &#34;R_AARCH64_MOVW_UABS_G2_NC&#34;},
<span id="L1631" class="ln">  1631&nbsp;&nbsp;</span>	{269, &#34;R_AARCH64_MOVW_UABS_G3&#34;},
<span id="L1632" class="ln">  1632&nbsp;&nbsp;</span>	{270, &#34;R_AARCH64_MOVW_SABS_G0&#34;},
<span id="L1633" class="ln">  1633&nbsp;&nbsp;</span>	{271, &#34;R_AARCH64_MOVW_SABS_G1&#34;},
<span id="L1634" class="ln">  1634&nbsp;&nbsp;</span>	{272, &#34;R_AARCH64_MOVW_SABS_G2&#34;},
<span id="L1635" class="ln">  1635&nbsp;&nbsp;</span>	{273, &#34;R_AARCH64_LD_PREL_LO19&#34;},
<span id="L1636" class="ln">  1636&nbsp;&nbsp;</span>	{274, &#34;R_AARCH64_ADR_PREL_LO21&#34;},
<span id="L1637" class="ln">  1637&nbsp;&nbsp;</span>	{275, &#34;R_AARCH64_ADR_PREL_PG_HI21&#34;},
<span id="L1638" class="ln">  1638&nbsp;&nbsp;</span>	{276, &#34;R_AARCH64_ADR_PREL_PG_HI21_NC&#34;},
<span id="L1639" class="ln">  1639&nbsp;&nbsp;</span>	{277, &#34;R_AARCH64_ADD_ABS_LO12_NC&#34;},
<span id="L1640" class="ln">  1640&nbsp;&nbsp;</span>	{278, &#34;R_AARCH64_LDST8_ABS_LO12_NC&#34;},
<span id="L1641" class="ln">  1641&nbsp;&nbsp;</span>	{279, &#34;R_AARCH64_TSTBR14&#34;},
<span id="L1642" class="ln">  1642&nbsp;&nbsp;</span>	{280, &#34;R_AARCH64_CONDBR19&#34;},
<span id="L1643" class="ln">  1643&nbsp;&nbsp;</span>	{282, &#34;R_AARCH64_JUMP26&#34;},
<span id="L1644" class="ln">  1644&nbsp;&nbsp;</span>	{283, &#34;R_AARCH64_CALL26&#34;},
<span id="L1645" class="ln">  1645&nbsp;&nbsp;</span>	{284, &#34;R_AARCH64_LDST16_ABS_LO12_NC&#34;},
<span id="L1646" class="ln">  1646&nbsp;&nbsp;</span>	{285, &#34;R_AARCH64_LDST32_ABS_LO12_NC&#34;},
<span id="L1647" class="ln">  1647&nbsp;&nbsp;</span>	{286, &#34;R_AARCH64_LDST64_ABS_LO12_NC&#34;},
<span id="L1648" class="ln">  1648&nbsp;&nbsp;</span>	{299, &#34;R_AARCH64_LDST128_ABS_LO12_NC&#34;},
<span id="L1649" class="ln">  1649&nbsp;&nbsp;</span>	{309, &#34;R_AARCH64_GOT_LD_PREL19&#34;},
<span id="L1650" class="ln">  1650&nbsp;&nbsp;</span>	{310, &#34;R_AARCH64_LD64_GOTOFF_LO15&#34;},
<span id="L1651" class="ln">  1651&nbsp;&nbsp;</span>	{311, &#34;R_AARCH64_ADR_GOT_PAGE&#34;},
<span id="L1652" class="ln">  1652&nbsp;&nbsp;</span>	{312, &#34;R_AARCH64_LD64_GOT_LO12_NC&#34;},
<span id="L1653" class="ln">  1653&nbsp;&nbsp;</span>	{313, &#34;R_AARCH64_LD64_GOTPAGE_LO15&#34;},
<span id="L1654" class="ln">  1654&nbsp;&nbsp;</span>	{512, &#34;R_AARCH64_TLSGD_ADR_PREL21&#34;},
<span id="L1655" class="ln">  1655&nbsp;&nbsp;</span>	{513, &#34;R_AARCH64_TLSGD_ADR_PAGE21&#34;},
<span id="L1656" class="ln">  1656&nbsp;&nbsp;</span>	{514, &#34;R_AARCH64_TLSGD_ADD_LO12_NC&#34;},
<span id="L1657" class="ln">  1657&nbsp;&nbsp;</span>	{515, &#34;R_AARCH64_TLSGD_MOVW_G1&#34;},
<span id="L1658" class="ln">  1658&nbsp;&nbsp;</span>	{516, &#34;R_AARCH64_TLSGD_MOVW_G0_NC&#34;},
<span id="L1659" class="ln">  1659&nbsp;&nbsp;</span>	{517, &#34;R_AARCH64_TLSLD_ADR_PREL21&#34;},
<span id="L1660" class="ln">  1660&nbsp;&nbsp;</span>	{518, &#34;R_AARCH64_TLSLD_ADR_PAGE21&#34;},
<span id="L1661" class="ln">  1661&nbsp;&nbsp;</span>	{539, &#34;R_AARCH64_TLSIE_MOVW_GOTTPREL_G1&#34;},
<span id="L1662" class="ln">  1662&nbsp;&nbsp;</span>	{540, &#34;R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC&#34;},
<span id="L1663" class="ln">  1663&nbsp;&nbsp;</span>	{541, &#34;R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21&#34;},
<span id="L1664" class="ln">  1664&nbsp;&nbsp;</span>	{542, &#34;R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC&#34;},
<span id="L1665" class="ln">  1665&nbsp;&nbsp;</span>	{543, &#34;R_AARCH64_TLSIE_LD_GOTTPREL_PREL19&#34;},
<span id="L1666" class="ln">  1666&nbsp;&nbsp;</span>	{544, &#34;R_AARCH64_TLSLE_MOVW_TPREL_G2&#34;},
<span id="L1667" class="ln">  1667&nbsp;&nbsp;</span>	{545, &#34;R_AARCH64_TLSLE_MOVW_TPREL_G1&#34;},
<span id="L1668" class="ln">  1668&nbsp;&nbsp;</span>	{546, &#34;R_AARCH64_TLSLE_MOVW_TPREL_G1_NC&#34;},
<span id="L1669" class="ln">  1669&nbsp;&nbsp;</span>	{547, &#34;R_AARCH64_TLSLE_MOVW_TPREL_G0&#34;},
<span id="L1670" class="ln">  1670&nbsp;&nbsp;</span>	{548, &#34;R_AARCH64_TLSLE_MOVW_TPREL_G0_NC&#34;},
<span id="L1671" class="ln">  1671&nbsp;&nbsp;</span>	{549, &#34;R_AARCH64_TLSLE_ADD_TPREL_HI12&#34;},
<span id="L1672" class="ln">  1672&nbsp;&nbsp;</span>	{550, &#34;R_AARCH64_TLSLE_ADD_TPREL_LO12&#34;},
<span id="L1673" class="ln">  1673&nbsp;&nbsp;</span>	{551, &#34;R_AARCH64_TLSLE_ADD_TPREL_LO12_NC&#34;},
<span id="L1674" class="ln">  1674&nbsp;&nbsp;</span>	{560, &#34;R_AARCH64_TLSDESC_LD_PREL19&#34;},
<span id="L1675" class="ln">  1675&nbsp;&nbsp;</span>	{561, &#34;R_AARCH64_TLSDESC_ADR_PREL21&#34;},
<span id="L1676" class="ln">  1676&nbsp;&nbsp;</span>	{562, &#34;R_AARCH64_TLSDESC_ADR_PAGE21&#34;},
<span id="L1677" class="ln">  1677&nbsp;&nbsp;</span>	{563, &#34;R_AARCH64_TLSDESC_LD64_LO12_NC&#34;},
<span id="L1678" class="ln">  1678&nbsp;&nbsp;</span>	{564, &#34;R_AARCH64_TLSDESC_ADD_LO12_NC&#34;},
<span id="L1679" class="ln">  1679&nbsp;&nbsp;</span>	{565, &#34;R_AARCH64_TLSDESC_OFF_G1&#34;},
<span id="L1680" class="ln">  1680&nbsp;&nbsp;</span>	{566, &#34;R_AARCH64_TLSDESC_OFF_G0_NC&#34;},
<span id="L1681" class="ln">  1681&nbsp;&nbsp;</span>	{567, &#34;R_AARCH64_TLSDESC_LDR&#34;},
<span id="L1682" class="ln">  1682&nbsp;&nbsp;</span>	{568, &#34;R_AARCH64_TLSDESC_ADD&#34;},
<span id="L1683" class="ln">  1683&nbsp;&nbsp;</span>	{569, &#34;R_AARCH64_TLSDESC_CALL&#34;},
<span id="L1684" class="ln">  1684&nbsp;&nbsp;</span>	{570, &#34;R_AARCH64_TLSLE_LDST128_TPREL_LO12&#34;},
<span id="L1685" class="ln">  1685&nbsp;&nbsp;</span>	{571, &#34;R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC&#34;},
<span id="L1686" class="ln">  1686&nbsp;&nbsp;</span>	{572, &#34;R_AARCH64_TLSLD_LDST128_DTPREL_LO12&#34;},
<span id="L1687" class="ln">  1687&nbsp;&nbsp;</span>	{573, &#34;R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC&#34;},
<span id="L1688" class="ln">  1688&nbsp;&nbsp;</span>	{1024, &#34;R_AARCH64_COPY&#34;},
<span id="L1689" class="ln">  1689&nbsp;&nbsp;</span>	{1025, &#34;R_AARCH64_GLOB_DAT&#34;},
<span id="L1690" class="ln">  1690&nbsp;&nbsp;</span>	{1026, &#34;R_AARCH64_JUMP_SLOT&#34;},
<span id="L1691" class="ln">  1691&nbsp;&nbsp;</span>	{1027, &#34;R_AARCH64_RELATIVE&#34;},
<span id="L1692" class="ln">  1692&nbsp;&nbsp;</span>	{1028, &#34;R_AARCH64_TLS_DTPMOD64&#34;},
<span id="L1693" class="ln">  1693&nbsp;&nbsp;</span>	{1029, &#34;R_AARCH64_TLS_DTPREL64&#34;},
<span id="L1694" class="ln">  1694&nbsp;&nbsp;</span>	{1030, &#34;R_AARCH64_TLS_TPREL64&#34;},
<span id="L1695" class="ln">  1695&nbsp;&nbsp;</span>	{1031, &#34;R_AARCH64_TLSDESC&#34;},
<span id="L1696" class="ln">  1696&nbsp;&nbsp;</span>	{1032, &#34;R_AARCH64_IRELATIVE&#34;},
<span id="L1697" class="ln">  1697&nbsp;&nbsp;</span>}
<span id="L1698" class="ln">  1698&nbsp;&nbsp;</span>
<span id="L1699" class="ln">  1699&nbsp;&nbsp;</span>func (i R_AARCH64) String() string   { return stringName(uint32(i), raarch64Strings, false) }
<span id="L1700" class="ln">  1700&nbsp;&nbsp;</span>func (i R_AARCH64) GoString() string { return stringName(uint32(i), raarch64Strings, true) }
<span id="L1701" class="ln">  1701&nbsp;&nbsp;</span>
<span id="L1702" class="ln">  1702&nbsp;&nbsp;</span><span class="comment">// Relocation types for Alpha.</span>
<span id="L1703" class="ln">  1703&nbsp;&nbsp;</span>type R_ALPHA int
<span id="L1704" class="ln">  1704&nbsp;&nbsp;</span>
<span id="L1705" class="ln">  1705&nbsp;&nbsp;</span>const (
<span id="L1706" class="ln">  1706&nbsp;&nbsp;</span>	R_ALPHA_NONE           R_ALPHA = 0  <span class="comment">/* No reloc */</span>
<span id="L1707" class="ln">  1707&nbsp;&nbsp;</span>	R_ALPHA_REFLONG        R_ALPHA = 1  <span class="comment">/* Direct 32 bit */</span>
<span id="L1708" class="ln">  1708&nbsp;&nbsp;</span>	R_ALPHA_REFQUAD        R_ALPHA = 2  <span class="comment">/* Direct 64 bit */</span>
<span id="L1709" class="ln">  1709&nbsp;&nbsp;</span>	R_ALPHA_GPREL32        R_ALPHA = 3  <span class="comment">/* GP relative 32 bit */</span>
<span id="L1710" class="ln">  1710&nbsp;&nbsp;</span>	R_ALPHA_LITERAL        R_ALPHA = 4  <span class="comment">/* GP relative 16 bit w/optimization */</span>
<span id="L1711" class="ln">  1711&nbsp;&nbsp;</span>	R_ALPHA_LITUSE         R_ALPHA = 5  <span class="comment">/* Optimization hint for LITERAL */</span>
<span id="L1712" class="ln">  1712&nbsp;&nbsp;</span>	R_ALPHA_GPDISP         R_ALPHA = 6  <span class="comment">/* Add displacement to GP */</span>
<span id="L1713" class="ln">  1713&nbsp;&nbsp;</span>	R_ALPHA_BRADDR         R_ALPHA = 7  <span class="comment">/* PC+4 relative 23 bit shifted */</span>
<span id="L1714" class="ln">  1714&nbsp;&nbsp;</span>	R_ALPHA_HINT           R_ALPHA = 8  <span class="comment">/* PC+4 relative 16 bit shifted */</span>
<span id="L1715" class="ln">  1715&nbsp;&nbsp;</span>	R_ALPHA_SREL16         R_ALPHA = 9  <span class="comment">/* PC relative 16 bit */</span>
<span id="L1716" class="ln">  1716&nbsp;&nbsp;</span>	R_ALPHA_SREL32         R_ALPHA = 10 <span class="comment">/* PC relative 32 bit */</span>
<span id="L1717" class="ln">  1717&nbsp;&nbsp;</span>	R_ALPHA_SREL64         R_ALPHA = 11 <span class="comment">/* PC relative 64 bit */</span>
<span id="L1718" class="ln">  1718&nbsp;&nbsp;</span>	R_ALPHA_OP_PUSH        R_ALPHA = 12 <span class="comment">/* OP stack push */</span>
<span id="L1719" class="ln">  1719&nbsp;&nbsp;</span>	R_ALPHA_OP_STORE       R_ALPHA = 13 <span class="comment">/* OP stack pop and store */</span>
<span id="L1720" class="ln">  1720&nbsp;&nbsp;</span>	R_ALPHA_OP_PSUB        R_ALPHA = 14 <span class="comment">/* OP stack subtract */</span>
<span id="L1721" class="ln">  1721&nbsp;&nbsp;</span>	R_ALPHA_OP_PRSHIFT     R_ALPHA = 15 <span class="comment">/* OP stack right shift */</span>
<span id="L1722" class="ln">  1722&nbsp;&nbsp;</span>	R_ALPHA_GPVALUE        R_ALPHA = 16
<span id="L1723" class="ln">  1723&nbsp;&nbsp;</span>	R_ALPHA_GPRELHIGH      R_ALPHA = 17
<span id="L1724" class="ln">  1724&nbsp;&nbsp;</span>	R_ALPHA_GPRELLOW       R_ALPHA = 18
<span id="L1725" class="ln">  1725&nbsp;&nbsp;</span>	R_ALPHA_IMMED_GP_16    R_ALPHA = 19
<span id="L1726" class="ln">  1726&nbsp;&nbsp;</span>	R_ALPHA_IMMED_GP_HI32  R_ALPHA = 20
<span id="L1727" class="ln">  1727&nbsp;&nbsp;</span>	R_ALPHA_IMMED_SCN_HI32 R_ALPHA = 21
<span id="L1728" class="ln">  1728&nbsp;&nbsp;</span>	R_ALPHA_IMMED_BR_HI32  R_ALPHA = 22
<span id="L1729" class="ln">  1729&nbsp;&nbsp;</span>	R_ALPHA_IMMED_LO32     R_ALPHA = 23
<span id="L1730" class="ln">  1730&nbsp;&nbsp;</span>	R_ALPHA_COPY           R_ALPHA = 24 <span class="comment">/* Copy symbol at runtime */</span>
<span id="L1731" class="ln">  1731&nbsp;&nbsp;</span>	R_ALPHA_GLOB_DAT       R_ALPHA = 25 <span class="comment">/* Create GOT entry */</span>
<span id="L1732" class="ln">  1732&nbsp;&nbsp;</span>	R_ALPHA_JMP_SLOT       R_ALPHA = 26 <span class="comment">/* Create PLT entry */</span>
<span id="L1733" class="ln">  1733&nbsp;&nbsp;</span>	R_ALPHA_RELATIVE       R_ALPHA = 27 <span class="comment">/* Adjust by program base */</span>
<span id="L1734" class="ln">  1734&nbsp;&nbsp;</span>)
<span id="L1735" class="ln">  1735&nbsp;&nbsp;</span>
<span id="L1736" class="ln">  1736&nbsp;&nbsp;</span>var ralphaStrings = []intName{
<span id="L1737" class="ln">  1737&nbsp;&nbsp;</span>	{0, &#34;R_ALPHA_NONE&#34;},
<span id="L1738" class="ln">  1738&nbsp;&nbsp;</span>	{1, &#34;R_ALPHA_REFLONG&#34;},
<span id="L1739" class="ln">  1739&nbsp;&nbsp;</span>	{2, &#34;R_ALPHA_REFQUAD&#34;},
<span id="L1740" class="ln">  1740&nbsp;&nbsp;</span>	{3, &#34;R_ALPHA_GPREL32&#34;},
<span id="L1741" class="ln">  1741&nbsp;&nbsp;</span>	{4, &#34;R_ALPHA_LITERAL&#34;},
<span id="L1742" class="ln">  1742&nbsp;&nbsp;</span>	{5, &#34;R_ALPHA_LITUSE&#34;},
<span id="L1743" class="ln">  1743&nbsp;&nbsp;</span>	{6, &#34;R_ALPHA_GPDISP&#34;},
<span id="L1744" class="ln">  1744&nbsp;&nbsp;</span>	{7, &#34;R_ALPHA_BRADDR&#34;},
<span id="L1745" class="ln">  1745&nbsp;&nbsp;</span>	{8, &#34;R_ALPHA_HINT&#34;},
<span id="L1746" class="ln">  1746&nbsp;&nbsp;</span>	{9, &#34;R_ALPHA_SREL16&#34;},
<span id="L1747" class="ln">  1747&nbsp;&nbsp;</span>	{10, &#34;R_ALPHA_SREL32&#34;},
<span id="L1748" class="ln">  1748&nbsp;&nbsp;</span>	{11, &#34;R_ALPHA_SREL64&#34;},
<span id="L1749" class="ln">  1749&nbsp;&nbsp;</span>	{12, &#34;R_ALPHA_OP_PUSH&#34;},
<span id="L1750" class="ln">  1750&nbsp;&nbsp;</span>	{13, &#34;R_ALPHA_OP_STORE&#34;},
<span id="L1751" class="ln">  1751&nbsp;&nbsp;</span>	{14, &#34;R_ALPHA_OP_PSUB&#34;},
<span id="L1752" class="ln">  1752&nbsp;&nbsp;</span>	{15, &#34;R_ALPHA_OP_PRSHIFT&#34;},
<span id="L1753" class="ln">  1753&nbsp;&nbsp;</span>	{16, &#34;R_ALPHA_GPVALUE&#34;},
<span id="L1754" class="ln">  1754&nbsp;&nbsp;</span>	{17, &#34;R_ALPHA_GPRELHIGH&#34;},
<span id="L1755" class="ln">  1755&nbsp;&nbsp;</span>	{18, &#34;R_ALPHA_GPRELLOW&#34;},
<span id="L1756" class="ln">  1756&nbsp;&nbsp;</span>	{19, &#34;R_ALPHA_IMMED_GP_16&#34;},
<span id="L1757" class="ln">  1757&nbsp;&nbsp;</span>	{20, &#34;R_ALPHA_IMMED_GP_HI32&#34;},
<span id="L1758" class="ln">  1758&nbsp;&nbsp;</span>	{21, &#34;R_ALPHA_IMMED_SCN_HI32&#34;},
<span id="L1759" class="ln">  1759&nbsp;&nbsp;</span>	{22, &#34;R_ALPHA_IMMED_BR_HI32&#34;},
<span id="L1760" class="ln">  1760&nbsp;&nbsp;</span>	{23, &#34;R_ALPHA_IMMED_LO32&#34;},
<span id="L1761" class="ln">  1761&nbsp;&nbsp;</span>	{24, &#34;R_ALPHA_COPY&#34;},
<span id="L1762" class="ln">  1762&nbsp;&nbsp;</span>	{25, &#34;R_ALPHA_GLOB_DAT&#34;},
<span id="L1763" class="ln">  1763&nbsp;&nbsp;</span>	{26, &#34;R_ALPHA_JMP_SLOT&#34;},
<span id="L1764" class="ln">  1764&nbsp;&nbsp;</span>	{27, &#34;R_ALPHA_RELATIVE&#34;},
<span id="L1765" class="ln">  1765&nbsp;&nbsp;</span>}
<span id="L1766" class="ln">  1766&nbsp;&nbsp;</span>
<span id="L1767" class="ln">  1767&nbsp;&nbsp;</span>func (i R_ALPHA) String() string   { return stringName(uint32(i), ralphaStrings, false) }
<span id="L1768" class="ln">  1768&nbsp;&nbsp;</span>func (i R_ALPHA) GoString() string { return stringName(uint32(i), ralphaStrings, true) }
<span id="L1769" class="ln">  1769&nbsp;&nbsp;</span>
<span id="L1770" class="ln">  1770&nbsp;&nbsp;</span><span class="comment">// Relocation types for ARM.</span>
<span id="L1771" class="ln">  1771&nbsp;&nbsp;</span>type R_ARM int
<span id="L1772" class="ln">  1772&nbsp;&nbsp;</span>
<span id="L1773" class="ln">  1773&nbsp;&nbsp;</span>const (
<span id="L1774" class="ln">  1774&nbsp;&nbsp;</span>	R_ARM_NONE               R_ARM = 0 <span class="comment">/* No relocation. */</span>
<span id="L1775" class="ln">  1775&nbsp;&nbsp;</span>	R_ARM_PC24               R_ARM = 1
<span id="L1776" class="ln">  1776&nbsp;&nbsp;</span>	R_ARM_ABS32              R_ARM = 2
<span id="L1777" class="ln">  1777&nbsp;&nbsp;</span>	R_ARM_REL32              R_ARM = 3
<span id="L1778" class="ln">  1778&nbsp;&nbsp;</span>	R_ARM_PC13               R_ARM = 4
<span id="L1779" class="ln">  1779&nbsp;&nbsp;</span>	R_ARM_ABS16              R_ARM = 5
<span id="L1780" class="ln">  1780&nbsp;&nbsp;</span>	R_ARM_ABS12              R_ARM = 6
<span id="L1781" class="ln">  1781&nbsp;&nbsp;</span>	R_ARM_THM_ABS5           R_ARM = 7
<span id="L1782" class="ln">  1782&nbsp;&nbsp;</span>	R_ARM_ABS8               R_ARM = 8
<span id="L1783" class="ln">  1783&nbsp;&nbsp;</span>	R_ARM_SBREL32            R_ARM = 9
<span id="L1784" class="ln">  1784&nbsp;&nbsp;</span>	R_ARM_THM_PC22           R_ARM = 10
<span id="L1785" class="ln">  1785&nbsp;&nbsp;</span>	R_ARM_THM_PC8            R_ARM = 11
<span id="L1786" class="ln">  1786&nbsp;&nbsp;</span>	R_ARM_AMP_VCALL9         R_ARM = 12
<span id="L1787" class="ln">  1787&nbsp;&nbsp;</span>	R_ARM_SWI24              R_ARM = 13
<span id="L1788" class="ln">  1788&nbsp;&nbsp;</span>	R_ARM_THM_SWI8           R_ARM = 14
<span id="L1789" class="ln">  1789&nbsp;&nbsp;</span>	R_ARM_XPC25              R_ARM = 15
<span id="L1790" class="ln">  1790&nbsp;&nbsp;</span>	R_ARM_THM_XPC22          R_ARM = 16
<span id="L1791" class="ln">  1791&nbsp;&nbsp;</span>	R_ARM_TLS_DTPMOD32       R_ARM = 17
<span id="L1792" class="ln">  1792&nbsp;&nbsp;</span>	R_ARM_TLS_DTPOFF32       R_ARM = 18
<span id="L1793" class="ln">  1793&nbsp;&nbsp;</span>	R_ARM_TLS_TPOFF32        R_ARM = 19
<span id="L1794" class="ln">  1794&nbsp;&nbsp;</span>	R_ARM_COPY               R_ARM = 20 <span class="comment">/* Copy data from shared object. */</span>
<span id="L1795" class="ln">  1795&nbsp;&nbsp;</span>	R_ARM_GLOB_DAT           R_ARM = 21 <span class="comment">/* Set GOT entry to data address. */</span>
<span id="L1796" class="ln">  1796&nbsp;&nbsp;</span>	R_ARM_JUMP_SLOT          R_ARM = 22 <span class="comment">/* Set GOT entry to code address. */</span>
<span id="L1797" class="ln">  1797&nbsp;&nbsp;</span>	R_ARM_RELATIVE           R_ARM = 23 <span class="comment">/* Add load address of shared object. */</span>
<span id="L1798" class="ln">  1798&nbsp;&nbsp;</span>	R_ARM_GOTOFF             R_ARM = 24 <span class="comment">/* Add GOT-relative symbol address. */</span>
<span id="L1799" class="ln">  1799&nbsp;&nbsp;</span>	R_ARM_GOTPC              R_ARM = 25 <span class="comment">/* Add PC-relative GOT table address. */</span>
<span id="L1800" class="ln">  1800&nbsp;&nbsp;</span>	R_ARM_GOT32              R_ARM = 26 <span class="comment">/* Add PC-relative GOT offset. */</span>
<span id="L1801" class="ln">  1801&nbsp;&nbsp;</span>	R_ARM_PLT32              R_ARM = 27 <span class="comment">/* Add PC-relative PLT offset. */</span>
<span id="L1802" class="ln">  1802&nbsp;&nbsp;</span>	R_ARM_CALL               R_ARM = 28
<span id="L1803" class="ln">  1803&nbsp;&nbsp;</span>	R_ARM_JUMP24             R_ARM = 29
<span id="L1804" class="ln">  1804&nbsp;&nbsp;</span>	R_ARM_THM_JUMP24         R_ARM = 30
<span id="L1805" class="ln">  1805&nbsp;&nbsp;</span>	R_ARM_BASE_ABS           R_ARM = 31
<span id="L1806" class="ln">  1806&nbsp;&nbsp;</span>	R_ARM_ALU_PCREL_7_0      R_ARM = 32
<span id="L1807" class="ln">  1807&nbsp;&nbsp;</span>	R_ARM_ALU_PCREL_15_8     R_ARM = 33
<span id="L1808" class="ln">  1808&nbsp;&nbsp;</span>	R_ARM_ALU_PCREL_23_15    R_ARM = 34
<span id="L1809" class="ln">  1809&nbsp;&nbsp;</span>	R_ARM_LDR_SBREL_11_10_NC R_ARM = 35
<span id="L1810" class="ln">  1810&nbsp;&nbsp;</span>	R_ARM_ALU_SBREL_19_12_NC R_ARM = 36
<span id="L1811" class="ln">  1811&nbsp;&nbsp;</span>	R_ARM_ALU_SBREL_27_20_CK R_ARM = 37
<span id="L1812" class="ln">  1812&nbsp;&nbsp;</span>	R_ARM_TARGET1            R_ARM = 38
<span id="L1813" class="ln">  1813&nbsp;&nbsp;</span>	R_ARM_SBREL31            R_ARM = 39
<span id="L1814" class="ln">  1814&nbsp;&nbsp;</span>	R_ARM_V4BX               R_ARM = 40
<span id="L1815" class="ln">  1815&nbsp;&nbsp;</span>	R_ARM_TARGET2            R_ARM = 41
<span id="L1816" class="ln">  1816&nbsp;&nbsp;</span>	R_ARM_PREL31             R_ARM = 42
<span id="L1817" class="ln">  1817&nbsp;&nbsp;</span>	R_ARM_MOVW_ABS_NC        R_ARM = 43
<span id="L1818" class="ln">  1818&nbsp;&nbsp;</span>	R_ARM_MOVT_ABS           R_ARM = 44
<span id="L1819" class="ln">  1819&nbsp;&nbsp;</span>	R_ARM_MOVW_PREL_NC       R_ARM = 45
<span id="L1820" class="ln">  1820&nbsp;&nbsp;</span>	R_ARM_MOVT_PREL          R_ARM = 46
<span id="L1821" class="ln">  1821&nbsp;&nbsp;</span>	R_ARM_THM_MOVW_ABS_NC    R_ARM = 47
<span id="L1822" class="ln">  1822&nbsp;&nbsp;</span>	R_ARM_THM_MOVT_ABS       R_ARM = 48
<span id="L1823" class="ln">  1823&nbsp;&nbsp;</span>	R_ARM_THM_MOVW_PREL_NC   R_ARM = 49
<span id="L1824" class="ln">  1824&nbsp;&nbsp;</span>	R_ARM_THM_MOVT_PREL      R_ARM = 50
<span id="L1825" class="ln">  1825&nbsp;&nbsp;</span>	R_ARM_THM_JUMP19         R_ARM = 51
<span id="L1826" class="ln">  1826&nbsp;&nbsp;</span>	R_ARM_THM_JUMP6          R_ARM = 52
<span id="L1827" class="ln">  1827&nbsp;&nbsp;</span>	R_ARM_THM_ALU_PREL_11_0  R_ARM = 53
<span id="L1828" class="ln">  1828&nbsp;&nbsp;</span>	R_ARM_THM_PC12           R_ARM = 54
<span id="L1829" class="ln">  1829&nbsp;&nbsp;</span>	R_ARM_ABS32_NOI          R_ARM = 55
<span id="L1830" class="ln">  1830&nbsp;&nbsp;</span>	R_ARM_REL32_NOI          R_ARM = 56
<span id="L1831" class="ln">  1831&nbsp;&nbsp;</span>	R_ARM_ALU_PC_G0_NC       R_ARM = 57
<span id="L1832" class="ln">  1832&nbsp;&nbsp;</span>	R_ARM_ALU_PC_G0          R_ARM = 58
<span id="L1833" class="ln">  1833&nbsp;&nbsp;</span>	R_ARM_ALU_PC_G1_NC       R_ARM = 59
<span id="L1834" class="ln">  1834&nbsp;&nbsp;</span>	R_ARM_ALU_PC_G1          R_ARM = 60
<span id="L1835" class="ln">  1835&nbsp;&nbsp;</span>	R_ARM_ALU_PC_G2          R_ARM = 61
<span id="L1836" class="ln">  1836&nbsp;&nbsp;</span>	R_ARM_LDR_PC_G1          R_ARM = 62
<span id="L1837" class="ln">  1837&nbsp;&nbsp;</span>	R_ARM_LDR_PC_G2          R_ARM = 63
<span id="L1838" class="ln">  1838&nbsp;&nbsp;</span>	R_ARM_LDRS_PC_G0         R_ARM = 64
<span id="L1839" class="ln">  1839&nbsp;&nbsp;</span>	R_ARM_LDRS_PC_G1         R_ARM = 65
<span id="L1840" class="ln">  1840&nbsp;&nbsp;</span>	R_ARM_LDRS_PC_G2         R_ARM = 66
<span id="L1841" class="ln">  1841&nbsp;&nbsp;</span>	R_ARM_LDC_PC_G0          R_ARM = 67
<span id="L1842" class="ln">  1842&nbsp;&nbsp;</span>	R_ARM_LDC_PC_G1          R_ARM = 68
<span id="L1843" class="ln">  1843&nbsp;&nbsp;</span>	R_ARM_LDC_PC_G2          R_ARM = 69
<span id="L1844" class="ln">  1844&nbsp;&nbsp;</span>	R_ARM_ALU_SB_G0_NC       R_ARM = 70
<span id="L1845" class="ln">  1845&nbsp;&nbsp;</span>	R_ARM_ALU_SB_G0          R_ARM = 71
<span id="L1846" class="ln">  1846&nbsp;&nbsp;</span>	R_ARM_ALU_SB_G1_NC       R_ARM = 72
<span id="L1847" class="ln">  1847&nbsp;&nbsp;</span>	R_ARM_ALU_SB_G1          R_ARM = 73
<span id="L1848" class="ln">  1848&nbsp;&nbsp;</span>	R_ARM_ALU_SB_G2          R_ARM = 74
<span id="L1849" class="ln">  1849&nbsp;&nbsp;</span>	R_ARM_LDR_SB_G0          R_ARM = 75
<span id="L1850" class="ln">  1850&nbsp;&nbsp;</span>	R_ARM_LDR_SB_G1          R_ARM = 76
<span id="L1851" class="ln">  1851&nbsp;&nbsp;</span>	R_ARM_LDR_SB_G2          R_ARM = 77
<span id="L1852" class="ln">  1852&nbsp;&nbsp;</span>	R_ARM_LDRS_SB_G0         R_ARM = 78
<span id="L1853" class="ln">  1853&nbsp;&nbsp;</span>	R_ARM_LDRS_SB_G1         R_ARM = 79
<span id="L1854" class="ln">  1854&nbsp;&nbsp;</span>	R_ARM_LDRS_SB_G2         R_ARM = 80
<span id="L1855" class="ln">  1855&nbsp;&nbsp;</span>	R_ARM_LDC_SB_G0          R_ARM = 81
<span id="L1856" class="ln">  1856&nbsp;&nbsp;</span>	R_ARM_LDC_SB_G1          R_ARM = 82
<span id="L1857" class="ln">  1857&nbsp;&nbsp;</span>	R_ARM_LDC_SB_G2          R_ARM = 83
<span id="L1858" class="ln">  1858&nbsp;&nbsp;</span>	R_ARM_MOVW_BREL_NC       R_ARM = 84
<span id="L1859" class="ln">  1859&nbsp;&nbsp;</span>	R_ARM_MOVT_BREL          R_ARM = 85
<span id="L1860" class="ln">  1860&nbsp;&nbsp;</span>	R_ARM_MOVW_BREL          R_ARM = 86
<span id="L1861" class="ln">  1861&nbsp;&nbsp;</span>	R_ARM_THM_MOVW_BREL_NC   R_ARM = 87
<span id="L1862" class="ln">  1862&nbsp;&nbsp;</span>	R_ARM_THM_MOVT_BREL      R_ARM = 88
<span id="L1863" class="ln">  1863&nbsp;&nbsp;</span>	R_ARM_THM_MOVW_BREL      R_ARM = 89
<span id="L1864" class="ln">  1864&nbsp;&nbsp;</span>	R_ARM_TLS_GOTDESC        R_ARM = 90
<span id="L1865" class="ln">  1865&nbsp;&nbsp;</span>	R_ARM_TLS_CALL           R_ARM = 91
<span id="L1866" class="ln">  1866&nbsp;&nbsp;</span>	R_ARM_TLS_DESCSEQ        R_ARM = 92
<span id="L1867" class="ln">  1867&nbsp;&nbsp;</span>	R_ARM_THM_TLS_CALL       R_ARM = 93
<span id="L1868" class="ln">  1868&nbsp;&nbsp;</span>	R_ARM_PLT32_ABS          R_ARM = 94
<span id="L1869" class="ln">  1869&nbsp;&nbsp;</span>	R_ARM_GOT_ABS            R_ARM = 95
<span id="L1870" class="ln">  1870&nbsp;&nbsp;</span>	R_ARM_GOT_PREL           R_ARM = 96
<span id="L1871" class="ln">  1871&nbsp;&nbsp;</span>	R_ARM_GOT_BREL12         R_ARM = 97
<span id="L1872" class="ln">  1872&nbsp;&nbsp;</span>	R_ARM_GOTOFF12           R_ARM = 98
<span id="L1873" class="ln">  1873&nbsp;&nbsp;</span>	R_ARM_GOTRELAX           R_ARM = 99
<span id="L1874" class="ln">  1874&nbsp;&nbsp;</span>	R_ARM_GNU_VTENTRY        R_ARM = 100
<span id="L1875" class="ln">  1875&nbsp;&nbsp;</span>	R_ARM_GNU_VTINHERIT      R_ARM = 101
<span id="L1876" class="ln">  1876&nbsp;&nbsp;</span>	R_ARM_THM_JUMP11         R_ARM = 102
<span id="L1877" class="ln">  1877&nbsp;&nbsp;</span>	R_ARM_THM_JUMP8          R_ARM = 103
<span id="L1878" class="ln">  1878&nbsp;&nbsp;</span>	R_ARM_TLS_GD32           R_ARM = 104
<span id="L1879" class="ln">  1879&nbsp;&nbsp;</span>	R_ARM_TLS_LDM32          R_ARM = 105
<span id="L1880" class="ln">  1880&nbsp;&nbsp;</span>	R_ARM_TLS_LDO32          R_ARM = 106
<span id="L1881" class="ln">  1881&nbsp;&nbsp;</span>	R_ARM_TLS_IE32           R_ARM = 107
<span id="L1882" class="ln">  1882&nbsp;&nbsp;</span>	R_ARM_TLS_LE32           R_ARM = 108
<span id="L1883" class="ln">  1883&nbsp;&nbsp;</span>	R_ARM_TLS_LDO12          R_ARM = 109
<span id="L1884" class="ln">  1884&nbsp;&nbsp;</span>	R_ARM_TLS_LE12           R_ARM = 110
<span id="L1885" class="ln">  1885&nbsp;&nbsp;</span>	R_ARM_TLS_IE12GP         R_ARM = 111
<span id="L1886" class="ln">  1886&nbsp;&nbsp;</span>	R_ARM_PRIVATE_0          R_ARM = 112
<span id="L1887" class="ln">  1887&nbsp;&nbsp;</span>	R_ARM_PRIVATE_1          R_ARM = 113
<span id="L1888" class="ln">  1888&nbsp;&nbsp;</span>	R_ARM_PRIVATE_2          R_ARM = 114
<span id="L1889" class="ln">  1889&nbsp;&nbsp;</span>	R_ARM_PRIVATE_3          R_ARM = 115
<span id="L1890" class="ln">  1890&nbsp;&nbsp;</span>	R_ARM_PRIVATE_4          R_ARM = 116
<span id="L1891" class="ln">  1891&nbsp;&nbsp;</span>	R_ARM_PRIVATE_5          R_ARM = 117
<span id="L1892" class="ln">  1892&nbsp;&nbsp;</span>	R_ARM_PRIVATE_6          R_ARM = 118
<span id="L1893" class="ln">  1893&nbsp;&nbsp;</span>	R_ARM_PRIVATE_7          R_ARM = 119
<span id="L1894" class="ln">  1894&nbsp;&nbsp;</span>	R_ARM_PRIVATE_8          R_ARM = 120
<span id="L1895" class="ln">  1895&nbsp;&nbsp;</span>	R_ARM_PRIVATE_9          R_ARM = 121
<span id="L1896" class="ln">  1896&nbsp;&nbsp;</span>	R_ARM_PRIVATE_10         R_ARM = 122
<span id="L1897" class="ln">  1897&nbsp;&nbsp;</span>	R_ARM_PRIVATE_11         R_ARM = 123
<span id="L1898" class="ln">  1898&nbsp;&nbsp;</span>	R_ARM_PRIVATE_12         R_ARM = 124
<span id="L1899" class="ln">  1899&nbsp;&nbsp;</span>	R_ARM_PRIVATE_13         R_ARM = 125
<span id="L1900" class="ln">  1900&nbsp;&nbsp;</span>	R_ARM_PRIVATE_14         R_ARM = 126
<span id="L1901" class="ln">  1901&nbsp;&nbsp;</span>	R_ARM_PRIVATE_15         R_ARM = 127
<span id="L1902" class="ln">  1902&nbsp;&nbsp;</span>	R_ARM_ME_TOO             R_ARM = 128
<span id="L1903" class="ln">  1903&nbsp;&nbsp;</span>	R_ARM_THM_TLS_DESCSEQ16  R_ARM = 129
<span id="L1904" class="ln">  1904&nbsp;&nbsp;</span>	R_ARM_THM_TLS_DESCSEQ32  R_ARM = 130
<span id="L1905" class="ln">  1905&nbsp;&nbsp;</span>	R_ARM_THM_GOT_BREL12     R_ARM = 131
<span id="L1906" class="ln">  1906&nbsp;&nbsp;</span>	R_ARM_THM_ALU_ABS_G0_NC  R_ARM = 132
<span id="L1907" class="ln">  1907&nbsp;&nbsp;</span>	R_ARM_THM_ALU_ABS_G1_NC  R_ARM = 133
<span id="L1908" class="ln">  1908&nbsp;&nbsp;</span>	R_ARM_THM_ALU_ABS_G2_NC  R_ARM = 134
<span id="L1909" class="ln">  1909&nbsp;&nbsp;</span>	R_ARM_THM_ALU_ABS_G3     R_ARM = 135
<span id="L1910" class="ln">  1910&nbsp;&nbsp;</span>	R_ARM_IRELATIVE          R_ARM = 160
<span id="L1911" class="ln">  1911&nbsp;&nbsp;</span>	R_ARM_RXPC25             R_ARM = 249
<span id="L1912" class="ln">  1912&nbsp;&nbsp;</span>	R_ARM_RSBREL32           R_ARM = 250
<span id="L1913" class="ln">  1913&nbsp;&nbsp;</span>	R_ARM_THM_RPC22          R_ARM = 251
<span id="L1914" class="ln">  1914&nbsp;&nbsp;</span>	R_ARM_RREL32             R_ARM = 252
<span id="L1915" class="ln">  1915&nbsp;&nbsp;</span>	R_ARM_RABS32             R_ARM = 253
<span id="L1916" class="ln">  1916&nbsp;&nbsp;</span>	R_ARM_RPC24              R_ARM = 254
<span id="L1917" class="ln">  1917&nbsp;&nbsp;</span>	R_ARM_RBASE              R_ARM = 255
<span id="L1918" class="ln">  1918&nbsp;&nbsp;</span>)
<span id="L1919" class="ln">  1919&nbsp;&nbsp;</span>
<span id="L1920" class="ln">  1920&nbsp;&nbsp;</span>var rarmStrings = []intName{
<span id="L1921" class="ln">  1921&nbsp;&nbsp;</span>	{0, &#34;R_ARM_NONE&#34;},
<span id="L1922" class="ln">  1922&nbsp;&nbsp;</span>	{1, &#34;R_ARM_PC24&#34;},
<span id="L1923" class="ln">  1923&nbsp;&nbsp;</span>	{2, &#34;R_ARM_ABS32&#34;},
<span id="L1924" class="ln">  1924&nbsp;&nbsp;</span>	{3, &#34;R_ARM_REL32&#34;},
<span id="L1925" class="ln">  1925&nbsp;&nbsp;</span>	{4, &#34;R_ARM_PC13&#34;},
<span id="L1926" class="ln">  1926&nbsp;&nbsp;</span>	{5, &#34;R_ARM_ABS16&#34;},
<span id="L1927" class="ln">  1927&nbsp;&nbsp;</span>	{6, &#34;R_ARM_ABS12&#34;},
<span id="L1928" class="ln">  1928&nbsp;&nbsp;</span>	{7, &#34;R_ARM_THM_ABS5&#34;},
<span id="L1929" class="ln">  1929&nbsp;&nbsp;</span>	{8, &#34;R_ARM_ABS8&#34;},
<span id="L1930" class="ln">  1930&nbsp;&nbsp;</span>	{9, &#34;R_ARM_SBREL32&#34;},
<span id="L1931" class="ln">  1931&nbsp;&nbsp;</span>	{10, &#34;R_ARM_THM_PC22&#34;},
<span id="L1932" class="ln">  1932&nbsp;&nbsp;</span>	{11, &#34;R_ARM_THM_PC8&#34;},
<span id="L1933" class="ln">  1933&nbsp;&nbsp;</span>	{12, &#34;R_ARM_AMP_VCALL9&#34;},
<span id="L1934" class="ln">  1934&nbsp;&nbsp;</span>	{13, &#34;R_ARM_SWI24&#34;},
<span id="L1935" class="ln">  1935&nbsp;&nbsp;</span>	{14, &#34;R_ARM_THM_SWI8&#34;},
<span id="L1936" class="ln">  1936&nbsp;&nbsp;</span>	{15, &#34;R_ARM_XPC25&#34;},
<span id="L1937" class="ln">  1937&nbsp;&nbsp;</span>	{16, &#34;R_ARM_THM_XPC22&#34;},
<span id="L1938" class="ln">  1938&nbsp;&nbsp;</span>	{17, &#34;R_ARM_TLS_DTPMOD32&#34;},
<span id="L1939" class="ln">  1939&nbsp;&nbsp;</span>	{18, &#34;R_ARM_TLS_DTPOFF32&#34;},
<span id="L1940" class="ln">  1940&nbsp;&nbsp;</span>	{19, &#34;R_ARM_TLS_TPOFF32&#34;},
<span id="L1941" class="ln">  1941&nbsp;&nbsp;</span>	{20, &#34;R_ARM_COPY&#34;},
<span id="L1942" class="ln">  1942&nbsp;&nbsp;</span>	{21, &#34;R_ARM_GLOB_DAT&#34;},
<span id="L1943" class="ln">  1943&nbsp;&nbsp;</span>	{22, &#34;R_ARM_JUMP_SLOT&#34;},
<span id="L1944" class="ln">  1944&nbsp;&nbsp;</span>	{23, &#34;R_ARM_RELATIVE&#34;},
<span id="L1945" class="ln">  1945&nbsp;&nbsp;</span>	{24, &#34;R_ARM_GOTOFF&#34;},
<span id="L1946" class="ln">  1946&nbsp;&nbsp;</span>	{25, &#34;R_ARM_GOTPC&#34;},
<span id="L1947" class="ln">  1947&nbsp;&nbsp;</span>	{26, &#34;R_ARM_GOT32&#34;},
<span id="L1948" class="ln">  1948&nbsp;&nbsp;</span>	{27, &#34;R_ARM_PLT32&#34;},
<span id="L1949" class="ln">  1949&nbsp;&nbsp;</span>	{28, &#34;R_ARM_CALL&#34;},
<span id="L1950" class="ln">  1950&nbsp;&nbsp;</span>	{29, &#34;R_ARM_JUMP24&#34;},
<span id="L1951" class="ln">  1951&nbsp;&nbsp;</span>	{30, &#34;R_ARM_THM_JUMP24&#34;},
<span id="L1952" class="ln">  1952&nbsp;&nbsp;</span>	{31, &#34;R_ARM_BASE_ABS&#34;},
<span id="L1953" class="ln">  1953&nbsp;&nbsp;</span>	{32, &#34;R_ARM_ALU_PCREL_7_0&#34;},
<span id="L1954" class="ln">  1954&nbsp;&nbsp;</span>	{33, &#34;R_ARM_ALU_PCREL_15_8&#34;},
<span id="L1955" class="ln">  1955&nbsp;&nbsp;</span>	{34, &#34;R_ARM_ALU_PCREL_23_15&#34;},
<span id="L1956" class="ln">  1956&nbsp;&nbsp;</span>	{35, &#34;R_ARM_LDR_SBREL_11_10_NC&#34;},
<span id="L1957" class="ln">  1957&nbsp;&nbsp;</span>	{36, &#34;R_ARM_ALU_SBREL_19_12_NC&#34;},
<span id="L1958" class="ln">  1958&nbsp;&nbsp;</span>	{37, &#34;R_ARM_ALU_SBREL_27_20_CK&#34;},
<span id="L1959" class="ln">  1959&nbsp;&nbsp;</span>	{38, &#34;R_ARM_TARGET1&#34;},
<span id="L1960" class="ln">  1960&nbsp;&nbsp;</span>	{39, &#34;R_ARM_SBREL31&#34;},
<span id="L1961" class="ln">  1961&nbsp;&nbsp;</span>	{40, &#34;R_ARM_V4BX&#34;},
<span id="L1962" class="ln">  1962&nbsp;&nbsp;</span>	{41, &#34;R_ARM_TARGET2&#34;},
<span id="L1963" class="ln">  1963&nbsp;&nbsp;</span>	{42, &#34;R_ARM_PREL31&#34;},
<span id="L1964" class="ln">  1964&nbsp;&nbsp;</span>	{43, &#34;R_ARM_MOVW_ABS_NC&#34;},
<span id="L1965" class="ln">  1965&nbsp;&nbsp;</span>	{44, &#34;R_ARM_MOVT_ABS&#34;},
<span id="L1966" class="ln">  1966&nbsp;&nbsp;</span>	{45, &#34;R_ARM_MOVW_PREL_NC&#34;},
<span id="L1967" class="ln">  1967&nbsp;&nbsp;</span>	{46, &#34;R_ARM_MOVT_PREL&#34;},
<span id="L1968" class="ln">  1968&nbsp;&nbsp;</span>	{47, &#34;R_ARM_THM_MOVW_ABS_NC&#34;},
<span id="L1969" class="ln">  1969&nbsp;&nbsp;</span>	{48, &#34;R_ARM_THM_MOVT_ABS&#34;},
<span id="L1970" class="ln">  1970&nbsp;&nbsp;</span>	{49, &#34;R_ARM_THM_MOVW_PREL_NC&#34;},
<span id="L1971" class="ln">  1971&nbsp;&nbsp;</span>	{50, &#34;R_ARM_THM_MOVT_PREL&#34;},
<span id="L1972" class="ln">  1972&nbsp;&nbsp;</span>	{51, &#34;R_ARM_THM_JUMP19&#34;},
<span id="L1973" class="ln">  1973&nbsp;&nbsp;</span>	{52, &#34;R_ARM_THM_JUMP6&#34;},
<span id="L1974" class="ln">  1974&nbsp;&nbsp;</span>	{53, &#34;R_ARM_THM_ALU_PREL_11_0&#34;},
<span id="L1975" class="ln">  1975&nbsp;&nbsp;</span>	{54, &#34;R_ARM_THM_PC12&#34;},
<span id="L1976" class="ln">  1976&nbsp;&nbsp;</span>	{55, &#34;R_ARM_ABS32_NOI&#34;},
<span id="L1977" class="ln">  1977&nbsp;&nbsp;</span>	{56, &#34;R_ARM_REL32_NOI&#34;},
<span id="L1978" class="ln">  1978&nbsp;&nbsp;</span>	{57, &#34;R_ARM_ALU_PC_G0_NC&#34;},
<span id="L1979" class="ln">  1979&nbsp;&nbsp;</span>	{58, &#34;R_ARM_ALU_PC_G0&#34;},
<span id="L1980" class="ln">  1980&nbsp;&nbsp;</span>	{59, &#34;R_ARM_ALU_PC_G1_NC&#34;},
<span id="L1981" class="ln">  1981&nbsp;&nbsp;</span>	{60, &#34;R_ARM_ALU_PC_G1&#34;},
<span id="L1982" class="ln">  1982&nbsp;&nbsp;</span>	{61, &#34;R_ARM_ALU_PC_G2&#34;},
<span id="L1983" class="ln">  1983&nbsp;&nbsp;</span>	{62, &#34;R_ARM_LDR_PC_G1&#34;},
<span id="L1984" class="ln">  1984&nbsp;&nbsp;</span>	{63, &#34;R_ARM_LDR_PC_G2&#34;},
<span id="L1985" class="ln">  1985&nbsp;&nbsp;</span>	{64, &#34;R_ARM_LDRS_PC_G0&#34;},
<span id="L1986" class="ln">  1986&nbsp;&nbsp;</span>	{65, &#34;R_ARM_LDRS_PC_G1&#34;},
<span id="L1987" class="ln">  1987&nbsp;&nbsp;</span>	{66, &#34;R_ARM_LDRS_PC_G2&#34;},
<span id="L1988" class="ln">  1988&nbsp;&nbsp;</span>	{67, &#34;R_ARM_LDC_PC_G0&#34;},
<span id="L1989" class="ln">  1989&nbsp;&nbsp;</span>	{68, &#34;R_ARM_LDC_PC_G1&#34;},
<span id="L1990" class="ln">  1990&nbsp;&nbsp;</span>	{69, &#34;R_ARM_LDC_PC_G2&#34;},
<span id="L1991" class="ln">  1991&nbsp;&nbsp;</span>	{70, &#34;R_ARM_ALU_SB_G0_NC&#34;},
<span id="L1992" class="ln">  1992&nbsp;&nbsp;</span>	{71, &#34;R_ARM_ALU_SB_G0&#34;},
<span id="L1993" class="ln">  1993&nbsp;&nbsp;</span>	{72, &#34;R_ARM_ALU_SB_G1_NC&#34;},
<span id="L1994" class="ln">  1994&nbsp;&nbsp;</span>	{73, &#34;R_ARM_ALU_SB_G1&#34;},
<span id="L1995" class="ln">  1995&nbsp;&nbsp;</span>	{74, &#34;R_ARM_ALU_SB_G2&#34;},
<span id="L1996" class="ln">  1996&nbsp;&nbsp;</span>	{75, &#34;R_ARM_LDR_SB_G0&#34;},
<span id="L1997" class="ln">  1997&nbsp;&nbsp;</span>	{76, &#34;R_ARM_LDR_SB_G1&#34;},
<span id="L1998" class="ln">  1998&nbsp;&nbsp;</span>	{77, &#34;R_ARM_LDR_SB_G2&#34;},
<span id="L1999" class="ln">  1999&nbsp;&nbsp;</span>	{78, &#34;R_ARM_LDRS_SB_G0&#34;},
<span id="L2000" class="ln">  2000&nbsp;&nbsp;</span>	{79, &#34;R_ARM_LDRS_SB_G1&#34;},
<span id="L2001" class="ln">  2001&nbsp;&nbsp;</span>	{80, &#34;R_ARM_LDRS_SB_G2&#34;},
<span id="L2002" class="ln">  2002&nbsp;&nbsp;</span>	{81, &#34;R_ARM_LDC_SB_G0&#34;},
<span id="L2003" class="ln">  2003&nbsp;&nbsp;</span>	{82, &#34;R_ARM_LDC_SB_G1&#34;},
<span id="L2004" class="ln">  2004&nbsp;&nbsp;</span>	{83, &#34;R_ARM_LDC_SB_G2&#34;},
<span id="L2005" class="ln">  2005&nbsp;&nbsp;</span>	{84, &#34;R_ARM_MOVW_BREL_NC&#34;},
<span id="L2006" class="ln">  2006&nbsp;&nbsp;</span>	{85, &#34;R_ARM_MOVT_BREL&#34;},
<span id="L2007" class="ln">  2007&nbsp;&nbsp;</span>	{86, &#34;R_ARM_MOVW_BREL&#34;},
<span id="L2008" class="ln">  2008&nbsp;&nbsp;</span>	{87, &#34;R_ARM_THM_MOVW_BREL_NC&#34;},
<span id="L2009" class="ln">  2009&nbsp;&nbsp;</span>	{88, &#34;R_ARM_THM_MOVT_BREL&#34;},
<span id="L2010" class="ln">  2010&nbsp;&nbsp;</span>	{89, &#34;R_ARM_THM_MOVW_BREL&#34;},
<span id="L2011" class="ln">  2011&nbsp;&nbsp;</span>	{90, &#34;R_ARM_TLS_GOTDESC&#34;},
<span id="L2012" class="ln">  2012&nbsp;&nbsp;</span>	{91, &#34;R_ARM_TLS_CALL&#34;},
<span id="L2013" class="ln">  2013&nbsp;&nbsp;</span>	{92, &#34;R_ARM_TLS_DESCSEQ&#34;},
<span id="L2014" class="ln">  2014&nbsp;&nbsp;</span>	{93, &#34;R_ARM_THM_TLS_CALL&#34;},
<span id="L2015" class="ln">  2015&nbsp;&nbsp;</span>	{94, &#34;R_ARM_PLT32_ABS&#34;},
<span id="L2016" class="ln">  2016&nbsp;&nbsp;</span>	{95, &#34;R_ARM_GOT_ABS&#34;},
<span id="L2017" class="ln">  2017&nbsp;&nbsp;</span>	{96, &#34;R_ARM_GOT_PREL&#34;},
<span id="L2018" class="ln">  2018&nbsp;&nbsp;</span>	{97, &#34;R_ARM_GOT_BREL12&#34;},
<span id="L2019" class="ln">  2019&nbsp;&nbsp;</span>	{98, &#34;R_ARM_GOTOFF12&#34;},
<span id="L2020" class="ln">  2020&nbsp;&nbsp;</span>	{99, &#34;R_ARM_GOTRELAX&#34;},
<span id="L2021" class="ln">  2021&nbsp;&nbsp;</span>	{100, &#34;R_ARM_GNU_VTENTRY&#34;},
<span id="L2022" class="ln">  2022&nbsp;&nbsp;</span>	{101, &#34;R_ARM_GNU_VTINHERIT&#34;},
<span id="L2023" class="ln">  2023&nbsp;&nbsp;</span>	{102, &#34;R_ARM_THM_JUMP11&#34;},
<span id="L2024" class="ln">  2024&nbsp;&nbsp;</span>	{103, &#34;R_ARM_THM_JUMP8&#34;},
<span id="L2025" class="ln">  2025&nbsp;&nbsp;</span>	{104, &#34;R_ARM_TLS_GD32&#34;},
<span id="L2026" class="ln">  2026&nbsp;&nbsp;</span>	{105, &#34;R_ARM_TLS_LDM32&#34;},
<span id="L2027" class="ln">  2027&nbsp;&nbsp;</span>	{106, &#34;R_ARM_TLS_LDO32&#34;},
<span id="L2028" class="ln">  2028&nbsp;&nbsp;</span>	{107, &#34;R_ARM_TLS_IE32&#34;},
<span id="L2029" class="ln">  2029&nbsp;&nbsp;</span>	{108, &#34;R_ARM_TLS_LE32&#34;},
<span id="L2030" class="ln">  2030&nbsp;&nbsp;</span>	{109, &#34;R_ARM_TLS_LDO12&#34;},
<span id="L2031" class="ln">  2031&nbsp;&nbsp;</span>	{110, &#34;R_ARM_TLS_LE12&#34;},
<span id="L2032" class="ln">  2032&nbsp;&nbsp;</span>	{111, &#34;R_ARM_TLS_IE12GP&#34;},
<span id="L2033" class="ln">  2033&nbsp;&nbsp;</span>	{112, &#34;R_ARM_PRIVATE_0&#34;},
<span id="L2034" class="ln">  2034&nbsp;&nbsp;</span>	{113, &#34;R_ARM_PRIVATE_1&#34;},
<span id="L2035" class="ln">  2035&nbsp;&nbsp;</span>	{114, &#34;R_ARM_PRIVATE_2&#34;},
<span id="L2036" class="ln">  2036&nbsp;&nbsp;</span>	{115, &#34;R_ARM_PRIVATE_3&#34;},
<span id="L2037" class="ln">  2037&nbsp;&nbsp;</span>	{116, &#34;R_ARM_PRIVATE_4&#34;},
<span id="L2038" class="ln">  2038&nbsp;&nbsp;</span>	{117, &#34;R_ARM_PRIVATE_5&#34;},
<span id="L2039" class="ln">  2039&nbsp;&nbsp;</span>	{118, &#34;R_ARM_PRIVATE_6&#34;},
<span id="L2040" class="ln">  2040&nbsp;&nbsp;</span>	{119, &#34;R_ARM_PRIVATE_7&#34;},
<span id="L2041" class="ln">  2041&nbsp;&nbsp;</span>	{120, &#34;R_ARM_PRIVATE_8&#34;},
<span id="L2042" class="ln">  2042&nbsp;&nbsp;</span>	{121, &#34;R_ARM_PRIVATE_9&#34;},
<span id="L2043" class="ln">  2043&nbsp;&nbsp;</span>	{122, &#34;R_ARM_PRIVATE_10&#34;},
<span id="L2044" class="ln">  2044&nbsp;&nbsp;</span>	{123, &#34;R_ARM_PRIVATE_11&#34;},
<span id="L2045" class="ln">  2045&nbsp;&nbsp;</span>	{124, &#34;R_ARM_PRIVATE_12&#34;},
<span id="L2046" class="ln">  2046&nbsp;&nbsp;</span>	{125, &#34;R_ARM_PRIVATE_13&#34;},
<span id="L2047" class="ln">  2047&nbsp;&nbsp;</span>	{126, &#34;R_ARM_PRIVATE_14&#34;},
<span id="L2048" class="ln">  2048&nbsp;&nbsp;</span>	{127, &#34;R_ARM_PRIVATE_15&#34;},
<span id="L2049" class="ln">  2049&nbsp;&nbsp;</span>	{128, &#34;R_ARM_ME_TOO&#34;},
<span id="L2050" class="ln">  2050&nbsp;&nbsp;</span>	{129, &#34;R_ARM_THM_TLS_DESCSEQ16&#34;},
<span id="L2051" class="ln">  2051&nbsp;&nbsp;</span>	{130, &#34;R_ARM_THM_TLS_DESCSEQ32&#34;},
<span id="L2052" class="ln">  2052&nbsp;&nbsp;</span>	{131, &#34;R_ARM_THM_GOT_BREL12&#34;},
<span id="L2053" class="ln">  2053&nbsp;&nbsp;</span>	{132, &#34;R_ARM_THM_ALU_ABS_G0_NC&#34;},
<span id="L2054" class="ln">  2054&nbsp;&nbsp;</span>	{133, &#34;R_ARM_THM_ALU_ABS_G1_NC&#34;},
<span id="L2055" class="ln">  2055&nbsp;&nbsp;</span>	{134, &#34;R_ARM_THM_ALU_ABS_G2_NC&#34;},
<span id="L2056" class="ln">  2056&nbsp;&nbsp;</span>	{135, &#34;R_ARM_THM_ALU_ABS_G3&#34;},
<span id="L2057" class="ln">  2057&nbsp;&nbsp;</span>	{160, &#34;R_ARM_IRELATIVE&#34;},
<span id="L2058" class="ln">  2058&nbsp;&nbsp;</span>	{249, &#34;R_ARM_RXPC25&#34;},
<span id="L2059" class="ln">  2059&nbsp;&nbsp;</span>	{250, &#34;R_ARM_RSBREL32&#34;},
<span id="L2060" class="ln">  2060&nbsp;&nbsp;</span>	{251, &#34;R_ARM_THM_RPC22&#34;},
<span id="L2061" class="ln">  2061&nbsp;&nbsp;</span>	{252, &#34;R_ARM_RREL32&#34;},
<span id="L2062" class="ln">  2062&nbsp;&nbsp;</span>	{253, &#34;R_ARM_RABS32&#34;},
<span id="L2063" class="ln">  2063&nbsp;&nbsp;</span>	{254, &#34;R_ARM_RPC24&#34;},
<span id="L2064" class="ln">  2064&nbsp;&nbsp;</span>	{255, &#34;R_ARM_RBASE&#34;},
<span id="L2065" class="ln">  2065&nbsp;&nbsp;</span>}
<span id="L2066" class="ln">  2066&nbsp;&nbsp;</span>
<span id="L2067" class="ln">  2067&nbsp;&nbsp;</span>func (i R_ARM) String() string   { return stringName(uint32(i), rarmStrings, false) }
<span id="L2068" class="ln">  2068&nbsp;&nbsp;</span>func (i R_ARM) GoString() string { return stringName(uint32(i), rarmStrings, true) }
<span id="L2069" class="ln">  2069&nbsp;&nbsp;</span>
<span id="L2070" class="ln">  2070&nbsp;&nbsp;</span><span class="comment">// Relocation types for 386.</span>
<span id="L2071" class="ln">  2071&nbsp;&nbsp;</span>type R_386 int
<span id="L2072" class="ln">  2072&nbsp;&nbsp;</span>
<span id="L2073" class="ln">  2073&nbsp;&nbsp;</span>const (
<span id="L2074" class="ln">  2074&nbsp;&nbsp;</span>	R_386_NONE          R_386 = 0  <span class="comment">/* No relocation. */</span>
<span id="L2075" class="ln">  2075&nbsp;&nbsp;</span>	R_386_32            R_386 = 1  <span class="comment">/* Add symbol value. */</span>
<span id="L2076" class="ln">  2076&nbsp;&nbsp;</span>	R_386_PC32          R_386 = 2  <span class="comment">/* Add PC-relative symbol value. */</span>
<span id="L2077" class="ln">  2077&nbsp;&nbsp;</span>	R_386_GOT32         R_386 = 3  <span class="comment">/* Add PC-relative GOT offset. */</span>
<span id="L2078" class="ln">  2078&nbsp;&nbsp;</span>	R_386_PLT32         R_386 = 4  <span class="comment">/* Add PC-relative PLT offset. */</span>
<span id="L2079" class="ln">  2079&nbsp;&nbsp;</span>	R_386_COPY          R_386 = 5  <span class="comment">/* Copy data from shared object. */</span>
<span id="L2080" class="ln">  2080&nbsp;&nbsp;</span>	R_386_GLOB_DAT      R_386 = 6  <span class="comment">/* Set GOT entry to data address. */</span>
<span id="L2081" class="ln">  2081&nbsp;&nbsp;</span>	R_386_JMP_SLOT      R_386 = 7  <span class="comment">/* Set GOT entry to code address. */</span>
<span id="L2082" class="ln">  2082&nbsp;&nbsp;</span>	R_386_RELATIVE      R_386 = 8  <span class="comment">/* Add load address of shared object. */</span>
<span id="L2083" class="ln">  2083&nbsp;&nbsp;</span>	R_386_GOTOFF        R_386 = 9  <span class="comment">/* Add GOT-relative symbol address. */</span>
<span id="L2084" class="ln">  2084&nbsp;&nbsp;</span>	R_386_GOTPC         R_386 = 10 <span class="comment">/* Add PC-relative GOT table address. */</span>
<span id="L2085" class="ln">  2085&nbsp;&nbsp;</span>	R_386_32PLT         R_386 = 11
<span id="L2086" class="ln">  2086&nbsp;&nbsp;</span>	R_386_TLS_TPOFF     R_386 = 14 <span class="comment">/* Negative offset in static TLS block */</span>
<span id="L2087" class="ln">  2087&nbsp;&nbsp;</span>	R_386_TLS_IE        R_386 = 15 <span class="comment">/* Absolute address of GOT for -ve static TLS */</span>
<span id="L2088" class="ln">  2088&nbsp;&nbsp;</span>	R_386_TLS_GOTIE     R_386 = 16 <span class="comment">/* GOT entry for negative static TLS block */</span>
<span id="L2089" class="ln">  2089&nbsp;&nbsp;</span>	R_386_TLS_LE        R_386 = 17 <span class="comment">/* Negative offset relative to static TLS */</span>
<span id="L2090" class="ln">  2090&nbsp;&nbsp;</span>	R_386_TLS_GD        R_386 = 18 <span class="comment">/* 32 bit offset to GOT (index,off) pair */</span>
<span id="L2091" class="ln">  2091&nbsp;&nbsp;</span>	R_386_TLS_LDM       R_386 = 19 <span class="comment">/* 32 bit offset to GOT (index,zero) pair */</span>
<span id="L2092" class="ln">  2092&nbsp;&nbsp;</span>	R_386_16            R_386 = 20
<span id="L2093" class="ln">  2093&nbsp;&nbsp;</span>	R_386_PC16          R_386 = 21
<span id="L2094" class="ln">  2094&nbsp;&nbsp;</span>	R_386_8             R_386 = 22
<span id="L2095" class="ln">  2095&nbsp;&nbsp;</span>	R_386_PC8           R_386 = 23
<span id="L2096" class="ln">  2096&nbsp;&nbsp;</span>	R_386_TLS_GD_32     R_386 = 24 <span class="comment">/* 32 bit offset to GOT (index,off) pair */</span>
<span id="L2097" class="ln">  2097&nbsp;&nbsp;</span>	R_386_TLS_GD_PUSH   R_386 = 25 <span class="comment">/* pushl instruction for Sun ABI GD sequence */</span>
<span id="L2098" class="ln">  2098&nbsp;&nbsp;</span>	R_386_TLS_GD_CALL   R_386 = 26 <span class="comment">/* call instruction for Sun ABI GD sequence */</span>
<span id="L2099" class="ln">  2099&nbsp;&nbsp;</span>	R_386_TLS_GD_POP    R_386 = 27 <span class="comment">/* popl instruction for Sun ABI GD sequence */</span>
<span id="L2100" class="ln">  2100&nbsp;&nbsp;</span>	R_386_TLS_LDM_32    R_386 = 28 <span class="comment">/* 32 bit offset to GOT (index,zero) pair */</span>
<span id="L2101" class="ln">  2101&nbsp;&nbsp;</span>	R_386_TLS_LDM_PUSH  R_386 = 29 <span class="comment">/* pushl instruction for Sun ABI LD sequence */</span>
<span id="L2102" class="ln">  2102&nbsp;&nbsp;</span>	R_386_TLS_LDM_CALL  R_386 = 30 <span class="comment">/* call instruction for Sun ABI LD sequence */</span>
<span id="L2103" class="ln">  2103&nbsp;&nbsp;</span>	R_386_TLS_LDM_POP   R_386 = 31 <span class="comment">/* popl instruction for Sun ABI LD sequence */</span>
<span id="L2104" class="ln">  2104&nbsp;&nbsp;</span>	R_386_TLS_LDO_32    R_386 = 32 <span class="comment">/* 32 bit offset from start of TLS block */</span>
<span id="L2105" class="ln">  2105&nbsp;&nbsp;</span>	R_386_TLS_IE_32     R_386 = 33 <span class="comment">/* 32 bit offset to GOT static TLS offset entry */</span>
<span id="L2106" class="ln">  2106&nbsp;&nbsp;</span>	R_386_TLS_LE_32     R_386 = 34 <span class="comment">/* 32 bit offset within static TLS block */</span>
<span id="L2107" class="ln">  2107&nbsp;&nbsp;</span>	R_386_TLS_DTPMOD32  R_386 = 35 <span class="comment">/* GOT entry containing TLS index */</span>
<span id="L2108" class="ln">  2108&nbsp;&nbsp;</span>	R_386_TLS_DTPOFF32  R_386 = 36 <span class="comment">/* GOT entry containing TLS offset */</span>
<span id="L2109" class="ln">  2109&nbsp;&nbsp;</span>	R_386_TLS_TPOFF32   R_386 = 37 <span class="comment">/* GOT entry of -ve static TLS offset */</span>
<span id="L2110" class="ln">  2110&nbsp;&nbsp;</span>	R_386_SIZE32        R_386 = 38
<span id="L2111" class="ln">  2111&nbsp;&nbsp;</span>	R_386_TLS_GOTDESC   R_386 = 39
<span id="L2112" class="ln">  2112&nbsp;&nbsp;</span>	R_386_TLS_DESC_CALL R_386 = 40
<span id="L2113" class="ln">  2113&nbsp;&nbsp;</span>	R_386_TLS_DESC      R_386 = 41
<span id="L2114" class="ln">  2114&nbsp;&nbsp;</span>	R_386_IRELATIVE     R_386 = 42
<span id="L2115" class="ln">  2115&nbsp;&nbsp;</span>	R_386_GOT32X        R_386 = 43
<span id="L2116" class="ln">  2116&nbsp;&nbsp;</span>)
<span id="L2117" class="ln">  2117&nbsp;&nbsp;</span>
<span id="L2118" class="ln">  2118&nbsp;&nbsp;</span>var r386Strings = []intName{
<span id="L2119" class="ln">  2119&nbsp;&nbsp;</span>	{0, &#34;R_386_NONE&#34;},
<span id="L2120" class="ln">  2120&nbsp;&nbsp;</span>	{1, &#34;R_386_32&#34;},
<span id="L2121" class="ln">  2121&nbsp;&nbsp;</span>	{2, &#34;R_386_PC32&#34;},
<span id="L2122" class="ln">  2122&nbsp;&nbsp;</span>	{3, &#34;R_386_GOT32&#34;},
<span id="L2123" class="ln">  2123&nbsp;&nbsp;</span>	{4, &#34;R_386_PLT32&#34;},
<span id="L2124" class="ln">  2124&nbsp;&nbsp;</span>	{5, &#34;R_386_COPY&#34;},
<span id="L2125" class="ln">  2125&nbsp;&nbsp;</span>	{6, &#34;R_386_GLOB_DAT&#34;},
<span id="L2126" class="ln">  2126&nbsp;&nbsp;</span>	{7, &#34;R_386_JMP_SLOT&#34;},
<span id="L2127" class="ln">  2127&nbsp;&nbsp;</span>	{8, &#34;R_386_RELATIVE&#34;},
<span id="L2128" class="ln">  2128&nbsp;&nbsp;</span>	{9, &#34;R_386_GOTOFF&#34;},
<span id="L2129" class="ln">  2129&nbsp;&nbsp;</span>	{10, &#34;R_386_GOTPC&#34;},
<span id="L2130" class="ln">  2130&nbsp;&nbsp;</span>	{11, &#34;R_386_32PLT&#34;},
<span id="L2131" class="ln">  2131&nbsp;&nbsp;</span>	{14, &#34;R_386_TLS_TPOFF&#34;},
<span id="L2132" class="ln">  2132&nbsp;&nbsp;</span>	{15, &#34;R_386_TLS_IE&#34;},
<span id="L2133" class="ln">  2133&nbsp;&nbsp;</span>	{16, &#34;R_386_TLS_GOTIE&#34;},
<span id="L2134" class="ln">  2134&nbsp;&nbsp;</span>	{17, &#34;R_386_TLS_LE&#34;},
<span id="L2135" class="ln">  2135&nbsp;&nbsp;</span>	{18, &#34;R_386_TLS_GD&#34;},
<span id="L2136" class="ln">  2136&nbsp;&nbsp;</span>	{19, &#34;R_386_TLS_LDM&#34;},
<span id="L2137" class="ln">  2137&nbsp;&nbsp;</span>	{20, &#34;R_386_16&#34;},
<span id="L2138" class="ln">  2138&nbsp;&nbsp;</span>	{21, &#34;R_386_PC16&#34;},
<span id="L2139" class="ln">  2139&nbsp;&nbsp;</span>	{22, &#34;R_386_8&#34;},
<span id="L2140" class="ln">  2140&nbsp;&nbsp;</span>	{23, &#34;R_386_PC8&#34;},
<span id="L2141" class="ln">  2141&nbsp;&nbsp;</span>	{24, &#34;R_386_TLS_GD_32&#34;},
<span id="L2142" class="ln">  2142&nbsp;&nbsp;</span>	{25, &#34;R_386_TLS_GD_PUSH&#34;},
<span id="L2143" class="ln">  2143&nbsp;&nbsp;</span>	{26, &#34;R_386_TLS_GD_CALL&#34;},
<span id="L2144" class="ln">  2144&nbsp;&nbsp;</span>	{27, &#34;R_386_TLS_GD_POP&#34;},
<span id="L2145" class="ln">  2145&nbsp;&nbsp;</span>	{28, &#34;R_386_TLS_LDM_32&#34;},
<span id="L2146" class="ln">  2146&nbsp;&nbsp;</span>	{29, &#34;R_386_TLS_LDM_PUSH&#34;},
<span id="L2147" class="ln">  2147&nbsp;&nbsp;</span>	{30, &#34;R_386_TLS_LDM_CALL&#34;},
<span id="L2148" class="ln">  2148&nbsp;&nbsp;</span>	{31, &#34;R_386_TLS_LDM_POP&#34;},
<span id="L2149" class="ln">  2149&nbsp;&nbsp;</span>	{32, &#34;R_386_TLS_LDO_32&#34;},
<span id="L2150" class="ln">  2150&nbsp;&nbsp;</span>	{33, &#34;R_386_TLS_IE_32&#34;},
<span id="L2151" class="ln">  2151&nbsp;&nbsp;</span>	{34, &#34;R_386_TLS_LE_32&#34;},
<span id="L2152" class="ln">  2152&nbsp;&nbsp;</span>	{35, &#34;R_386_TLS_DTPMOD32&#34;},
<span id="L2153" class="ln">  2153&nbsp;&nbsp;</span>	{36, &#34;R_386_TLS_DTPOFF32&#34;},
<span id="L2154" class="ln">  2154&nbsp;&nbsp;</span>	{37, &#34;R_386_TLS_TPOFF32&#34;},
<span id="L2155" class="ln">  2155&nbsp;&nbsp;</span>	{38, &#34;R_386_SIZE32&#34;},
<span id="L2156" class="ln">  2156&nbsp;&nbsp;</span>	{39, &#34;R_386_TLS_GOTDESC&#34;},
<span id="L2157" class="ln">  2157&nbsp;&nbsp;</span>	{40, &#34;R_386_TLS_DESC_CALL&#34;},
<span id="L2158" class="ln">  2158&nbsp;&nbsp;</span>	{41, &#34;R_386_TLS_DESC&#34;},
<span id="L2159" class="ln">  2159&nbsp;&nbsp;</span>	{42, &#34;R_386_IRELATIVE&#34;},
<span id="L2160" class="ln">  2160&nbsp;&nbsp;</span>	{43, &#34;R_386_GOT32X&#34;},
<span id="L2161" class="ln">  2161&nbsp;&nbsp;</span>}
<span id="L2162" class="ln">  2162&nbsp;&nbsp;</span>
<span id="L2163" class="ln">  2163&nbsp;&nbsp;</span>func (i R_386) String() string   { return stringName(uint32(i), r386Strings, false) }
<span id="L2164" class="ln">  2164&nbsp;&nbsp;</span>func (i R_386) GoString() string { return stringName(uint32(i), r386Strings, true) }
<span id="L2165" class="ln">  2165&nbsp;&nbsp;</span>
<span id="L2166" class="ln">  2166&nbsp;&nbsp;</span><span class="comment">// Relocation types for MIPS.</span>
<span id="L2167" class="ln">  2167&nbsp;&nbsp;</span>type R_MIPS int
<span id="L2168" class="ln">  2168&nbsp;&nbsp;</span>
<span id="L2169" class="ln">  2169&nbsp;&nbsp;</span>const (
<span id="L2170" class="ln">  2170&nbsp;&nbsp;</span>	R_MIPS_NONE          R_MIPS = 0
<span id="L2171" class="ln">  2171&nbsp;&nbsp;</span>	R_MIPS_16            R_MIPS = 1
<span id="L2172" class="ln">  2172&nbsp;&nbsp;</span>	R_MIPS_32            R_MIPS = 2
<span id="L2173" class="ln">  2173&nbsp;&nbsp;</span>	R_MIPS_REL32         R_MIPS = 3
<span id="L2174" class="ln">  2174&nbsp;&nbsp;</span>	R_MIPS_26            R_MIPS = 4
<span id="L2175" class="ln">  2175&nbsp;&nbsp;</span>	R_MIPS_HI16          R_MIPS = 5  <span class="comment">/* high 16 bits of symbol value */</span>
<span id="L2176" class="ln">  2176&nbsp;&nbsp;</span>	R_MIPS_LO16          R_MIPS = 6  <span class="comment">/* low 16 bits of symbol value */</span>
<span id="L2177" class="ln">  2177&nbsp;&nbsp;</span>	R_MIPS_GPREL16       R_MIPS = 7  <span class="comment">/* GP-relative reference  */</span>
<span id="L2178" class="ln">  2178&nbsp;&nbsp;</span>	R_MIPS_LITERAL       R_MIPS = 8  <span class="comment">/* Reference to literal section  */</span>
<span id="L2179" class="ln">  2179&nbsp;&nbsp;</span>	R_MIPS_GOT16         R_MIPS = 9  <span class="comment">/* Reference to global offset table */</span>
<span id="L2180" class="ln">  2180&nbsp;&nbsp;</span>	R_MIPS_PC16          R_MIPS = 10 <span class="comment">/* 16 bit PC relative reference */</span>
<span id="L2181" class="ln">  2181&nbsp;&nbsp;</span>	R_MIPS_CALL16        R_MIPS = 11 <span class="comment">/* 16 bit call through glbl offset tbl */</span>
<span id="L2182" class="ln">  2182&nbsp;&nbsp;</span>	R_MIPS_GPREL32       R_MIPS = 12
<span id="L2183" class="ln">  2183&nbsp;&nbsp;</span>	R_MIPS_SHIFT5        R_MIPS = 16
<span id="L2184" class="ln">  2184&nbsp;&nbsp;</span>	R_MIPS_SHIFT6        R_MIPS = 17
<span id="L2185" class="ln">  2185&nbsp;&nbsp;</span>	R_MIPS_64            R_MIPS = 18
<span id="L2186" class="ln">  2186&nbsp;&nbsp;</span>	R_MIPS_GOT_DISP      R_MIPS = 19
<span id="L2187" class="ln">  2187&nbsp;&nbsp;</span>	R_MIPS_GOT_PAGE      R_MIPS = 20
<span id="L2188" class="ln">  2188&nbsp;&nbsp;</span>	R_MIPS_GOT_OFST      R_MIPS = 21
<span id="L2189" class="ln">  2189&nbsp;&nbsp;</span>	R_MIPS_GOT_HI16      R_MIPS = 22
<span id="L2190" class="ln">  2190&nbsp;&nbsp;</span>	R_MIPS_GOT_LO16      R_MIPS = 23
<span id="L2191" class="ln">  2191&nbsp;&nbsp;</span>	R_MIPS_SUB           R_MIPS = 24
<span id="L2192" class="ln">  2192&nbsp;&nbsp;</span>	R_MIPS_INSERT_A      R_MIPS = 25
<span id="L2193" class="ln">  2193&nbsp;&nbsp;</span>	R_MIPS_INSERT_B      R_MIPS = 26
<span id="L2194" class="ln">  2194&nbsp;&nbsp;</span>	R_MIPS_DELETE        R_MIPS = 27
<span id="L2195" class="ln">  2195&nbsp;&nbsp;</span>	R_MIPS_HIGHER        R_MIPS = 28
<span id="L2196" class="ln">  2196&nbsp;&nbsp;</span>	R_MIPS_HIGHEST       R_MIPS = 29
<span id="L2197" class="ln">  2197&nbsp;&nbsp;</span>	R_MIPS_CALL_HI16     R_MIPS = 30
<span id="L2198" class="ln">  2198&nbsp;&nbsp;</span>	R_MIPS_CALL_LO16     R_MIPS = 31
<span id="L2199" class="ln">  2199&nbsp;&nbsp;</span>	R_MIPS_SCN_DISP      R_MIPS = 32
<span id="L2200" class="ln">  2200&nbsp;&nbsp;</span>	R_MIPS_REL16         R_MIPS = 33
<span id="L2201" class="ln">  2201&nbsp;&nbsp;</span>	R_MIPS_ADD_IMMEDIATE R_MIPS = 34
<span id="L2202" class="ln">  2202&nbsp;&nbsp;</span>	R_MIPS_PJUMP         R_MIPS = 35
<span id="L2203" class="ln">  2203&nbsp;&nbsp;</span>	R_MIPS_RELGOT        R_MIPS = 36
<span id="L2204" class="ln">  2204&nbsp;&nbsp;</span>	R_MIPS_JALR          R_MIPS = 37
<span id="L2205" class="ln">  2205&nbsp;&nbsp;</span>
<span id="L2206" class="ln">  2206&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPMOD32    R_MIPS = 38 <span class="comment">/* Module number 32 bit */</span>
<span id="L2207" class="ln">  2207&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPREL32    R_MIPS = 39 <span class="comment">/* Module-relative offset 32 bit */</span>
<span id="L2208" class="ln">  2208&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPMOD64    R_MIPS = 40 <span class="comment">/* Module number 64 bit */</span>
<span id="L2209" class="ln">  2209&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPREL64    R_MIPS = 41 <span class="comment">/* Module-relative offset 64 bit */</span>
<span id="L2210" class="ln">  2210&nbsp;&nbsp;</span>	R_MIPS_TLS_GD          R_MIPS = 42 <span class="comment">/* 16 bit GOT offset for GD */</span>
<span id="L2211" class="ln">  2211&nbsp;&nbsp;</span>	R_MIPS_TLS_LDM         R_MIPS = 43 <span class="comment">/* 16 bit GOT offset for LDM */</span>
<span id="L2212" class="ln">  2212&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPREL_HI16 R_MIPS = 44 <span class="comment">/* Module-relative offset, high 16 bits */</span>
<span id="L2213" class="ln">  2213&nbsp;&nbsp;</span>	R_MIPS_TLS_DTPREL_LO16 R_MIPS = 45 <span class="comment">/* Module-relative offset, low 16 bits */</span>
<span id="L2214" class="ln">  2214&nbsp;&nbsp;</span>	R_MIPS_TLS_GOTTPREL    R_MIPS = 46 <span class="comment">/* 16 bit GOT offset for IE */</span>
<span id="L2215" class="ln">  2215&nbsp;&nbsp;</span>	R_MIPS_TLS_TPREL32     R_MIPS = 47 <span class="comment">/* TP-relative offset, 32 bit */</span>
<span id="L2216" class="ln">  2216&nbsp;&nbsp;</span>	R_MIPS_TLS_TPREL64     R_MIPS = 48 <span class="comment">/* TP-relative offset, 64 bit */</span>
<span id="L2217" class="ln">  2217&nbsp;&nbsp;</span>	R_MIPS_TLS_TPREL_HI16  R_MIPS = 49 <span class="comment">/* TP-relative offset, high 16 bits */</span>
<span id="L2218" class="ln">  2218&nbsp;&nbsp;</span>	R_MIPS_TLS_TPREL_LO16  R_MIPS = 50 <span class="comment">/* TP-relative offset, low 16 bits */</span>
<span id="L2219" class="ln">  2219&nbsp;&nbsp;</span>
<span id="L2220" class="ln">  2220&nbsp;&nbsp;</span>	R_MIPS_PC32 R_MIPS = 248 <span class="comment">/* 32 bit PC relative reference */</span>
<span id="L2221" class="ln">  2221&nbsp;&nbsp;</span>)
<span id="L2222" class="ln">  2222&nbsp;&nbsp;</span>
<span id="L2223" class="ln">  2223&nbsp;&nbsp;</span>var rmipsStrings = []intName{
<span id="L2224" class="ln">  2224&nbsp;&nbsp;</span>	{0, &#34;R_MIPS_NONE&#34;},
<span id="L2225" class="ln">  2225&nbsp;&nbsp;</span>	{1, &#34;R_MIPS_16&#34;},
<span id="L2226" class="ln">  2226&nbsp;&nbsp;</span>	{2, &#34;R_MIPS_32&#34;},
<span id="L2227" class="ln">  2227&nbsp;&nbsp;</span>	{3, &#34;R_MIPS_REL32&#34;},
<span id="L2228" class="ln">  2228&nbsp;&nbsp;</span>	{4, &#34;R_MIPS_26&#34;},
<span id="L2229" class="ln">  2229&nbsp;&nbsp;</span>	{5, &#34;R_MIPS_HI16&#34;},
<span id="L2230" class="ln">  2230&nbsp;&nbsp;</span>	{6, &#34;R_MIPS_LO16&#34;},
<span id="L2231" class="ln">  2231&nbsp;&nbsp;</span>	{7, &#34;R_MIPS_GPREL16&#34;},
<span id="L2232" class="ln">  2232&nbsp;&nbsp;</span>	{8, &#34;R_MIPS_LITERAL&#34;},
<span id="L2233" class="ln">  2233&nbsp;&nbsp;</span>	{9, &#34;R_MIPS_GOT16&#34;},
<span id="L2234" class="ln">  2234&nbsp;&nbsp;</span>	{10, &#34;R_MIPS_PC16&#34;},
<span id="L2235" class="ln">  2235&nbsp;&nbsp;</span>	{11, &#34;R_MIPS_CALL16&#34;},
<span id="L2236" class="ln">  2236&nbsp;&nbsp;</span>	{12, &#34;R_MIPS_GPREL32&#34;},
<span id="L2237" class="ln">  2237&nbsp;&nbsp;</span>	{16, &#34;R_MIPS_SHIFT5&#34;},
<span id="L2238" class="ln">  2238&nbsp;&nbsp;</span>	{17, &#34;R_MIPS_SHIFT6&#34;},
<span id="L2239" class="ln">  2239&nbsp;&nbsp;</span>	{18, &#34;R_MIPS_64&#34;},
<span id="L2240" class="ln">  2240&nbsp;&nbsp;</span>	{19, &#34;R_MIPS_GOT_DISP&#34;},
<span id="L2241" class="ln">  2241&nbsp;&nbsp;</span>	{20, &#34;R_MIPS_GOT_PAGE&#34;},
<span id="L2242" class="ln">  2242&nbsp;&nbsp;</span>	{21, &#34;R_MIPS_GOT_OFST&#34;},
<span id="L2243" class="ln">  2243&nbsp;&nbsp;</span>	{22, &#34;R_MIPS_GOT_HI16&#34;},
<span id="L2244" class="ln">  2244&nbsp;&nbsp;</span>	{23, &#34;R_MIPS_GOT_LO16&#34;},
<span id="L2245" class="ln">  2245&nbsp;&nbsp;</span>	{24, &#34;R_MIPS_SUB&#34;},
<span id="L2246" class="ln">  2246&nbsp;&nbsp;</span>	{25, &#34;R_MIPS_INSERT_A&#34;},
<span id="L2247" class="ln">  2247&nbsp;&nbsp;</span>	{26, &#34;R_MIPS_INSERT_B&#34;},
<span id="L2248" class="ln">  2248&nbsp;&nbsp;</span>	{27, &#34;R_MIPS_DELETE&#34;},
<span id="L2249" class="ln">  2249&nbsp;&nbsp;</span>	{28, &#34;R_MIPS_HIGHER&#34;},
<span id="L2250" class="ln">  2250&nbsp;&nbsp;</span>	{29, &#34;R_MIPS_HIGHEST&#34;},
<span id="L2251" class="ln">  2251&nbsp;&nbsp;</span>	{30, &#34;R_MIPS_CALL_HI16&#34;},
<span id="L2252" class="ln">  2252&nbsp;&nbsp;</span>	{31, &#34;R_MIPS_CALL_LO16&#34;},
<span id="L2253" class="ln">  2253&nbsp;&nbsp;</span>	{32, &#34;R_MIPS_SCN_DISP&#34;},
<span id="L2254" class="ln">  2254&nbsp;&nbsp;</span>	{33, &#34;R_MIPS_REL16&#34;},
<span id="L2255" class="ln">  2255&nbsp;&nbsp;</span>	{34, &#34;R_MIPS_ADD_IMMEDIATE&#34;},
<span id="L2256" class="ln">  2256&nbsp;&nbsp;</span>	{35, &#34;R_MIPS_PJUMP&#34;},
<span id="L2257" class="ln">  2257&nbsp;&nbsp;</span>	{36, &#34;R_MIPS_RELGOT&#34;},
<span id="L2258" class="ln">  2258&nbsp;&nbsp;</span>	{37, &#34;R_MIPS_JALR&#34;},
<span id="L2259" class="ln">  2259&nbsp;&nbsp;</span>	{38, &#34;R_MIPS_TLS_DTPMOD32&#34;},
<span id="L2260" class="ln">  2260&nbsp;&nbsp;</span>	{39, &#34;R_MIPS_TLS_DTPREL32&#34;},
<span id="L2261" class="ln">  2261&nbsp;&nbsp;</span>	{40, &#34;R_MIPS_TLS_DTPMOD64&#34;},
<span id="L2262" class="ln">  2262&nbsp;&nbsp;</span>	{41, &#34;R_MIPS_TLS_DTPREL64&#34;},
<span id="L2263" class="ln">  2263&nbsp;&nbsp;</span>	{42, &#34;R_MIPS_TLS_GD&#34;},
<span id="L2264" class="ln">  2264&nbsp;&nbsp;</span>	{43, &#34;R_MIPS_TLS_LDM&#34;},
<span id="L2265" class="ln">  2265&nbsp;&nbsp;</span>	{44, &#34;R_MIPS_TLS_DTPREL_HI16&#34;},
<span id="L2266" class="ln">  2266&nbsp;&nbsp;</span>	{45, &#34;R_MIPS_TLS_DTPREL_LO16&#34;},
<span id="L2267" class="ln">  2267&nbsp;&nbsp;</span>	{46, &#34;R_MIPS_TLS_GOTTPREL&#34;},
<span id="L2268" class="ln">  2268&nbsp;&nbsp;</span>	{47, &#34;R_MIPS_TLS_TPREL32&#34;},
<span id="L2269" class="ln">  2269&nbsp;&nbsp;</span>	{48, &#34;R_MIPS_TLS_TPREL64&#34;},
<span id="L2270" class="ln">  2270&nbsp;&nbsp;</span>	{49, &#34;R_MIPS_TLS_TPREL_HI16&#34;},
<span id="L2271" class="ln">  2271&nbsp;&nbsp;</span>	{50, &#34;R_MIPS_TLS_TPREL_LO16&#34;},
<span id="L2272" class="ln">  2272&nbsp;&nbsp;</span>	{248, &#34;R_MIPS_PC32&#34;},
<span id="L2273" class="ln">  2273&nbsp;&nbsp;</span>}
<span id="L2274" class="ln">  2274&nbsp;&nbsp;</span>
<span id="L2275" class="ln">  2275&nbsp;&nbsp;</span>func (i R_MIPS) String() string   { return stringName(uint32(i), rmipsStrings, false) }
<span id="L2276" class="ln">  2276&nbsp;&nbsp;</span>func (i R_MIPS) GoString() string { return stringName(uint32(i), rmipsStrings, true) }
<span id="L2277" class="ln">  2277&nbsp;&nbsp;</span>
<span id="L2278" class="ln">  2278&nbsp;&nbsp;</span><span class="comment">// Relocation types for LoongArch.</span>
<span id="L2279" class="ln">  2279&nbsp;&nbsp;</span>type R_LARCH int
<span id="L2280" class="ln">  2280&nbsp;&nbsp;</span>
<span id="L2281" class="ln">  2281&nbsp;&nbsp;</span>const (
<span id="L2282" class="ln">  2282&nbsp;&nbsp;</span>	R_LARCH_NONE                       R_LARCH = 0
<span id="L2283" class="ln">  2283&nbsp;&nbsp;</span>	R_LARCH_32                         R_LARCH = 1
<span id="L2284" class="ln">  2284&nbsp;&nbsp;</span>	R_LARCH_64                         R_LARCH = 2
<span id="L2285" class="ln">  2285&nbsp;&nbsp;</span>	R_LARCH_RELATIVE                   R_LARCH = 3
<span id="L2286" class="ln">  2286&nbsp;&nbsp;</span>	R_LARCH_COPY                       R_LARCH = 4
<span id="L2287" class="ln">  2287&nbsp;&nbsp;</span>	R_LARCH_JUMP_SLOT                  R_LARCH = 5
<span id="L2288" class="ln">  2288&nbsp;&nbsp;</span>	R_LARCH_TLS_DTPMOD32               R_LARCH = 6
<span id="L2289" class="ln">  2289&nbsp;&nbsp;</span>	R_LARCH_TLS_DTPMOD64               R_LARCH = 7
<span id="L2290" class="ln">  2290&nbsp;&nbsp;</span>	R_LARCH_TLS_DTPREL32               R_LARCH = 8
<span id="L2291" class="ln">  2291&nbsp;&nbsp;</span>	R_LARCH_TLS_DTPREL64               R_LARCH = 9
<span id="L2292" class="ln">  2292&nbsp;&nbsp;</span>	R_LARCH_TLS_TPREL32                R_LARCH = 10
<span id="L2293" class="ln">  2293&nbsp;&nbsp;</span>	R_LARCH_TLS_TPREL64                R_LARCH = 11
<span id="L2294" class="ln">  2294&nbsp;&nbsp;</span>	R_LARCH_IRELATIVE                  R_LARCH = 12
<span id="L2295" class="ln">  2295&nbsp;&nbsp;</span>	R_LARCH_MARK_LA                    R_LARCH = 20
<span id="L2296" class="ln">  2296&nbsp;&nbsp;</span>	R_LARCH_MARK_PCREL                 R_LARCH = 21
<span id="L2297" class="ln">  2297&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_PCREL             R_LARCH = 22
<span id="L2298" class="ln">  2298&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_ABSOLUTE          R_LARCH = 23
<span id="L2299" class="ln">  2299&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_DUP               R_LARCH = 24
<span id="L2300" class="ln">  2300&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_GPREL             R_LARCH = 25
<span id="L2301" class="ln">  2301&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_TLS_TPREL         R_LARCH = 26
<span id="L2302" class="ln">  2302&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_TLS_GOT           R_LARCH = 27
<span id="L2303" class="ln">  2303&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_TLS_GD            R_LARCH = 28
<span id="L2304" class="ln">  2304&nbsp;&nbsp;</span>	R_LARCH_SOP_PUSH_PLT_PCREL         R_LARCH = 29
<span id="L2305" class="ln">  2305&nbsp;&nbsp;</span>	R_LARCH_SOP_ASSERT                 R_LARCH = 30
<span id="L2306" class="ln">  2306&nbsp;&nbsp;</span>	R_LARCH_SOP_NOT                    R_LARCH = 31
<span id="L2307" class="ln">  2307&nbsp;&nbsp;</span>	R_LARCH_SOP_SUB                    R_LARCH = 32
<span id="L2308" class="ln">  2308&nbsp;&nbsp;</span>	R_LARCH_SOP_SL                     R_LARCH = 33
<span id="L2309" class="ln">  2309&nbsp;&nbsp;</span>	R_LARCH_SOP_SR                     R_LARCH = 34
<span id="L2310" class="ln">  2310&nbsp;&nbsp;</span>	R_LARCH_SOP_ADD                    R_LARCH = 35
<span id="L2311" class="ln">  2311&nbsp;&nbsp;</span>	R_LARCH_SOP_AND                    R_LARCH = 36
<span id="L2312" class="ln">  2312&nbsp;&nbsp;</span>	R_LARCH_SOP_IF_ELSE                R_LARCH = 37
<span id="L2313" class="ln">  2313&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_10_5          R_LARCH = 38
<span id="L2314" class="ln">  2314&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_U_10_12         R_LARCH = 39
<span id="L2315" class="ln">  2315&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_10_12         R_LARCH = 40
<span id="L2316" class="ln">  2316&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_10_16         R_LARCH = 41
<span id="L2317" class="ln">  2317&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_10_16_S2      R_LARCH = 42
<span id="L2318" class="ln">  2318&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_5_20          R_LARCH = 43
<span id="L2319" class="ln">  2319&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_0_5_10_16_S2  R_LARCH = 44
<span id="L2320" class="ln">  2320&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_S_0_10_10_16_S2 R_LARCH = 45
<span id="L2321" class="ln">  2321&nbsp;&nbsp;</span>	R_LARCH_SOP_POP_32_U               R_LARCH = 46
<span id="L2322" class="ln">  2322&nbsp;&nbsp;</span>	R_LARCH_ADD8                       R_LARCH = 47
<span id="L2323" class="ln">  2323&nbsp;&nbsp;</span>	R_LARCH_ADD16                      R_LARCH = 48
<span id="L2324" class="ln">  2324&nbsp;&nbsp;</span>	R_LARCH_ADD24                      R_LARCH = 49
<span id="L2325" class="ln">  2325&nbsp;&nbsp;</span>	R_LARCH_ADD32                      R_LARCH = 50
<span id="L2326" class="ln">  2326&nbsp;&nbsp;</span>	R_LARCH_ADD64                      R_LARCH = 51
<span id="L2327" class="ln">  2327&nbsp;&nbsp;</span>	R_LARCH_SUB8                       R_LARCH = 52
<span id="L2328" class="ln">  2328&nbsp;&nbsp;</span>	R_LARCH_SUB16                      R_LARCH = 53
<span id="L2329" class="ln">  2329&nbsp;&nbsp;</span>	R_LARCH_SUB24                      R_LARCH = 54
<span id="L2330" class="ln">  2330&nbsp;&nbsp;</span>	R_LARCH_SUB32                      R_LARCH = 55
<span id="L2331" class="ln">  2331&nbsp;&nbsp;</span>	R_LARCH_SUB64                      R_LARCH = 56
<span id="L2332" class="ln">  2332&nbsp;&nbsp;</span>	R_LARCH_GNU_VTINHERIT              R_LARCH = 57
<span id="L2333" class="ln">  2333&nbsp;&nbsp;</span>	R_LARCH_GNU_VTENTRY                R_LARCH = 58
<span id="L2334" class="ln">  2334&nbsp;&nbsp;</span>	R_LARCH_B16                        R_LARCH = 64
<span id="L2335" class="ln">  2335&nbsp;&nbsp;</span>	R_LARCH_B21                        R_LARCH = 65
<span id="L2336" class="ln">  2336&nbsp;&nbsp;</span>	R_LARCH_B26                        R_LARCH = 66
<span id="L2337" class="ln">  2337&nbsp;&nbsp;</span>	R_LARCH_ABS_HI20                   R_LARCH = 67
<span id="L2338" class="ln">  2338&nbsp;&nbsp;</span>	R_LARCH_ABS_LO12                   R_LARCH = 68
<span id="L2339" class="ln">  2339&nbsp;&nbsp;</span>	R_LARCH_ABS64_LO20                 R_LARCH = 69
<span id="L2340" class="ln">  2340&nbsp;&nbsp;</span>	R_LARCH_ABS64_HI12                 R_LARCH = 70
<span id="L2341" class="ln">  2341&nbsp;&nbsp;</span>	R_LARCH_PCALA_HI20                 R_LARCH = 71
<span id="L2342" class="ln">  2342&nbsp;&nbsp;</span>	R_LARCH_PCALA_LO12                 R_LARCH = 72
<span id="L2343" class="ln">  2343&nbsp;&nbsp;</span>	R_LARCH_PCALA64_LO20               R_LARCH = 73
<span id="L2344" class="ln">  2344&nbsp;&nbsp;</span>	R_LARCH_PCALA64_HI12               R_LARCH = 74
<span id="L2345" class="ln">  2345&nbsp;&nbsp;</span>	R_LARCH_GOT_PC_HI20                R_LARCH = 75
<span id="L2346" class="ln">  2346&nbsp;&nbsp;</span>	R_LARCH_GOT_PC_LO12                R_LARCH = 76
<span id="L2347" class="ln">  2347&nbsp;&nbsp;</span>	R_LARCH_GOT64_PC_LO20              R_LARCH = 77
<span id="L2348" class="ln">  2348&nbsp;&nbsp;</span>	R_LARCH_GOT64_PC_HI12              R_LARCH = 78
<span id="L2349" class="ln">  2349&nbsp;&nbsp;</span>	R_LARCH_GOT_HI20                   R_LARCH = 79
<span id="L2350" class="ln">  2350&nbsp;&nbsp;</span>	R_LARCH_GOT_LO12                   R_LARCH = 80
<span id="L2351" class="ln">  2351&nbsp;&nbsp;</span>	R_LARCH_GOT64_LO20                 R_LARCH = 81
<span id="L2352" class="ln">  2352&nbsp;&nbsp;</span>	R_LARCH_GOT64_HI12                 R_LARCH = 82
<span id="L2353" class="ln">  2353&nbsp;&nbsp;</span>	R_LARCH_TLS_LE_HI20                R_LARCH = 83
<span id="L2354" class="ln">  2354&nbsp;&nbsp;</span>	R_LARCH_TLS_LE_LO12                R_LARCH = 84
<span id="L2355" class="ln">  2355&nbsp;&nbsp;</span>	R_LARCH_TLS_LE64_LO20              R_LARCH = 85
<span id="L2356" class="ln">  2356&nbsp;&nbsp;</span>	R_LARCH_TLS_LE64_HI12              R_LARCH = 86
<span id="L2357" class="ln">  2357&nbsp;&nbsp;</span>	R_LARCH_TLS_IE_PC_HI20             R_LARCH = 87
<span id="L2358" class="ln">  2358&nbsp;&nbsp;</span>	R_LARCH_TLS_IE_PC_LO12             R_LARCH = 88
<span id="L2359" class="ln">  2359&nbsp;&nbsp;</span>	R_LARCH_TLS_IE64_PC_LO20           R_LARCH = 89
<span id="L2360" class="ln">  2360&nbsp;&nbsp;</span>	R_LARCH_TLS_IE64_PC_HI12           R_LARCH = 90
<span id="L2361" class="ln">  2361&nbsp;&nbsp;</span>	R_LARCH_TLS_IE_HI20                R_LARCH = 91
<span id="L2362" class="ln">  2362&nbsp;&nbsp;</span>	R_LARCH_TLS_IE_LO12                R_LARCH = 92
<span id="L2363" class="ln">  2363&nbsp;&nbsp;</span>	R_LARCH_TLS_IE64_LO20              R_LARCH = 93
<span id="L2364" class="ln">  2364&nbsp;&nbsp;</span>	R_LARCH_TLS_IE64_HI12              R_LARCH = 94
<span id="L2365" class="ln">  2365&nbsp;&nbsp;</span>	R_LARCH_TLS_LD_PC_HI20             R_LARCH = 95
<span id="L2366" class="ln">  2366&nbsp;&nbsp;</span>	R_LARCH_TLS_LD_HI20                R_LARCH = 96
<span id="L2367" class="ln">  2367&nbsp;&nbsp;</span>	R_LARCH_TLS_GD_PC_HI20             R_LARCH = 97
<span id="L2368" class="ln">  2368&nbsp;&nbsp;</span>	R_LARCH_TLS_GD_HI20                R_LARCH = 98
<span id="L2369" class="ln">  2369&nbsp;&nbsp;</span>	R_LARCH_32_PCREL                   R_LARCH = 99
<span id="L2370" class="ln">  2370&nbsp;&nbsp;</span>	R_LARCH_RELAX                      R_LARCH = 100
<span id="L2371" class="ln">  2371&nbsp;&nbsp;</span>	R_LARCH_DELETE                     R_LARCH = 101
<span id="L2372" class="ln">  2372&nbsp;&nbsp;</span>	R_LARCH_ALIGN                      R_LARCH = 102
<span id="L2373" class="ln">  2373&nbsp;&nbsp;</span>	R_LARCH_PCREL20_S2                 R_LARCH = 103
<span id="L2374" class="ln">  2374&nbsp;&nbsp;</span>	R_LARCH_CFA                        R_LARCH = 104
<span id="L2375" class="ln">  2375&nbsp;&nbsp;</span>	R_LARCH_ADD6                       R_LARCH = 105
<span id="L2376" class="ln">  2376&nbsp;&nbsp;</span>	R_LARCH_SUB6                       R_LARCH = 106
<span id="L2377" class="ln">  2377&nbsp;&nbsp;</span>	R_LARCH_ADD_ULEB128                R_LARCH = 107
<span id="L2378" class="ln">  2378&nbsp;&nbsp;</span>	R_LARCH_SUB_ULEB128                R_LARCH = 108
<span id="L2379" class="ln">  2379&nbsp;&nbsp;</span>	R_LARCH_64_PCREL                   R_LARCH = 109
<span id="L2380" class="ln">  2380&nbsp;&nbsp;</span>)
<span id="L2381" class="ln">  2381&nbsp;&nbsp;</span>
<span id="L2382" class="ln">  2382&nbsp;&nbsp;</span>var rlarchStrings = []intName{
<span id="L2383" class="ln">  2383&nbsp;&nbsp;</span>	{0, &#34;R_LARCH_NONE&#34;},
<span id="L2384" class="ln">  2384&nbsp;&nbsp;</span>	{1, &#34;R_LARCH_32&#34;},
<span id="L2385" class="ln">  2385&nbsp;&nbsp;</span>	{2, &#34;R_LARCH_64&#34;},
<span id="L2386" class="ln">  2386&nbsp;&nbsp;</span>	{3, &#34;R_LARCH_RELATIVE&#34;},
<span id="L2387" class="ln">  2387&nbsp;&nbsp;</span>	{4, &#34;R_LARCH_COPY&#34;},
<span id="L2388" class="ln">  2388&nbsp;&nbsp;</span>	{5, &#34;R_LARCH_JUMP_SLOT&#34;},
<span id="L2389" class="ln">  2389&nbsp;&nbsp;</span>	{6, &#34;R_LARCH_TLS_DTPMOD32&#34;},
<span id="L2390" class="ln">  2390&nbsp;&nbsp;</span>	{7, &#34;R_LARCH_TLS_DTPMOD64&#34;},
<span id="L2391" class="ln">  2391&nbsp;&nbsp;</span>	{8, &#34;R_LARCH_TLS_DTPREL32&#34;},
<span id="L2392" class="ln">  2392&nbsp;&nbsp;</span>	{9, &#34;R_LARCH_TLS_DTPREL64&#34;},
<span id="L2393" class="ln">  2393&nbsp;&nbsp;</span>	{10, &#34;R_LARCH_TLS_TPREL32&#34;},
<span id="L2394" class="ln">  2394&nbsp;&nbsp;</span>	{11, &#34;R_LARCH_TLS_TPREL64&#34;},
<span id="L2395" class="ln">  2395&nbsp;&nbsp;</span>	{12, &#34;R_LARCH_IRELATIVE&#34;},
<span id="L2396" class="ln">  2396&nbsp;&nbsp;</span>	{20, &#34;R_LARCH_MARK_LA&#34;},
<span id="L2397" class="ln">  2397&nbsp;&nbsp;</span>	{21, &#34;R_LARCH_MARK_PCREL&#34;},
<span id="L2398" class="ln">  2398&nbsp;&nbsp;</span>	{22, &#34;R_LARCH_SOP_PUSH_PCREL&#34;},
<span id="L2399" class="ln">  2399&nbsp;&nbsp;</span>	{23, &#34;R_LARCH_SOP_PUSH_ABSOLUTE&#34;},
<span id="L2400" class="ln">  2400&nbsp;&nbsp;</span>	{24, &#34;R_LARCH_SOP_PUSH_DUP&#34;},
<span id="L2401" class="ln">  2401&nbsp;&nbsp;</span>	{25, &#34;R_LARCH_SOP_PUSH_GPREL&#34;},
<span id="L2402" class="ln">  2402&nbsp;&nbsp;</span>	{26, &#34;R_LARCH_SOP_PUSH_TLS_TPREL&#34;},
<span id="L2403" class="ln">  2403&nbsp;&nbsp;</span>	{27, &#34;R_LARCH_SOP_PUSH_TLS_GOT&#34;},
<span id="L2404" class="ln">  2404&nbsp;&nbsp;</span>	{28, &#34;R_LARCH_SOP_PUSH_TLS_GD&#34;},
<span id="L2405" class="ln">  2405&nbsp;&nbsp;</span>	{29, &#34;R_LARCH_SOP_PUSH_PLT_PCREL&#34;},
<span id="L2406" class="ln">  2406&nbsp;&nbsp;</span>	{30, &#34;R_LARCH_SOP_ASSERT&#34;},
<span id="L2407" class="ln">  2407&nbsp;&nbsp;</span>	{31, &#34;R_LARCH_SOP_NOT&#34;},
<span id="L2408" class="ln">  2408&nbsp;&nbsp;</span>	{32, &#34;R_LARCH_SOP_SUB&#34;},
<span id="L2409" class="ln">  2409&nbsp;&nbsp;</span>	{33, &#34;R_LARCH_SOP_SL&#34;},
<span id="L2410" class="ln">  2410&nbsp;&nbsp;</span>	{34, &#34;R_LARCH_SOP_SR&#34;},
<span id="L2411" class="ln">  2411&nbsp;&nbsp;</span>	{35, &#34;R_LARCH_SOP_ADD&#34;},
<span id="L2412" class="ln">  2412&nbsp;&nbsp;</span>	{36, &#34;R_LARCH_SOP_AND&#34;},
<span id="L2413" class="ln">  2413&nbsp;&nbsp;</span>	{37, &#34;R_LARCH_SOP_IF_ELSE&#34;},
<span id="L2414" class="ln">  2414&nbsp;&nbsp;</span>	{38, &#34;R_LARCH_SOP_POP_32_S_10_5&#34;},
<span id="L2415" class="ln">  2415&nbsp;&nbsp;</span>	{39, &#34;R_LARCH_SOP_POP_32_U_10_12&#34;},
<span id="L2416" class="ln">  2416&nbsp;&nbsp;</span>	{40, &#34;R_LARCH_SOP_POP_32_S_10_12&#34;},
<span id="L2417" class="ln">  2417&nbsp;&nbsp;</span>	{41, &#34;R_LARCH_SOP_POP_32_S_10_16&#34;},
<span id="L2418" class="ln">  2418&nbsp;&nbsp;</span>	{42, &#34;R_LARCH_SOP_POP_32_S_10_16_S2&#34;},
<span id="L2419" class="ln">  2419&nbsp;&nbsp;</span>	{43, &#34;R_LARCH_SOP_POP_32_S_5_20&#34;},
<span id="L2420" class="ln">  2420&nbsp;&nbsp;</span>	{44, &#34;R_LARCH_SOP_POP_32_S_0_5_10_16_S2&#34;},
<span id="L2421" class="ln">  2421&nbsp;&nbsp;</span>	{45, &#34;R_LARCH_SOP_POP_32_S_0_10_10_16_S2&#34;},
<span id="L2422" class="ln">  2422&nbsp;&nbsp;</span>	{46, &#34;R_LARCH_SOP_POP_32_U&#34;},
<span id="L2423" class="ln">  2423&nbsp;&nbsp;</span>	{47, &#34;R_LARCH_ADD8&#34;},
<span id="L2424" class="ln">  2424&nbsp;&nbsp;</span>	{48, &#34;R_LARCH_ADD16&#34;},
<span id="L2425" class="ln">  2425&nbsp;&nbsp;</span>	{49, &#34;R_LARCH_ADD24&#34;},
<span id="L2426" class="ln">  2426&nbsp;&nbsp;</span>	{50, &#34;R_LARCH_ADD32&#34;},
<span id="L2427" class="ln">  2427&nbsp;&nbsp;</span>	{51, &#34;R_LARCH_ADD64&#34;},
<span id="L2428" class="ln">  2428&nbsp;&nbsp;</span>	{52, &#34;R_LARCH_SUB8&#34;},
<span id="L2429" class="ln">  2429&nbsp;&nbsp;</span>	{53, &#34;R_LARCH_SUB16&#34;},
<span id="L2430" class="ln">  2430&nbsp;&nbsp;</span>	{54, &#34;R_LARCH_SUB24&#34;},
<span id="L2431" class="ln">  2431&nbsp;&nbsp;</span>	{55, &#34;R_LARCH_SUB32&#34;},
<span id="L2432" class="ln">  2432&nbsp;&nbsp;</span>	{56, &#34;R_LARCH_SUB64&#34;},
<span id="L2433" class="ln">  2433&nbsp;&nbsp;</span>	{57, &#34;R_LARCH_GNU_VTINHERIT&#34;},
<span id="L2434" class="ln">  2434&nbsp;&nbsp;</span>	{58, &#34;R_LARCH_GNU_VTENTRY&#34;},
<span id="L2435" class="ln">  2435&nbsp;&nbsp;</span>	{64, &#34;R_LARCH_B16&#34;},
<span id="L2436" class="ln">  2436&nbsp;&nbsp;</span>	{65, &#34;R_LARCH_B21&#34;},
<span id="L2437" class="ln">  2437&nbsp;&nbsp;</span>	{66, &#34;R_LARCH_B26&#34;},
<span id="L2438" class="ln">  2438&nbsp;&nbsp;</span>	{67, &#34;R_LARCH_ABS_HI20&#34;},
<span id="L2439" class="ln">  2439&nbsp;&nbsp;</span>	{68, &#34;R_LARCH_ABS_LO12&#34;},
<span id="L2440" class="ln">  2440&nbsp;&nbsp;</span>	{69, &#34;R_LARCH_ABS64_LO20&#34;},
<span id="L2441" class="ln">  2441&nbsp;&nbsp;</span>	{70, &#34;R_LARCH_ABS64_HI12&#34;},
<span id="L2442" class="ln">  2442&nbsp;&nbsp;</span>	{71, &#34;R_LARCH_PCALA_HI20&#34;},
<span id="L2443" class="ln">  2443&nbsp;&nbsp;</span>	{72, &#34;R_LARCH_PCALA_LO12&#34;},
<span id="L2444" class="ln">  2444&nbsp;&nbsp;</span>	{73, &#34;R_LARCH_PCALA64_LO20&#34;},
<span id="L2445" class="ln">  2445&nbsp;&nbsp;</span>	{74, &#34;R_LARCH_PCALA64_HI12&#34;},
<span id="L2446" class="ln">  2446&nbsp;&nbsp;</span>	{75, &#34;R_LARCH_GOT_PC_HI20&#34;},
<span id="L2447" class="ln">  2447&nbsp;&nbsp;</span>	{76, &#34;R_LARCH_GOT_PC_LO12&#34;},
<span id="L2448" class="ln">  2448&nbsp;&nbsp;</span>	{77, &#34;R_LARCH_GOT64_PC_LO20&#34;},
<span id="L2449" class="ln">  2449&nbsp;&nbsp;</span>	{78, &#34;R_LARCH_GOT64_PC_HI12&#34;},
<span id="L2450" class="ln">  2450&nbsp;&nbsp;</span>	{79, &#34;R_LARCH_GOT_HI20&#34;},
<span id="L2451" class="ln">  2451&nbsp;&nbsp;</span>	{80, &#34;R_LARCH_GOT_LO12&#34;},
<span id="L2452" class="ln">  2452&nbsp;&nbsp;</span>	{81, &#34;R_LARCH_GOT64_LO20&#34;},
<span id="L2453" class="ln">  2453&nbsp;&nbsp;</span>	{82, &#34;R_LARCH_GOT64_HI12&#34;},
<span id="L2454" class="ln">  2454&nbsp;&nbsp;</span>	{83, &#34;R_LARCH_TLS_LE_HI20&#34;},
<span id="L2455" class="ln">  2455&nbsp;&nbsp;</span>	{84, &#34;R_LARCH_TLS_LE_LO12&#34;},
<span id="L2456" class="ln">  2456&nbsp;&nbsp;</span>	{85, &#34;R_LARCH_TLS_LE64_LO20&#34;},
<span id="L2457" class="ln">  2457&nbsp;&nbsp;</span>	{86, &#34;R_LARCH_TLS_LE64_HI12&#34;},
<span id="L2458" class="ln">  2458&nbsp;&nbsp;</span>	{87, &#34;R_LARCH_TLS_IE_PC_HI20&#34;},
<span id="L2459" class="ln">  2459&nbsp;&nbsp;</span>	{88, &#34;R_LARCH_TLS_IE_PC_LO12&#34;},
<span id="L2460" class="ln">  2460&nbsp;&nbsp;</span>	{89, &#34;R_LARCH_TLS_IE64_PC_LO20&#34;},
<span id="L2461" class="ln">  2461&nbsp;&nbsp;</span>	{90, &#34;R_LARCH_TLS_IE64_PC_HI12&#34;},
<span id="L2462" class="ln">  2462&nbsp;&nbsp;</span>	{91, &#34;R_LARCH_TLS_IE_HI20&#34;},
<span id="L2463" class="ln">  2463&nbsp;&nbsp;</span>	{92, &#34;R_LARCH_TLS_IE_LO12&#34;},
<span id="L2464" class="ln">  2464&nbsp;&nbsp;</span>	{93, &#34;R_LARCH_TLS_IE64_LO20&#34;},
<span id="L2465" class="ln">  2465&nbsp;&nbsp;</span>	{94, &#34;R_LARCH_TLS_IE64_HI12&#34;},
<span id="L2466" class="ln">  2466&nbsp;&nbsp;</span>	{95, &#34;R_LARCH_TLS_LD_PC_HI20&#34;},
<span id="L2467" class="ln">  2467&nbsp;&nbsp;</span>	{96, &#34;R_LARCH_TLS_LD_HI20&#34;},
<span id="L2468" class="ln">  2468&nbsp;&nbsp;</span>	{97, &#34;R_LARCH_TLS_GD_PC_HI20&#34;},
<span id="L2469" class="ln">  2469&nbsp;&nbsp;</span>	{98, &#34;R_LARCH_TLS_GD_HI20&#34;},
<span id="L2470" class="ln">  2470&nbsp;&nbsp;</span>	{99, &#34;R_LARCH_32_PCREL&#34;},
<span id="L2471" class="ln">  2471&nbsp;&nbsp;</span>	{100, &#34;R_LARCH_RELAX&#34;},
<span id="L2472" class="ln">  2472&nbsp;&nbsp;</span>	{101, &#34;R_LARCH_DELETE&#34;},
<span id="L2473" class="ln">  2473&nbsp;&nbsp;</span>	{102, &#34;R_LARCH_ALIGN&#34;},
<span id="L2474" class="ln">  2474&nbsp;&nbsp;</span>	{103, &#34;R_LARCH_PCREL20_S2&#34;},
<span id="L2475" class="ln">  2475&nbsp;&nbsp;</span>	{104, &#34;R_LARCH_CFA&#34;},
<span id="L2476" class="ln">  2476&nbsp;&nbsp;</span>	{105, &#34;R_LARCH_ADD6&#34;},
<span id="L2477" class="ln">  2477&nbsp;&nbsp;</span>	{106, &#34;R_LARCH_SUB6&#34;},
<span id="L2478" class="ln">  2478&nbsp;&nbsp;</span>	{107, &#34;R_LARCH_ADD_ULEB128&#34;},
<span id="L2479" class="ln">  2479&nbsp;&nbsp;</span>	{108, &#34;R_LARCH_SUB_ULEB128&#34;},
<span id="L2480" class="ln">  2480&nbsp;&nbsp;</span>	{109, &#34;R_LARCH_64_PCREL&#34;},
<span id="L2481" class="ln">  2481&nbsp;&nbsp;</span>}
<span id="L2482" class="ln">  2482&nbsp;&nbsp;</span>
<span id="L2483" class="ln">  2483&nbsp;&nbsp;</span>func (i R_LARCH) String() string   { return stringName(uint32(i), rlarchStrings, false) }
<span id="L2484" class="ln">  2484&nbsp;&nbsp;</span>func (i R_LARCH) GoString() string { return stringName(uint32(i), rlarchStrings, true) }
<span id="L2485" class="ln">  2485&nbsp;&nbsp;</span>
<span id="L2486" class="ln">  2486&nbsp;&nbsp;</span><span class="comment">// Relocation types for PowerPC.</span>
<span id="L2487" class="ln">  2487&nbsp;&nbsp;</span><span class="comment">//</span>
<span id="L2488" class="ln">  2488&nbsp;&nbsp;</span><span class="comment">// Values that are shared by both R_PPC and R_PPC64 are prefixed with</span>
<span id="L2489" class="ln">  2489&nbsp;&nbsp;</span><span class="comment">// R_POWERPC_ in the ELF standard. For the R_PPC type, the relevant</span>
<span id="L2490" class="ln">  2490&nbsp;&nbsp;</span><span class="comment">// shared relocations have been renamed with the prefix R_PPC_.</span>
<span id="L2491" class="ln">  2491&nbsp;&nbsp;</span><span class="comment">// The original name follows the value in a comment.</span>
<span id="L2492" class="ln">  2492&nbsp;&nbsp;</span>type R_PPC int
<span id="L2493" class="ln">  2493&nbsp;&nbsp;</span>
<span id="L2494" class="ln">  2494&nbsp;&nbsp;</span>const (
<span id="L2495" class="ln">  2495&nbsp;&nbsp;</span>	R_PPC_NONE            R_PPC = 0  <span class="comment">// R_POWERPC_NONE</span>
<span id="L2496" class="ln">  2496&nbsp;&nbsp;</span>	R_PPC_ADDR32          R_PPC = 1  <span class="comment">// R_POWERPC_ADDR32</span>
<span id="L2497" class="ln">  2497&nbsp;&nbsp;</span>	R_PPC_ADDR24          R_PPC = 2  <span class="comment">// R_POWERPC_ADDR24</span>
<span id="L2498" class="ln">  2498&nbsp;&nbsp;</span>	R_PPC_ADDR16          R_PPC = 3  <span class="comment">// R_POWERPC_ADDR16</span>
<span id="L2499" class="ln">  2499&nbsp;&nbsp;</span>	R_PPC_ADDR16_LO       R_PPC = 4  <span class="comment">// R_POWERPC_ADDR16_LO</span>
<span id="L2500" class="ln">  2500&nbsp;&nbsp;</span>	R_PPC_ADDR16_HI       R_PPC = 5  <span class="comment">// R_POWERPC_ADDR16_HI</span>
<span id="L2501" class="ln">  2501&nbsp;&nbsp;</span>	R_PPC_ADDR16_HA       R_PPC = 6  <span class="comment">// R_POWERPC_ADDR16_HA</span>
<span id="L2502" class="ln">  2502&nbsp;&nbsp;</span>	R_PPC_ADDR14          R_PPC = 7  <span class="comment">// R_POWERPC_ADDR14</span>
<span id="L2503" class="ln">  2503&nbsp;&nbsp;</span>	R_PPC_ADDR14_BRTAKEN  R_PPC = 8  <span class="comment">// R_POWERPC_ADDR14_BRTAKEN</span>
<span id="L2504" class="ln">  2504&nbsp;&nbsp;</span>	R_PPC_ADDR14_BRNTAKEN R_PPC = 9  <span class="comment">// R_POWERPC_ADDR14_BRNTAKEN</span>
<span id="L2505" class="ln">  2505&nbsp;&nbsp;</span>	R_PPC_REL24           R_PPC = 10 <span class="comment">// R_POWERPC_REL24</span>
<span id="L2506" class="ln">  2506&nbsp;&nbsp;</span>	R_PPC_REL14           R_PPC = 11 <span class="comment">// R_POWERPC_REL14</span>
<span id="L2507" class="ln">  2507&nbsp;&nbsp;</span>	R_PPC_REL14_BRTAKEN   R_PPC = 12 <span class="comment">// R_POWERPC_REL14_BRTAKEN</span>
<span id="L2508" class="ln">  2508&nbsp;&nbsp;</span>	R_PPC_REL14_BRNTAKEN  R_PPC = 13 <span class="comment">// R_POWERPC_REL14_BRNTAKEN</span>
<span id="L2509" class="ln">  2509&nbsp;&nbsp;</span>	R_PPC_GOT16           R_PPC = 14 <span class="comment">// R_POWERPC_GOT16</span>
<span id="L2510" class="ln">  2510&nbsp;&nbsp;</span>	R_PPC_GOT16_LO        R_PPC = 15 <span class="comment">// R_POWERPC_GOT16_LO</span>
<span id="L2511" class="ln">  2511&nbsp;&nbsp;</span>	R_PPC_GOT16_HI        R_PPC = 16 <span class="comment">// R_POWERPC_GOT16_HI</span>
<span id="L2512" class="ln">  2512&nbsp;&nbsp;</span>	R_PPC_GOT16_HA        R_PPC = 17 <span class="comment">// R_POWERPC_GOT16_HA</span>
<span id="L2513" class="ln">  2513&nbsp;&nbsp;</span>	R_PPC_PLTREL24        R_PPC = 18
<span id="L2514" class="ln">  2514&nbsp;&nbsp;</span>	R_PPC_COPY            R_PPC = 19 <span class="comment">// R_POWERPC_COPY</span>
<span id="L2515" class="ln">  2515&nbsp;&nbsp;</span>	R_PPC_GLOB_DAT        R_PPC = 20 <span class="comment">// R_POWERPC_GLOB_DAT</span>
<span id="L2516" class="ln">  2516&nbsp;&nbsp;</span>	R_PPC_JMP_SLOT        R_PPC = 21 <span class="comment">// R_POWERPC_JMP_SLOT</span>
<span id="L2517" class="ln">  2517&nbsp;&nbsp;</span>	R_PPC_RELATIVE        R_PPC = 22 <span class="comment">// R_POWERPC_RELATIVE</span>
<span id="L2518" class="ln">  2518&nbsp;&nbsp;</span>	R_PPC_LOCAL24PC       R_PPC = 23
<span id="L2519" class="ln">  2519&nbsp;&nbsp;</span>	R_PPC_UADDR32         R_PPC = 24 <span class="comment">// R_POWERPC_UADDR32</span>
<span id="L2520" class="ln">  2520&nbsp;&nbsp;</span>	R_PPC_UADDR16         R_PPC = 25 <span class="comment">// R_POWERPC_UADDR16</span>
<span id="L2521" class="ln">  2521&nbsp;&nbsp;</span>	R_PPC_REL32           R_PPC = 26 <span class="comment">// R_POWERPC_REL32</span>
<span id="L2522" class="ln">  2522&nbsp;&nbsp;</span>	R_PPC_PLT32           R_PPC = 27 <span class="comment">// R_POWERPC_PLT32</span>
<span id="L2523" class="ln">  2523&nbsp;&nbsp;</span>	R_PPC_PLTREL32        R_PPC = 28 <span class="comment">// R_POWERPC_PLTREL32</span>
<span id="L2524" class="ln">  2524&nbsp;&nbsp;</span>	R_PPC_PLT16_LO        R_PPC = 29 <span class="comment">// R_POWERPC_PLT16_LO</span>
<span id="L2525" class="ln">  2525&nbsp;&nbsp;</span>	R_PPC_PLT16_HI        R_PPC = 30 <span class="comment">// R_POWERPC_PLT16_HI</span>
<span id="L2526" class="ln">  2526&nbsp;&nbsp;</span>	R_PPC_PLT16_HA        R_PPC = 31 <span class="comment">// R_POWERPC_PLT16_HA</span>
<span id="L2527" class="ln">  2527&nbsp;&nbsp;</span>	R_PPC_SDAREL16        R_PPC = 32
<span id="L2528" class="ln">  2528&nbsp;&nbsp;</span>	R_PPC_SECTOFF         R_PPC = 33 <span class="comment">// R_POWERPC_SECTOFF</span>
<span id="L2529" class="ln">  2529&nbsp;&nbsp;</span>	R_PPC_SECTOFF_LO      R_PPC = 34 <span class="comment">// R_POWERPC_SECTOFF_LO</span>
<span id="L2530" class="ln">  2530&nbsp;&nbsp;</span>	R_PPC_SECTOFF_HI      R_PPC = 35 <span class="comment">// R_POWERPC_SECTOFF_HI</span>
<span id="L2531" class="ln">  2531&nbsp;&nbsp;</span>	R_PPC_SECTOFF_HA      R_PPC = 36 <span class="comment">// R_POWERPC_SECTOFF_HA</span>
<span id="L2532" class="ln">  2532&nbsp;&nbsp;</span>	R_PPC_TLS             R_PPC = 67 <span class="comment">// R_POWERPC_TLS</span>
<span id="L2533" class="ln">  2533&nbsp;&nbsp;</span>	R_PPC_DTPMOD32        R_PPC = 68 <span class="comment">// R_POWERPC_DTPMOD32</span>
<span id="L2534" class="ln">  2534&nbsp;&nbsp;</span>	R_PPC_TPREL16         R_PPC = 69 <span class="comment">// R_POWERPC_TPREL16</span>
<span id="L2535" class="ln">  2535&nbsp;&nbsp;</span>	R_PPC_TPREL16_LO      R_PPC = 70 <span class="comment">// R_POWERPC_TPREL16_LO</span>
<span id="L2536" class="ln">  2536&nbsp;&nbsp;</span>	R_PPC_TPREL16_HI      R_PPC = 71 <span class="comment">// R_POWERPC_TPREL16_HI</span>
<span id="L2537" class="ln">  2537&nbsp;&nbsp;</span>	R_PPC_TPREL16_HA      R_PPC = 72 <span class="comment">// R_POWERPC_TPREL16_HA</span>
<span id="L2538" class="ln">  2538&nbsp;&nbsp;</span>	R_PPC_TPREL32         R_PPC = 73 <span class="comment">// R_POWERPC_TPREL32</span>
<span id="L2539" class="ln">  2539&nbsp;&nbsp;</span>	R_PPC_DTPREL16        R_PPC = 74 <span class="comment">// R_POWERPC_DTPREL16</span>
<span id="L2540" class="ln">  2540&nbsp;&nbsp;</span>	R_PPC_DTPREL16_LO     R_PPC = 75 <span class="comment">// R_POWERPC_DTPREL16_LO</span>
<span id="L2541" class="ln">  2541&nbsp;&nbsp;</span>	R_PPC_DTPREL16_HI     R_PPC = 76 <span class="comment">// R_POWERPC_DTPREL16_HI</span>
<span id="L2542" class="ln">  2542&nbsp;&nbsp;</span>	R_PPC_DTPREL16_HA     R_PPC = 77 <span class="comment">// R_POWERPC_DTPREL16_HA</span>
<span id="L2543" class="ln">  2543&nbsp;&nbsp;</span>	R_PPC_DTPREL32        R_PPC = 78 <span class="comment">// R_POWERPC_DTPREL32</span>
<span id="L2544" class="ln">  2544&nbsp;&nbsp;</span>	R_PPC_GOT_TLSGD16     R_PPC = 79 <span class="comment">// R_POWERPC_GOT_TLSGD16</span>
<span id="L2545" class="ln">  2545&nbsp;&nbsp;</span>	R_PPC_GOT_TLSGD16_LO  R_PPC = 80 <span class="comment">// R_POWERPC_GOT_TLSGD16_LO</span>
<span id="L2546" class="ln">  2546&nbsp;&nbsp;</span>	R_PPC_GOT_TLSGD16_HI  R_PPC = 81 <span class="comment">// R_POWERPC_GOT_TLSGD16_HI</span>
<span id="L2547" class="ln">  2547&nbsp;&nbsp;</span>	R_PPC_GOT_TLSGD16_HA  R_PPC = 82 <span class="comment">// R_POWERPC_GOT_TLSGD16_HA</span>
<span id="L2548" class="ln">  2548&nbsp;&nbsp;</span>	R_PPC_GOT_TLSLD16     R_PPC = 83 <span class="comment">// R_POWERPC_GOT_TLSLD16</span>
<span id="L2549" class="ln">  2549&nbsp;&nbsp;</span>	R_PPC_GOT_TLSLD16_LO  R_PPC = 84 <span class="comment">// R_POWERPC_GOT_TLSLD16_LO</span>
<span id="L2550" class="ln">  2550&nbsp;&nbsp;</span>	R_PPC_GOT_TLSLD16_HI  R_PPC = 85 <span class="comment">// R_POWERPC_GOT_TLSLD16_HI</span>
<span id="L2551" class="ln">  2551&nbsp;&nbsp;</span>	R_PPC_GOT_TLSLD16_HA  R_PPC = 86 <span class="comment">// R_POWERPC_GOT_TLSLD16_HA</span>
<span id="L2552" class="ln">  2552&nbsp;&nbsp;</span>	R_PPC_GOT_TPREL16     R_PPC = 87 <span class="comment">// R_POWERPC_GOT_TPREL16</span>
<span id="L2553" class="ln">  2553&nbsp;&nbsp;</span>	R_PPC_GOT_TPREL16_LO  R_PPC = 88 <span class="comment">// R_POWERPC_GOT_TPREL16_LO</span>
<span id="L2554" class="ln">  2554&nbsp;&nbsp;</span>	R_PPC_GOT_TPREL16_HI  R_PPC = 89 <span class="comment">// R_POWERPC_GOT_TPREL16_HI</span>
<span id="L2555" class="ln">  2555&nbsp;&nbsp;</span>	R_PPC_GOT_TPREL16_HA  R_PPC = 90 <span class="comment">// R_POWERPC_GOT_TPREL16_HA</span>
<span id="L2556" class="ln">  2556&nbsp;&nbsp;</span>	R_PPC_EMB_NADDR32     R_PPC = 101
<span id="L2557" class="ln">  2557&nbsp;&nbsp;</span>	R_PPC_EMB_NADDR16     R_PPC = 102
<span id="L2558" class="ln">  2558&nbsp;&nbsp;</span>	R_PPC_EMB_NADDR16_LO  R_PPC = 103
<span id="L2559" class="ln">  2559&nbsp;&nbsp;</span>	R_PPC_EMB_NADDR16_HI  R_PPC = 104
<span id="L2560" class="ln">  2560&nbsp;&nbsp;</span>	R_PPC_EMB_NADDR16_HA  R_PPC = 105
<span id="L2561" class="ln">  2561&nbsp;&nbsp;</span>	R_PPC_EMB_SDAI16      R_PPC = 106
<span id="L2562" class="ln">  2562&nbsp;&nbsp;</span>	R_PPC_EMB_SDA2I16     R_PPC = 107
<span id="L2563" class="ln">  2563&nbsp;&nbsp;</span>	R_PPC_EMB_SDA2REL     R_PPC = 108
<span id="L2564" class="ln">  2564&nbsp;&nbsp;</span>	R_PPC_EMB_SDA21       R_PPC = 109
<span id="L2565" class="ln">  2565&nbsp;&nbsp;</span>	R_PPC_EMB_MRKREF      R_PPC = 110
<span id="L2566" class="ln">  2566&nbsp;&nbsp;</span>	R_PPC_EMB_RELSEC16    R_PPC = 111
<span id="L2567" class="ln">  2567&nbsp;&nbsp;</span>	R_PPC_EMB_RELST_LO    R_PPC = 112
<span id="L2568" class="ln">  2568&nbsp;&nbsp;</span>	R_PPC_EMB_RELST_HI    R_PPC = 113
<span id="L2569" class="ln">  2569&nbsp;&nbsp;</span>	R_PPC_EMB_RELST_HA    R_PPC = 114
<span id="L2570" class="ln">  2570&nbsp;&nbsp;</span>	R_PPC_EMB_BIT_FLD     R_PPC = 115
<span id="L2571" class="ln">  2571&nbsp;&nbsp;</span>	R_PPC_EMB_RELSDA      R_PPC = 116
<span id="L2572" class="ln">  2572&nbsp;&nbsp;</span>)
<span id="L2573" class="ln">  2573&nbsp;&nbsp;</span>
<span id="L2574" class="ln">  2574&nbsp;&nbsp;</span>var rppcStrings = []intName{
<span id="L2575" class="ln">  2575&nbsp;&nbsp;</span>	{0, &#34;R_PPC_NONE&#34;},
<span id="L2576" class="ln">  2576&nbsp;&nbsp;</span>	{1, &#34;R_PPC_ADDR32&#34;},
<span id="L2577" class="ln">  2577&nbsp;&nbsp;</span>	{2, &#34;R_PPC_ADDR24&#34;},
<span id="L2578" class="ln">  2578&nbsp;&nbsp;</span>	{3, &#34;R_PPC_ADDR16&#34;},
<span id="L2579" class="ln">  2579&nbsp;&nbsp;</span>	{4, &#34;R_PPC_ADDR16_LO&#34;},
<span id="L2580" class="ln">  2580&nbsp;&nbsp;</span>	{5, &#34;R_PPC_ADDR16_HI&#34;},
<span id="L2581" class="ln">  2581&nbsp;&nbsp;</span>	{6, &#34;R_PPC_ADDR16_HA&#34;},
<span id="L2582" class="ln">  2582&nbsp;&nbsp;</span>	{7, &#34;R_PPC_ADDR14&#34;},
<span id="L2583" class="ln">  2583&nbsp;&nbsp;</span>	{8, &#34;R_PPC_ADDR14_BRTAKEN&#34;},
<span id="L2584" class="ln">  2584&nbsp;&nbsp;</span>	{9, &#34;R_PPC_ADDR14_BRNTAKEN&#34;},
<span id="L2585" class="ln">  2585&nbsp;&nbsp;</span>	{10, &#34;R_PPC_REL24&#34;},
<span id="L2586" class="ln">  2586&nbsp;&nbsp;</span>	{11, &#34;R_PPC_REL14&#34;},
<span id="L2587" class="ln">  2587&nbsp;&nbsp;</span>	{12, &#34;R_PPC_REL14_BRTAKEN&#34;},
<span id="L2588" class="ln">  2588&nbsp;&nbsp;</span>	{13, &#34;R_PPC_REL14_BRNTAKEN&#34;},
<span id="L2589" class="ln">  2589&nbsp;&nbsp;</span>	{14, &#34;R_PPC_GOT16&#34;},
<span id="L2590" class="ln">  2590&nbsp;&nbsp;</span>	{15, &#34;R_PPC_GOT16_LO&#34;},
<span id="L2591" class="ln">  2591&nbsp;&nbsp;</span>	{16, &#34;R_PPC_GOT16_HI&#34;},
<span id="L2592" class="ln">  2592&nbsp;&nbsp;</span>	{17, &#34;R_PPC_GOT16_HA&#34;},
<span id="L2593" class="ln">  2593&nbsp;&nbsp;</span>	{18, &#34;R_PPC_PLTREL24&#34;},
<span id="L2594" class="ln">  2594&nbsp;&nbsp;</span>	{19, &#34;R_PPC_COPY&#34;},
<span id="L2595" class="ln">  2595&nbsp;&nbsp;</span>	{20, &#34;R_PPC_GLOB_DAT&#34;},
<span id="L2596" class="ln">  2596&nbsp;&nbsp;</span>	{21, &#34;R_PPC_JMP_SLOT&#34;},
<span id="L2597" class="ln">  2597&nbsp;&nbsp;</span>	{22, &#34;R_PPC_RELATIVE&#34;},
<span id="L2598" class="ln">  2598&nbsp;&nbsp;</span>	{23, &#34;R_PPC_LOCAL24PC&#34;},
<span id="L2599" class="ln">  2599&nbsp;&nbsp;</span>	{24, &#34;R_PPC_UADDR32&#34;},
<span id="L2600" class="ln">  2600&nbsp;&nbsp;</span>	{25, &#34;R_PPC_UADDR16&#34;},
<span id="L2601" class="ln">  2601&nbsp;&nbsp;</span>	{26, &#34;R_PPC_REL32&#34;},
<span id="L2602" class="ln">  2602&nbsp;&nbsp;</span>	{27, &#34;R_PPC_PLT32&#34;},
<span id="L2603" class="ln">  2603&nbsp;&nbsp;</span>	{28, &#34;R_PPC_PLTREL32&#34;},
<span id="L2604" class="ln">  2604&nbsp;&nbsp;</span>	{29, &#34;R_PPC_PLT16_LO&#34;},
<span id="L2605" class="ln">  2605&nbsp;&nbsp;</span>	{30, &#34;R_PPC_PLT16_HI&#34;},
<span id="L2606" class="ln">  2606&nbsp;&nbsp;</span>	{31, &#34;R_PPC_PLT16_HA&#34;},
<span id="L2607" class="ln">  2607&nbsp;&nbsp;</span>	{32, &#34;R_PPC_SDAREL16&#34;},
<span id="L2608" class="ln">  2608&nbsp;&nbsp;</span>	{33, &#34;R_PPC_SECTOFF&#34;},
<span id="L2609" class="ln">  2609&nbsp;&nbsp;</span>	{34, &#34;R_PPC_SECTOFF_LO&#34;},
<span id="L2610" class="ln">  2610&nbsp;&nbsp;</span>	{35, &#34;R_PPC_SECTOFF_HI&#34;},
<span id="L2611" class="ln">  2611&nbsp;&nbsp;</span>	{36, &#34;R_PPC_SECTOFF_HA&#34;},
<span id="L2612" class="ln">  2612&nbsp;&nbsp;</span>	{67, &#34;R_PPC_TLS&#34;},
<span id="L2613" class="ln">  2613&nbsp;&nbsp;</span>	{68, &#34;R_PPC_DTPMOD32&#34;},
<span id="L2614" class="ln">  2614&nbsp;&nbsp;</span>	{69, &#34;R_PPC_TPREL16&#34;},
<span id="L2615" class="ln">  2615&nbsp;&nbsp;</span>	{70, &#34;R_PPC_TPREL16_LO&#34;},
<span id="L2616" class="ln">  2616&nbsp;&nbsp;</span>	{71, &#34;R_PPC_TPREL16_HI&#34;},
<span id="L2617" class="ln">  2617&nbsp;&nbsp;</span>	{72, &#34;R_PPC_TPREL16_HA&#34;},
<span id="L2618" class="ln">  2618&nbsp;&nbsp;</span>	{73, &#34;R_PPC_TPREL32&#34;},
<span id="L2619" class="ln">  2619&nbsp;&nbsp;</span>	{74, &#34;R_PPC_DTPREL16&#34;},
<span id="L2620" class="ln">  2620&nbsp;&nbsp;</span>	{75, &#34;R_PPC_DTPREL16_LO&#34;},
<span id="L2621" class="ln">  2621&nbsp;&nbsp;</span>	{76, &#34;R_PPC_DTPREL16_HI&#34;},
<span id="L2622" class="ln">  2622&nbsp;&nbsp;</span>	{77, &#34;R_PPC_DTPREL16_HA&#34;},
<span id="L2623" class="ln">  2623&nbsp;&nbsp;</span>	{78, &#34;R_PPC_DTPREL32&#34;},
<span id="L2624" class="ln">  2624&nbsp;&nbsp;</span>	{79, &#34;R_PPC_GOT_TLSGD16&#34;},
<span id="L2625" class="ln">  2625&nbsp;&nbsp;</span>	{80, &#34;R_PPC_GOT_TLSGD16_LO&#34;},
<span id="L2626" class="ln">  2626&nbsp;&nbsp;</span>	{81, &#34;R_PPC_GOT_TLSGD16_HI&#34;},
<span id="L2627" class="ln">  2627&nbsp;&nbsp;</span>	{82, &#34;R_PPC_GOT_TLSGD16_HA&#34;},
<span id="L2628" class="ln">  2628&nbsp;&nbsp;</span>	{83, &#34;R_PPC_GOT_TLSLD16&#34;},
<span id="L2629" class="ln">  2629&nbsp;&nbsp;</span>	{84, &#34;R_PPC_GOT_TLSLD16_LO&#34;},
<span id="L2630" class="ln">  2630&nbsp;&nbsp;</span>	{85, &#34;R_PPC_GOT_TLSLD16_HI&#34;},
<span id="L2631" class="ln">  2631&nbsp;&nbsp;</span>	{86, &#34;R_PPC_GOT_TLSLD16_HA&#34;},
<span id="L2632" class="ln">  2632&nbsp;&nbsp;</span>	{87, &#34;R_PPC_GOT_TPREL16&#34;},
<span id="L2633" class="ln">  2633&nbsp;&nbsp;</span>	{88, &#34;R_PPC_GOT_TPREL16_LO&#34;},
<span id="L2634" class="ln">  2634&nbsp;&nbsp;</span>	{89, &#34;R_PPC_GOT_TPREL16_HI&#34;},
<span id="L2635" class="ln">  2635&nbsp;&nbsp;</span>	{90, &#34;R_PPC_GOT_TPREL16_HA&#34;},
<span id="L2636" class="ln">  2636&nbsp;&nbsp;</span>	{101, &#34;R_PPC_EMB_NADDR32&#34;},
<span id="L2637" class="ln">  2637&nbsp;&nbsp;</span>	{102, &#34;R_PPC_EMB_NADDR16&#34;},
<span id="L2638" class="ln">  2638&nbsp;&nbsp;</span>	{103, &#34;R_PPC_EMB_NADDR16_LO&#34;},
<span id="L2639" class="ln">  2639&nbsp;&nbsp;</span>	{104, &#34;R_PPC_EMB_NADDR16_HI&#34;},
<span id="L2640" class="ln">  2640&nbsp;&nbsp;</span>	{105, &#34;R_PPC_EMB_NADDR16_HA&#34;},
<span id="L2641" class="ln">  2641&nbsp;&nbsp;</span>	{106, &#34;R_PPC_EMB_SDAI16&#34;},
<span id="L2642" class="ln">  2642&nbsp;&nbsp;</span>	{107, &#34;R_PPC_EMB_SDA2I16&#34;},
<span id="L2643" class="ln">  2643&nbsp;&nbsp;</span>	{108, &#34;R_PPC_EMB_SDA2REL&#34;},
<span id="L2644" class="ln">  2644&nbsp;&nbsp;</span>	{109, &#34;R_PPC_EMB_SDA21&#34;},
<span id="L2645" class="ln">  2645&nbsp;&nbsp;</span>	{110, &#34;R_PPC_EMB_MRKREF&#34;},
<span id="L2646" class="ln">  2646&nbsp;&nbsp;</span>	{111, &#34;R_PPC_EMB_RELSEC16&#34;},
<span id="L2647" class="ln">  2647&nbsp;&nbsp;</span>	{112, &#34;R_PPC_EMB_RELST_LO&#34;},
<span id="L2648" class="ln">  2648&nbsp;&nbsp;</span>	{113, &#34;R_PPC_EMB_RELST_HI&#34;},
<span id="L2649" class="ln">  2649&nbsp;&nbsp;</span>	{114, &#34;R_PPC_EMB_RELST_HA&#34;},
<span id="L2650" class="ln">  2650&nbsp;&nbsp;</span>	{115, &#34;R_PPC_EMB_BIT_FLD&#34;},
<span id="L2651" class="ln">  2651&nbsp;&nbsp;</span>	{116, &#34;R_PPC_EMB_RELSDA&#34;},
<span id="L2652" class="ln">  2652&nbsp;&nbsp;</span>}
<span id="L2653" class="ln">  2653&nbsp;&nbsp;</span>
<span id="L2654" class="ln">  2654&nbsp;&nbsp;</span>func (i R_PPC) String() string   { return stringName(uint32(i), rppcStrings, false) }
<span id="L2655" class="ln">  2655&nbsp;&nbsp;</span>func (i R_PPC) GoString() string { return stringName(uint32(i), rppcStrings, true) }
<span id="L2656" class="ln">  2656&nbsp;&nbsp;</span>
<span id="L2657" class="ln">  2657&nbsp;&nbsp;</span><span class="comment">// Relocation types for 64-bit PowerPC or Power Architecture processors.</span>
<span id="L2658" class="ln">  2658&nbsp;&nbsp;</span><span class="comment">//</span>
<span id="L2659" class="ln">  2659&nbsp;&nbsp;</span><span class="comment">// Values that are shared by both R_PPC and R_PPC64 are prefixed with</span>
<span id="L2660" class="ln">  2660&nbsp;&nbsp;</span><span class="comment">// R_POWERPC_ in the ELF standard. For the R_PPC64 type, the relevant</span>
<span id="L2661" class="ln">  2661&nbsp;&nbsp;</span><span class="comment">// shared relocations have been renamed with the prefix R_PPC64_.</span>
<span id="L2662" class="ln">  2662&nbsp;&nbsp;</span><span class="comment">// The original name follows the value in a comment.</span>
<span id="L2663" class="ln">  2663&nbsp;&nbsp;</span>type R_PPC64 int
<span id="L2664" class="ln">  2664&nbsp;&nbsp;</span>
<span id="L2665" class="ln">  2665&nbsp;&nbsp;</span>const (
<span id="L2666" class="ln">  2666&nbsp;&nbsp;</span>	R_PPC64_NONE               R_PPC64 = 0  <span class="comment">// R_POWERPC_NONE</span>
<span id="L2667" class="ln">  2667&nbsp;&nbsp;</span>	R_PPC64_ADDR32             R_PPC64 = 1  <span class="comment">// R_POWERPC_ADDR32</span>
<span id="L2668" class="ln">  2668&nbsp;&nbsp;</span>	R_PPC64_ADDR24             R_PPC64 = 2  <span class="comment">// R_POWERPC_ADDR24</span>
<span id="L2669" class="ln">  2669&nbsp;&nbsp;</span>	R_PPC64_ADDR16             R_PPC64 = 3  <span class="comment">// R_POWERPC_ADDR16</span>
<span id="L2670" class="ln">  2670&nbsp;&nbsp;</span>	R_PPC64_ADDR16_LO          R_PPC64 = 4  <span class="comment">// R_POWERPC_ADDR16_LO</span>
<span id="L2671" class="ln">  2671&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HI          R_PPC64 = 5  <span class="comment">// R_POWERPC_ADDR16_HI</span>
<span id="L2672" class="ln">  2672&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HA          R_PPC64 = 6  <span class="comment">// R_POWERPC_ADDR16_HA</span>
<span id="L2673" class="ln">  2673&nbsp;&nbsp;</span>	R_PPC64_ADDR14             R_PPC64 = 7  <span class="comment">// R_POWERPC_ADDR14</span>
<span id="L2674" class="ln">  2674&nbsp;&nbsp;</span>	R_PPC64_ADDR14_BRTAKEN     R_PPC64 = 8  <span class="comment">// R_POWERPC_ADDR14_BRTAKEN</span>
<span id="L2675" class="ln">  2675&nbsp;&nbsp;</span>	R_PPC64_ADDR14_BRNTAKEN    R_PPC64 = 9  <span class="comment">// R_POWERPC_ADDR14_BRNTAKEN</span>
<span id="L2676" class="ln">  2676&nbsp;&nbsp;</span>	R_PPC64_REL24              R_PPC64 = 10 <span class="comment">// R_POWERPC_REL24</span>
<span id="L2677" class="ln">  2677&nbsp;&nbsp;</span>	R_PPC64_REL14              R_PPC64 = 11 <span class="comment">// R_POWERPC_REL14</span>
<span id="L2678" class="ln">  2678&nbsp;&nbsp;</span>	R_PPC64_REL14_BRTAKEN      R_PPC64 = 12 <span class="comment">// R_POWERPC_REL14_BRTAKEN</span>
<span id="L2679" class="ln">  2679&nbsp;&nbsp;</span>	R_PPC64_REL14_BRNTAKEN     R_PPC64 = 13 <span class="comment">// R_POWERPC_REL14_BRNTAKEN</span>
<span id="L2680" class="ln">  2680&nbsp;&nbsp;</span>	R_PPC64_GOT16              R_PPC64 = 14 <span class="comment">// R_POWERPC_GOT16</span>
<span id="L2681" class="ln">  2681&nbsp;&nbsp;</span>	R_PPC64_GOT16_LO           R_PPC64 = 15 <span class="comment">// R_POWERPC_GOT16_LO</span>
<span id="L2682" class="ln">  2682&nbsp;&nbsp;</span>	R_PPC64_GOT16_HI           R_PPC64 = 16 <span class="comment">// R_POWERPC_GOT16_HI</span>
<span id="L2683" class="ln">  2683&nbsp;&nbsp;</span>	R_PPC64_GOT16_HA           R_PPC64 = 17 <span class="comment">// R_POWERPC_GOT16_HA</span>
<span id="L2684" class="ln">  2684&nbsp;&nbsp;</span>	R_PPC64_COPY               R_PPC64 = 19 <span class="comment">// R_POWERPC_COPY</span>
<span id="L2685" class="ln">  2685&nbsp;&nbsp;</span>	R_PPC64_GLOB_DAT           R_PPC64 = 20 <span class="comment">// R_POWERPC_GLOB_DAT</span>
<span id="L2686" class="ln">  2686&nbsp;&nbsp;</span>	R_PPC64_JMP_SLOT           R_PPC64 = 21 <span class="comment">// R_POWERPC_JMP_SLOT</span>
<span id="L2687" class="ln">  2687&nbsp;&nbsp;</span>	R_PPC64_RELATIVE           R_PPC64 = 22 <span class="comment">// R_POWERPC_RELATIVE</span>
<span id="L2688" class="ln">  2688&nbsp;&nbsp;</span>	R_PPC64_UADDR32            R_PPC64 = 24 <span class="comment">// R_POWERPC_UADDR32</span>
<span id="L2689" class="ln">  2689&nbsp;&nbsp;</span>	R_PPC64_UADDR16            R_PPC64 = 25 <span class="comment">// R_POWERPC_UADDR16</span>
<span id="L2690" class="ln">  2690&nbsp;&nbsp;</span>	R_PPC64_REL32              R_PPC64 = 26 <span class="comment">// R_POWERPC_REL32</span>
<span id="L2691" class="ln">  2691&nbsp;&nbsp;</span>	R_PPC64_PLT32              R_PPC64 = 27 <span class="comment">// R_POWERPC_PLT32</span>
<span id="L2692" class="ln">  2692&nbsp;&nbsp;</span>	R_PPC64_PLTREL32           R_PPC64 = 28 <span class="comment">// R_POWERPC_PLTREL32</span>
<span id="L2693" class="ln">  2693&nbsp;&nbsp;</span>	R_PPC64_PLT16_LO           R_PPC64 = 29 <span class="comment">// R_POWERPC_PLT16_LO</span>
<span id="L2694" class="ln">  2694&nbsp;&nbsp;</span>	R_PPC64_PLT16_HI           R_PPC64 = 30 <span class="comment">// R_POWERPC_PLT16_HI</span>
<span id="L2695" class="ln">  2695&nbsp;&nbsp;</span>	R_PPC64_PLT16_HA           R_PPC64 = 31 <span class="comment">// R_POWERPC_PLT16_HA</span>
<span id="L2696" class="ln">  2696&nbsp;&nbsp;</span>	R_PPC64_SECTOFF            R_PPC64 = 33 <span class="comment">// R_POWERPC_SECTOFF</span>
<span id="L2697" class="ln">  2697&nbsp;&nbsp;</span>	R_PPC64_SECTOFF_LO         R_PPC64 = 34 <span class="comment">// R_POWERPC_SECTOFF_LO</span>
<span id="L2698" class="ln">  2698&nbsp;&nbsp;</span>	R_PPC64_SECTOFF_HI         R_PPC64 = 35 <span class="comment">// R_POWERPC_SECTOFF_HI</span>
<span id="L2699" class="ln">  2699&nbsp;&nbsp;</span>	R_PPC64_SECTOFF_HA         R_PPC64 = 36 <span class="comment">// R_POWERPC_SECTOFF_HA</span>
<span id="L2700" class="ln">  2700&nbsp;&nbsp;</span>	R_PPC64_REL30              R_PPC64 = 37 <span class="comment">// R_POWERPC_ADDR30</span>
<span id="L2701" class="ln">  2701&nbsp;&nbsp;</span>	R_PPC64_ADDR64             R_PPC64 = 38
<span id="L2702" class="ln">  2702&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHER      R_PPC64 = 39
<span id="L2703" class="ln">  2703&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHERA     R_PPC64 = 40
<span id="L2704" class="ln">  2704&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHEST     R_PPC64 = 41
<span id="L2705" class="ln">  2705&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHESTA    R_PPC64 = 42
<span id="L2706" class="ln">  2706&nbsp;&nbsp;</span>	R_PPC64_UADDR64            R_PPC64 = 43
<span id="L2707" class="ln">  2707&nbsp;&nbsp;</span>	R_PPC64_REL64              R_PPC64 = 44
<span id="L2708" class="ln">  2708&nbsp;&nbsp;</span>	R_PPC64_PLT64              R_PPC64 = 45
<span id="L2709" class="ln">  2709&nbsp;&nbsp;</span>	R_PPC64_PLTREL64           R_PPC64 = 46
<span id="L2710" class="ln">  2710&nbsp;&nbsp;</span>	R_PPC64_TOC16              R_PPC64 = 47
<span id="L2711" class="ln">  2711&nbsp;&nbsp;</span>	R_PPC64_TOC16_LO           R_PPC64 = 48
<span id="L2712" class="ln">  2712&nbsp;&nbsp;</span>	R_PPC64_TOC16_HI           R_PPC64 = 49
<span id="L2713" class="ln">  2713&nbsp;&nbsp;</span>	R_PPC64_TOC16_HA           R_PPC64 = 50
<span id="L2714" class="ln">  2714&nbsp;&nbsp;</span>	R_PPC64_TOC                R_PPC64 = 51
<span id="L2715" class="ln">  2715&nbsp;&nbsp;</span>	R_PPC64_PLTGOT16           R_PPC64 = 52
<span id="L2716" class="ln">  2716&nbsp;&nbsp;</span>	R_PPC64_PLTGOT16_LO        R_PPC64 = 53
<span id="L2717" class="ln">  2717&nbsp;&nbsp;</span>	R_PPC64_PLTGOT16_HI        R_PPC64 = 54
<span id="L2718" class="ln">  2718&nbsp;&nbsp;</span>	R_PPC64_PLTGOT16_HA        R_PPC64 = 55
<span id="L2719" class="ln">  2719&nbsp;&nbsp;</span>	R_PPC64_ADDR16_DS          R_PPC64 = 56
<span id="L2720" class="ln">  2720&nbsp;&nbsp;</span>	R_PPC64_ADDR16_LO_DS       R_PPC64 = 57
<span id="L2721" class="ln">  2721&nbsp;&nbsp;</span>	R_PPC64_GOT16_DS           R_PPC64 = 58
<span id="L2722" class="ln">  2722&nbsp;&nbsp;</span>	R_PPC64_GOT16_LO_DS        R_PPC64 = 59
<span id="L2723" class="ln">  2723&nbsp;&nbsp;</span>	R_PPC64_PLT16_LO_DS        R_PPC64 = 60
<span id="L2724" class="ln">  2724&nbsp;&nbsp;</span>	R_PPC64_SECTOFF_DS         R_PPC64 = 61
<span id="L2725" class="ln">  2725&nbsp;&nbsp;</span>	R_PPC64_SECTOFF_LO_DS      R_PPC64 = 62
<span id="L2726" class="ln">  2726&nbsp;&nbsp;</span>	R_PPC64_TOC16_DS           R_PPC64 = 63
<span id="L2727" class="ln">  2727&nbsp;&nbsp;</span>	R_PPC64_TOC16_LO_DS        R_PPC64 = 64
<span id="L2728" class="ln">  2728&nbsp;&nbsp;</span>	R_PPC64_PLTGOT16_DS        R_PPC64 = 65
<span id="L2729" class="ln">  2729&nbsp;&nbsp;</span>	R_PPC64_PLTGOT_LO_DS       R_PPC64 = 66
<span id="L2730" class="ln">  2730&nbsp;&nbsp;</span>	R_PPC64_TLS                R_PPC64 = 67 <span class="comment">// R_POWERPC_TLS</span>
<span id="L2731" class="ln">  2731&nbsp;&nbsp;</span>	R_PPC64_DTPMOD64           R_PPC64 = 68 <span class="comment">// R_POWERPC_DTPMOD64</span>
<span id="L2732" class="ln">  2732&nbsp;&nbsp;</span>	R_PPC64_TPREL16            R_PPC64 = 69 <span class="comment">// R_POWERPC_TPREL16</span>
<span id="L2733" class="ln">  2733&nbsp;&nbsp;</span>	R_PPC64_TPREL16_LO         R_PPC64 = 70 <span class="comment">// R_POWERPC_TPREL16_LO</span>
<span id="L2734" class="ln">  2734&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HI         R_PPC64 = 71 <span class="comment">// R_POWERPC_TPREL16_HI</span>
<span id="L2735" class="ln">  2735&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HA         R_PPC64 = 72 <span class="comment">// R_POWERPC_TPREL16_HA</span>
<span id="L2736" class="ln">  2736&nbsp;&nbsp;</span>	R_PPC64_TPREL64            R_PPC64 = 73 <span class="comment">// R_POWERPC_TPREL64</span>
<span id="L2737" class="ln">  2737&nbsp;&nbsp;</span>	R_PPC64_DTPREL16           R_PPC64 = 74 <span class="comment">// R_POWERPC_DTPREL16</span>
<span id="L2738" class="ln">  2738&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_LO        R_PPC64 = 75 <span class="comment">// R_POWERPC_DTPREL16_LO</span>
<span id="L2739" class="ln">  2739&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HI        R_PPC64 = 76 <span class="comment">// R_POWERPC_DTPREL16_HI</span>
<span id="L2740" class="ln">  2740&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HA        R_PPC64 = 77 <span class="comment">// R_POWERPC_DTPREL16_HA</span>
<span id="L2741" class="ln">  2741&nbsp;&nbsp;</span>	R_PPC64_DTPREL64           R_PPC64 = 78 <span class="comment">// R_POWERPC_DTPREL64</span>
<span id="L2742" class="ln">  2742&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSGD16        R_PPC64 = 79 <span class="comment">// R_POWERPC_GOT_TLSGD16</span>
<span id="L2743" class="ln">  2743&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSGD16_LO     R_PPC64 = 80 <span class="comment">// R_POWERPC_GOT_TLSGD16_LO</span>
<span id="L2744" class="ln">  2744&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSGD16_HI     R_PPC64 = 81 <span class="comment">// R_POWERPC_GOT_TLSGD16_HI</span>
<span id="L2745" class="ln">  2745&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSGD16_HA     R_PPC64 = 82 <span class="comment">// R_POWERPC_GOT_TLSGD16_HA</span>
<span id="L2746" class="ln">  2746&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSLD16        R_PPC64 = 83 <span class="comment">// R_POWERPC_GOT_TLSLD16</span>
<span id="L2747" class="ln">  2747&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSLD16_LO     R_PPC64 = 84 <span class="comment">// R_POWERPC_GOT_TLSLD16_LO</span>
<span id="L2748" class="ln">  2748&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSLD16_HI     R_PPC64 = 85 <span class="comment">// R_POWERPC_GOT_TLSLD16_HI</span>
<span id="L2749" class="ln">  2749&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSLD16_HA     R_PPC64 = 86 <span class="comment">// R_POWERPC_GOT_TLSLD16_HA</span>
<span id="L2750" class="ln">  2750&nbsp;&nbsp;</span>	R_PPC64_GOT_TPREL16_DS     R_PPC64 = 87 <span class="comment">// R_POWERPC_GOT_TPREL16_DS</span>
<span id="L2751" class="ln">  2751&nbsp;&nbsp;</span>	R_PPC64_GOT_TPREL16_LO_DS  R_PPC64 = 88 <span class="comment">// R_POWERPC_GOT_TPREL16_LO_DS</span>
<span id="L2752" class="ln">  2752&nbsp;&nbsp;</span>	R_PPC64_GOT_TPREL16_HI     R_PPC64 = 89 <span class="comment">// R_POWERPC_GOT_TPREL16_HI</span>
<span id="L2753" class="ln">  2753&nbsp;&nbsp;</span>	R_PPC64_GOT_TPREL16_HA     R_PPC64 = 90 <span class="comment">// R_POWERPC_GOT_TPREL16_HA</span>
<span id="L2754" class="ln">  2754&nbsp;&nbsp;</span>	R_PPC64_GOT_DTPREL16_DS    R_PPC64 = 91 <span class="comment">// R_POWERPC_GOT_DTPREL16_DS</span>
<span id="L2755" class="ln">  2755&nbsp;&nbsp;</span>	R_PPC64_GOT_DTPREL16_LO_DS R_PPC64 = 92 <span class="comment">// R_POWERPC_GOT_DTPREL16_LO_DS</span>
<span id="L2756" class="ln">  2756&nbsp;&nbsp;</span>	R_PPC64_GOT_DTPREL16_HI    R_PPC64 = 93 <span class="comment">// R_POWERPC_GOT_DTPREL16_HI</span>
<span id="L2757" class="ln">  2757&nbsp;&nbsp;</span>	R_PPC64_GOT_DTPREL16_HA    R_PPC64 = 94 <span class="comment">// R_POWERPC_GOT_DTPREL16_HA</span>
<span id="L2758" class="ln">  2758&nbsp;&nbsp;</span>	R_PPC64_TPREL16_DS         R_PPC64 = 95
<span id="L2759" class="ln">  2759&nbsp;&nbsp;</span>	R_PPC64_TPREL16_LO_DS      R_PPC64 = 96
<span id="L2760" class="ln">  2760&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGHER     R_PPC64 = 97
<span id="L2761" class="ln">  2761&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGHERA    R_PPC64 = 98
<span id="L2762" class="ln">  2762&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGHEST    R_PPC64 = 99
<span id="L2763" class="ln">  2763&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGHESTA   R_PPC64 = 100
<span id="L2764" class="ln">  2764&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_DS        R_PPC64 = 101
<span id="L2765" class="ln">  2765&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_LO_DS     R_PPC64 = 102
<span id="L2766" class="ln">  2766&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGHER    R_PPC64 = 103
<span id="L2767" class="ln">  2767&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGHERA   R_PPC64 = 104
<span id="L2768" class="ln">  2768&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGHEST   R_PPC64 = 105
<span id="L2769" class="ln">  2769&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGHESTA  R_PPC64 = 106
<span id="L2770" class="ln">  2770&nbsp;&nbsp;</span>	R_PPC64_TLSGD              R_PPC64 = 107
<span id="L2771" class="ln">  2771&nbsp;&nbsp;</span>	R_PPC64_TLSLD              R_PPC64 = 108
<span id="L2772" class="ln">  2772&nbsp;&nbsp;</span>	R_PPC64_TOCSAVE            R_PPC64 = 109
<span id="L2773" class="ln">  2773&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGH        R_PPC64 = 110
<span id="L2774" class="ln">  2774&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHA       R_PPC64 = 111
<span id="L2775" class="ln">  2775&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGH       R_PPC64 = 112
<span id="L2776" class="ln">  2776&nbsp;&nbsp;</span>	R_PPC64_TPREL16_HIGHA      R_PPC64 = 113
<span id="L2777" class="ln">  2777&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGH      R_PPC64 = 114
<span id="L2778" class="ln">  2778&nbsp;&nbsp;</span>	R_PPC64_DTPREL16_HIGHA     R_PPC64 = 115
<span id="L2779" class="ln">  2779&nbsp;&nbsp;</span>	R_PPC64_REL24_NOTOC        R_PPC64 = 116
<span id="L2780" class="ln">  2780&nbsp;&nbsp;</span>	R_PPC64_ADDR64_LOCAL       R_PPC64 = 117
<span id="L2781" class="ln">  2781&nbsp;&nbsp;</span>	R_PPC64_ENTRY              R_PPC64 = 118
<span id="L2782" class="ln">  2782&nbsp;&nbsp;</span>	R_PPC64_PLTSEQ             R_PPC64 = 119
<span id="L2783" class="ln">  2783&nbsp;&nbsp;</span>	R_PPC64_PLTCALL            R_PPC64 = 120
<span id="L2784" class="ln">  2784&nbsp;&nbsp;</span>	R_PPC64_PLTSEQ_NOTOC       R_PPC64 = 121
<span id="L2785" class="ln">  2785&nbsp;&nbsp;</span>	R_PPC64_PLTCALL_NOTOC      R_PPC64 = 122
<span id="L2786" class="ln">  2786&nbsp;&nbsp;</span>	R_PPC64_PCREL_OPT          R_PPC64 = 123
<span id="L2787" class="ln">  2787&nbsp;&nbsp;</span>	R_PPC64_REL24_P9NOTOC      R_PPC64 = 124
<span id="L2788" class="ln">  2788&nbsp;&nbsp;</span>	R_PPC64_D34                R_PPC64 = 128
<span id="L2789" class="ln">  2789&nbsp;&nbsp;</span>	R_PPC64_D34_LO             R_PPC64 = 129
<span id="L2790" class="ln">  2790&nbsp;&nbsp;</span>	R_PPC64_D34_HI30           R_PPC64 = 130
<span id="L2791" class="ln">  2791&nbsp;&nbsp;</span>	R_PPC64_D34_HA30           R_PPC64 = 131
<span id="L2792" class="ln">  2792&nbsp;&nbsp;</span>	R_PPC64_PCREL34            R_PPC64 = 132
<span id="L2793" class="ln">  2793&nbsp;&nbsp;</span>	R_PPC64_GOT_PCREL34        R_PPC64 = 133
<span id="L2794" class="ln">  2794&nbsp;&nbsp;</span>	R_PPC64_PLT_PCREL34        R_PPC64 = 134
<span id="L2795" class="ln">  2795&nbsp;&nbsp;</span>	R_PPC64_PLT_PCREL34_NOTOC  R_PPC64 = 135
<span id="L2796" class="ln">  2796&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHER34    R_PPC64 = 136
<span id="L2797" class="ln">  2797&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHERA34   R_PPC64 = 137
<span id="L2798" class="ln">  2798&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHEST34   R_PPC64 = 138
<span id="L2799" class="ln">  2799&nbsp;&nbsp;</span>	R_PPC64_ADDR16_HIGHESTA34  R_PPC64 = 139
<span id="L2800" class="ln">  2800&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHER34     R_PPC64 = 140
<span id="L2801" class="ln">  2801&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHERA34    R_PPC64 = 141
<span id="L2802" class="ln">  2802&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHEST34    R_PPC64 = 142
<span id="L2803" class="ln">  2803&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHESTA34   R_PPC64 = 143
<span id="L2804" class="ln">  2804&nbsp;&nbsp;</span>	R_PPC64_D28                R_PPC64 = 144
<span id="L2805" class="ln">  2805&nbsp;&nbsp;</span>	R_PPC64_PCREL28            R_PPC64 = 145
<span id="L2806" class="ln">  2806&nbsp;&nbsp;</span>	R_PPC64_TPREL34            R_PPC64 = 146
<span id="L2807" class="ln">  2807&nbsp;&nbsp;</span>	R_PPC64_DTPREL34           R_PPC64 = 147
<span id="L2808" class="ln">  2808&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSGD_PCREL34  R_PPC64 = 148
<span id="L2809" class="ln">  2809&nbsp;&nbsp;</span>	R_PPC64_GOT_TLSLD_PCREL34  R_PPC64 = 149
<span id="L2810" class="ln">  2810&nbsp;&nbsp;</span>	R_PPC64_GOT_TPREL_PCREL34  R_PPC64 = 150
<span id="L2811" class="ln">  2811&nbsp;&nbsp;</span>	R_PPC64_GOT_DTPREL_PCREL34 R_PPC64 = 151
<span id="L2812" class="ln">  2812&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGH         R_PPC64 = 240
<span id="L2813" class="ln">  2813&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHA        R_PPC64 = 241
<span id="L2814" class="ln">  2814&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHER       R_PPC64 = 242
<span id="L2815" class="ln">  2815&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHERA      R_PPC64 = 243
<span id="L2816" class="ln">  2816&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHEST      R_PPC64 = 244
<span id="L2817" class="ln">  2817&nbsp;&nbsp;</span>	R_PPC64_REL16_HIGHESTA     R_PPC64 = 245
<span id="L2818" class="ln">  2818&nbsp;&nbsp;</span>	R_PPC64_REL16DX_HA         R_PPC64 = 246 <span class="comment">// R_POWERPC_REL16DX_HA</span>
<span id="L2819" class="ln">  2819&nbsp;&nbsp;</span>	R_PPC64_JMP_IREL           R_PPC64 = 247
<span id="L2820" class="ln">  2820&nbsp;&nbsp;</span>	R_PPC64_IRELATIVE          R_PPC64 = 248 <span class="comment">// R_POWERPC_IRELATIVE</span>
<span id="L2821" class="ln">  2821&nbsp;&nbsp;</span>	R_PPC64_REL16              R_PPC64 = 249 <span class="comment">// R_POWERPC_REL16</span>
<span id="L2822" class="ln">  2822&nbsp;&nbsp;</span>	R_PPC64_REL16_LO           R_PPC64 = 250 <span class="comment">// R_POWERPC_REL16_LO</span>
<span id="L2823" class="ln">  2823&nbsp;&nbsp;</span>	R_PPC64_REL16_HI           R_PPC64 = 251 <span class="comment">// R_POWERPC_REL16_HI</span>
<span id="L2824" class="ln">  2824&nbsp;&nbsp;</span>	R_PPC64_REL16_HA           R_PPC64 = 252 <span class="comment">// R_POWERPC_REL16_HA</span>
<span id="L2825" class="ln">  2825&nbsp;&nbsp;</span>	R_PPC64_GNU_VTINHERIT      R_PPC64 = 253
<span id="L2826" class="ln">  2826&nbsp;&nbsp;</span>	R_PPC64_GNU_VTENTRY        R_PPC64 = 254
<span id="L2827" class="ln">  2827&nbsp;&nbsp;</span>)
<span id="L2828" class="ln">  2828&nbsp;&nbsp;</span>
<span id="L2829" class="ln">  2829&nbsp;&nbsp;</span>var rppc64Strings = []intName{
<span id="L2830" class="ln">  2830&nbsp;&nbsp;</span>	{0, &#34;R_PPC64_NONE&#34;},
<span id="L2831" class="ln">  2831&nbsp;&nbsp;</span>	{1, &#34;R_PPC64_ADDR32&#34;},
<span id="L2832" class="ln">  2832&nbsp;&nbsp;</span>	{2, &#34;R_PPC64_ADDR24&#34;},
<span id="L2833" class="ln">  2833&nbsp;&nbsp;</span>	{3, &#34;R_PPC64_ADDR16&#34;},
<span id="L2834" class="ln">  2834&nbsp;&nbsp;</span>	{4, &#34;R_PPC64_ADDR16_LO&#34;},
<span id="L2835" class="ln">  2835&nbsp;&nbsp;</span>	{5, &#34;R_PPC64_ADDR16_HI&#34;},
<span id="L2836" class="ln">  2836&nbsp;&nbsp;</span>	{6, &#34;R_PPC64_ADDR16_HA&#34;},
<span id="L2837" class="ln">  2837&nbsp;&nbsp;</span>	{7, &#34;R_PPC64_ADDR14&#34;},
<span id="L2838" class="ln">  2838&nbsp;&nbsp;</span>	{8, &#34;R_PPC64_ADDR14_BRTAKEN&#34;},
<span id="L2839" class="ln">  2839&nbsp;&nbsp;</span>	{9, &#34;R_PPC64_ADDR14_BRNTAKEN&#34;},
<span id="L2840" class="ln">  2840&nbsp;&nbsp;</span>	{10, &#34;R_PPC64_REL24&#34;},
<span id="L2841" class="ln">  2841&nbsp;&nbsp;</span>	{11, &#34;R_PPC64_REL14&#34;},
<span id="L2842" class="ln">  2842&nbsp;&nbsp;</span>	{12, &#34;R_PPC64_REL14_BRTAKEN&#34;},
<span id="L2843" class="ln">  2843&nbsp;&nbsp;</span>	{13, &#34;R_PPC64_REL14_BRNTAKEN&#34;},
<span id="L2844" class="ln">  2844&nbsp;&nbsp;</span>	{14, &#34;R_PPC64_GOT16&#34;},
<span id="L2845" class="ln">  2845&nbsp;&nbsp;</span>	{15, &#34;R_PPC64_GOT16_LO&#34;},
<span id="L2846" class="ln">  2846&nbsp;&nbsp;</span>	{16, &#34;R_PPC64_GOT16_HI&#34;},
<span id="L2847" class="ln">  2847&nbsp;&nbsp;</span>	{17, &#34;R_PPC64_GOT16_HA&#34;},
<span id="L2848" class="ln">  2848&nbsp;&nbsp;</span>	{19, &#34;R_PPC64_COPY&#34;},
<span id="L2849" class="ln">  2849&nbsp;&nbsp;</span>	{20, &#34;R_PPC64_GLOB_DAT&#34;},
<span id="L2850" class="ln">  2850&nbsp;&nbsp;</span>	{21, &#34;R_PPC64_JMP_SLOT&#34;},
<span id="L2851" class="ln">  2851&nbsp;&nbsp;</span>	{22, &#34;R_PPC64_RELATIVE&#34;},
<span id="L2852" class="ln">  2852&nbsp;&nbsp;</span>	{24, &#34;R_PPC64_UADDR32&#34;},
<span id="L2853" class="ln">  2853&nbsp;&nbsp;</span>	{25, &#34;R_PPC64_UADDR16&#34;},
<span id="L2854" class="ln">  2854&nbsp;&nbsp;</span>	{26, &#34;R_PPC64_REL32&#34;},
<span id="L2855" class="ln">  2855&nbsp;&nbsp;</span>	{27, &#34;R_PPC64_PLT32&#34;},
<span id="L2856" class="ln">  2856&nbsp;&nbsp;</span>	{28, &#34;R_PPC64_PLTREL32&#34;},
<span id="L2857" class="ln">  2857&nbsp;&nbsp;</span>	{29, &#34;R_PPC64_PLT16_LO&#34;},
<span id="L2858" class="ln">  2858&nbsp;&nbsp;</span>	{30, &#34;R_PPC64_PLT16_HI&#34;},
<span id="L2859" class="ln">  2859&nbsp;&nbsp;</span>	{31, &#34;R_PPC64_PLT16_HA&#34;},
<span id="L2860" class="ln">  2860&nbsp;&nbsp;</span>	{33, &#34;R_PPC64_SECTOFF&#34;},
<span id="L2861" class="ln">  2861&nbsp;&nbsp;</span>	{34, &#34;R_PPC64_SECTOFF_LO&#34;},
<span id="L2862" class="ln">  2862&nbsp;&nbsp;</span>	{35, &#34;R_PPC64_SECTOFF_HI&#34;},
<span id="L2863" class="ln">  2863&nbsp;&nbsp;</span>	{36, &#34;R_PPC64_SECTOFF_HA&#34;},
<span id="L2864" class="ln">  2864&nbsp;&nbsp;</span>	{37, &#34;R_PPC64_REL30&#34;},
<span id="L2865" class="ln">  2865&nbsp;&nbsp;</span>	{38, &#34;R_PPC64_ADDR64&#34;},
<span id="L2866" class="ln">  2866&nbsp;&nbsp;</span>	{39, &#34;R_PPC64_ADDR16_HIGHER&#34;},
<span id="L2867" class="ln">  2867&nbsp;&nbsp;</span>	{40, &#34;R_PPC64_ADDR16_HIGHERA&#34;},
<span id="L2868" class="ln">  2868&nbsp;&nbsp;</span>	{41, &#34;R_PPC64_ADDR16_HIGHEST&#34;},
<span id="L2869" class="ln">  2869&nbsp;&nbsp;</span>	{42, &#34;R_PPC64_ADDR16_HIGHESTA&#34;},
<span id="L2870" class="ln">  2870&nbsp;&nbsp;</span>	{43, &#34;R_PPC64_UADDR64&#34;},
<span id="L2871" class="ln">  2871&nbsp;&nbsp;</span>	{44, &#34;R_PPC64_REL64&#34;},
<span id="L2872" class="ln">  2872&nbsp;&nbsp;</span>	{45, &#34;R_PPC64_PLT64&#34;},
<span id="L2873" class="ln">  2873&nbsp;&nbsp;</span>	{46, &#34;R_PPC64_PLTREL64&#34;},
<span id="L2874" class="ln">  2874&nbsp;&nbsp;</span>	{47, &#34;R_PPC64_TOC16&#34;},
<span id="L2875" class="ln">  2875&nbsp;&nbsp;</span>	{48, &#34;R_PPC64_TOC16_LO&#34;},
<span id="L2876" class="ln">  2876&nbsp;&nbsp;</span>	{49, &#34;R_PPC64_TOC16_HI&#34;},
<span id="L2877" class="ln">  2877&nbsp;&nbsp;</span>	{50, &#34;R_PPC64_TOC16_HA&#34;},
<span id="L2878" class="ln">  2878&nbsp;&nbsp;</span>	{51, &#34;R_PPC64_TOC&#34;},
<span id="L2879" class="ln">  2879&nbsp;&nbsp;</span>	{52, &#34;R_PPC64_PLTGOT16&#34;},
<span id="L2880" class="ln">  2880&nbsp;&nbsp;</span>	{53, &#34;R_PPC64_PLTGOT16_LO&#34;},
<span id="L2881" class="ln">  2881&nbsp;&nbsp;</span>	{54, &#34;R_PPC64_PLTGOT16_HI&#34;},
<span id="L2882" class="ln">  2882&nbsp;&nbsp;</span>	{55, &#34;R_PPC64_PLTGOT16_HA&#34;},
<span id="L2883" class="ln">  2883&nbsp;&nbsp;</span>	{56, &#34;R_PPC64_ADDR16_DS&#34;},
<span id="L2884" class="ln">  2884&nbsp;&nbsp;</span>	{57, &#34;R_PPC64_ADDR16_LO_DS&#34;},
<span id="L2885" class="ln">  2885&nbsp;&nbsp;</span>	{58, &#34;R_PPC64_GOT16_DS&#34;},
<span id="L2886" class="ln">  2886&nbsp;&nbsp;</span>	{59, &#34;R_PPC64_GOT16_LO_DS&#34;},
<span id="L2887" class="ln">  2887&nbsp;&nbsp;</span>	{60, &#34;R_PPC64_PLT16_LO_DS&#34;},
<span id="L2888" class="ln">  2888&nbsp;&nbsp;</span>	{61, &#34;R_PPC64_SECTOFF_DS&#34;},
<span id="L2889" class="ln">  2889&nbsp;&nbsp;</span>	{62, &#34;R_PPC64_SECTOFF_LO_DS&#34;},
<span id="L2890" class="ln">  2890&nbsp;&nbsp;</span>	{63, &#34;R_PPC64_TOC16_DS&#34;},
<span id="L2891" class="ln">  2891&nbsp;&nbsp;</span>	{64, &#34;R_PPC64_TOC16_LO_DS&#34;},
<span id="L2892" class="ln">  2892&nbsp;&nbsp;</span>	{65, &#34;R_PPC64_PLTGOT16_DS&#34;},
<span id="L2893" class="ln">  2893&nbsp;&nbsp;</span>	{66, &#34;R_PPC64_PLTGOT_LO_DS&#34;},
<span id="L2894" class="ln">  2894&nbsp;&nbsp;</span>	{67, &#34;R_PPC64_TLS&#34;},
<span id="L2895" class="ln">  2895&nbsp;&nbsp;</span>	{68, &#34;R_PPC64_DTPMOD64&#34;},
<span id="L2896" class="ln">  2896&nbsp;&nbsp;</span>	{69, &#34;R_PPC64_TPREL16&#34;},
<span id="L2897" class="ln">  2897&nbsp;&nbsp;</span>	{70, &#34;R_PPC64_TPREL16_LO&#34;},
<span id="L2898" class="ln">  2898&nbsp;&nbsp;</span>	{71, &#34;R_PPC64_TPREL16_HI&#34;},
<span id="L2899" class="ln">  2899&nbsp;&nbsp;</span>	{72, &#34;R_PPC64_TPREL16_HA&#34;},
<span id="L2900" class="ln">  2900&nbsp;&nbsp;</span>	{73, &#34;R_PPC64_TPREL64&#34;},
<span id="L2901" class="ln">  2901&nbsp;&nbsp;</span>	{74, &#34;R_PPC64_DTPREL16&#34;},
<span id="L2902" class="ln">  2902&nbsp;&nbsp;</span>	{75, &#34;R_PPC64_DTPREL16_LO&#34;},
<span id="L2903" class="ln">  2903&nbsp;&nbsp;</span>	{76, &#34;R_PPC64_DTPREL16_HI&#34;},
<span id="L2904" class="ln">  2904&nbsp;&nbsp;</span>	{77, &#34;R_PPC64_DTPREL16_HA&#34;},
<span id="L2905" class="ln">  2905&nbsp;&nbsp;</span>	{78, &#34;R_PPC64_DTPREL64&#34;},
<span id="L2906" class="ln">  2906&nbsp;&nbsp;</span>	{79, &#34;R_PPC64_GOT_TLSGD16&#34;},
<span id="L2907" class="ln">  2907&nbsp;&nbsp;</span>	{80, &#34;R_PPC64_GOT_TLSGD16_LO&#34;},
<span id="L2908" class="ln">  2908&nbsp;&nbsp;</span>	{81, &#34;R_PPC64_GOT_TLSGD16_HI&#34;},
<span id="L2909" class="ln">  2909&nbsp;&nbsp;</span>	{82, &#34;R_PPC64_GOT_TLSGD16_HA&#34;},
<span id="L2910" class="ln">  2910&nbsp;&nbsp;</span>	{83, &#34;R_PPC64_GOT_TLSLD16&#34;},
<span id="L2911" class="ln">  2911&nbsp;&nbsp;</span>	{84, &#34;R_PPC64_GOT_TLSLD16_LO&#34;},
<span id="L2912" class="ln">  2912&nbsp;&nbsp;</span>	{85, &#34;R_PPC64_GOT_TLSLD16_HI&#34;},
<span id="L2913" class="ln">  2913&nbsp;&nbsp;</span>	{86, &#34;R_PPC64_GOT_TLSLD16_HA&#34;},
<span id="L2914" class="ln">  2914&nbsp;&nbsp;</span>	{87, &#34;R_PPC64_GOT_TPREL16_DS&#34;},
<span id="L2915" class="ln">  2915&nbsp;&nbsp;</span>	{88, &#34;R_PPC64_GOT_TPREL16_LO_DS&#34;},
<span id="L2916" class="ln">  2916&nbsp;&nbsp;</span>	{89, &#34;R_PPC64_GOT_TPREL16_HI&#34;},
<span id="L2917" class="ln">  2917&nbsp;&nbsp;</span>	{90, &#34;R_PPC64_GOT_TPREL16_HA&#34;},
<span id="L2918" class="ln">  2918&nbsp;&nbsp;</span>	{91, &#34;R_PPC64_GOT_DTPREL16_DS&#34;},
<span id="L2919" class="ln">  2919&nbsp;&nbsp;</span>	{92, &#34;R_PPC64_GOT_DTPREL16_LO_DS&#34;},
<span id="L2920" class="ln">  2920&nbsp;&nbsp;</span>	{93, &#34;R_PPC64_GOT_DTPREL16_HI&#34;},
<span id="L2921" class="ln">  2921&nbsp;&nbsp;</span>	{94, &#34;R_PPC64_GOT_DTPREL16_HA&#34;},
<span id="L2922" class="ln">  2922&nbsp;&nbsp;</span>	{95, &#34;R_PPC64_TPREL16_DS&#34;},
<span id="L2923" class="ln">  2923&nbsp;&nbsp;</span>	{96, &#34;R_PPC64_TPREL16_LO_DS&#34;},
<span id="L2924" class="ln">  2924&nbsp;&nbsp;</span>	{97, &#34;R_PPC64_TPREL16_HIGHER&#34;},
<span id="L2925" class="ln">  2925&nbsp;&nbsp;</span>	{98, &#34;R_PPC64_TPREL16_HIGHERA&#34;},
<span id="L2926" class="ln">  2926&nbsp;&nbsp;</span>	{99, &#34;R_PPC64_TPREL16_HIGHEST&#34;},
<span id="L2927" class="ln">  2927&nbsp;&nbsp;</span>	{100, &#34;R_PPC64_TPREL16_HIGHESTA&#34;},
<span id="L2928" class="ln">  2928&nbsp;&nbsp;</span>	{101, &#34;R_PPC64_DTPREL16_DS&#34;},
<span id="L2929" class="ln">  2929&nbsp;&nbsp;</span>	{102, &#34;R_PPC64_DTPREL16_LO_DS&#34;},
<span id="L2930" class="ln">  2930&nbsp;&nbsp;</span>	{103, &#34;R_PPC64_DTPREL16_HIGHER&#34;},
<span id="L2931" class="ln">  2931&nbsp;&nbsp;</span>	{104, &#34;R_PPC64_DTPREL16_HIGHERA&#34;},
<span id="L2932" class="ln">  2932&nbsp;&nbsp;</span>	{105, &#34;R_PPC64_DTPREL16_HIGHEST&#34;},
<span id="L2933" class="ln">  2933&nbsp;&nbsp;</span>	{106, &#34;R_PPC64_DTPREL16_HIGHESTA&#34;},
<span id="L2934" class="ln">  2934&nbsp;&nbsp;</span>	{107, &#34;R_PPC64_TLSGD&#34;},
<span id="L2935" class="ln">  2935&nbsp;&nbsp;</span>	{108, &#34;R_PPC64_TLSLD&#34;},
<span id="L2936" class="ln">  2936&nbsp;&nbsp;</span>	{109, &#34;R_PPC64_TOCSAVE&#34;},
<span id="L2937" class="ln">  2937&nbsp;&nbsp;</span>	{110, &#34;R_PPC64_ADDR16_HIGH&#34;},
<span id="L2938" class="ln">  2938&nbsp;&nbsp;</span>	{111, &#34;R_PPC64_ADDR16_HIGHA&#34;},
<span id="L2939" class="ln">  2939&nbsp;&nbsp;</span>	{112, &#34;R_PPC64_TPREL16_HIGH&#34;},
<span id="L2940" class="ln">  2940&nbsp;&nbsp;</span>	{113, &#34;R_PPC64_TPREL16_HIGHA&#34;},
<span id="L2941" class="ln">  2941&nbsp;&nbsp;</span>	{114, &#34;R_PPC64_DTPREL16_HIGH&#34;},
<span id="L2942" class="ln">  2942&nbsp;&nbsp;</span>	{115, &#34;R_PPC64_DTPREL16_HIGHA&#34;},
<span id="L2943" class="ln">  2943&nbsp;&nbsp;</span>	{116, &#34;R_PPC64_REL24_NOTOC&#34;},
<span id="L2944" class="ln">  2944&nbsp;&nbsp;</span>	{117, &#34;R_PPC64_ADDR64_LOCAL&#34;},
<span id="L2945" class="ln">  2945&nbsp;&nbsp;</span>	{118, &#34;R_PPC64_ENTRY&#34;},
<span id="L2946" class="ln">  2946&nbsp;&nbsp;</span>	{119, &#34;R_PPC64_PLTSEQ&#34;},
<span id="L2947" class="ln">  2947&nbsp;&nbsp;</span>	{120, &#34;R_PPC64_PLTCALL&#34;},
<span id="L2948" class="ln">  2948&nbsp;&nbsp;</span>	{121, &#34;R_PPC64_PLTSEQ_NOTOC&#34;},
<span id="L2949" class="ln">  2949&nbsp;&nbsp;</span>	{122, &#34;R_PPC64_PLTCALL_NOTOC&#34;},
<span id="L2950" class="ln">  2950&nbsp;&nbsp;</span>	{123, &#34;R_PPC64_PCREL_OPT&#34;},
<span id="L2951" class="ln">  2951&nbsp;&nbsp;</span>	{124, &#34;R_PPC64_REL24_P9NOTOC&#34;},
<span id="L2952" class="ln">  2952&nbsp;&nbsp;</span>	{128, &#34;R_PPC64_D34&#34;},
<span id="L2953" class="ln">  2953&nbsp;&nbsp;</span>	{129, &#34;R_PPC64_D34_LO&#34;},
<span id="L2954" class="ln">  2954&nbsp;&nbsp;</span>	{130, &#34;R_PPC64_D34_HI30&#34;},
<span id="L2955" class="ln">  2955&nbsp;&nbsp;</span>	{131, &#34;R_PPC64_D34_HA30&#34;},
<span id="L2956" class="ln">  2956&nbsp;&nbsp;</span>	{132, &#34;R_PPC64_PCREL34&#34;},
<span id="L2957" class="ln">  2957&nbsp;&nbsp;</span>	{133, &#34;R_PPC64_GOT_PCREL34&#34;},
<span id="L2958" class="ln">  2958&nbsp;&nbsp;</span>	{134, &#34;R_PPC64_PLT_PCREL34&#34;},
<span id="L2959" class="ln">  2959&nbsp;&nbsp;</span>	{135, &#34;R_PPC64_PLT_PCREL34_NOTOC&#34;},
<span id="L2960" class="ln">  2960&nbsp;&nbsp;</span>	{136, &#34;R_PPC64_ADDR16_HIGHER34&#34;},
<span id="L2961" class="ln">  2961&nbsp;&nbsp;</span>	{137, &#34;R_PPC64_ADDR16_HIGHERA34&#34;},
<span id="L2962" class="ln">  2962&nbsp;&nbsp;</span>	{138, &#34;R_PPC64_ADDR16_HIGHEST34&#34;},
<span id="L2963" class="ln">  2963&nbsp;&nbsp;</span>	{139, &#34;R_PPC64_ADDR16_HIGHESTA34&#34;},
<span id="L2964" class="ln">  2964&nbsp;&nbsp;</span>	{140, &#34;R_PPC64_REL16_HIGHER34&#34;},
<span id="L2965" class="ln">  2965&nbsp;&nbsp;</span>	{141, &#34;R_PPC64_REL16_HIGHERA34&#34;},
<span id="L2966" class="ln">  2966&nbsp;&nbsp;</span>	{142, &#34;R_PPC64_REL16_HIGHEST34&#34;},
<span id="L2967" class="ln">  2967&nbsp;&nbsp;</span>	{143, &#34;R_PPC64_REL16_HIGHESTA34&#34;},
<span id="L2968" class="ln">  2968&nbsp;&nbsp;</span>	{144, &#34;R_PPC64_D28&#34;},
<span id="L2969" class="ln">  2969&nbsp;&nbsp;</span>	{145, &#34;R_PPC64_PCREL28&#34;},
<span id="L2970" class="ln">  2970&nbsp;&nbsp;</span>	{146, &#34;R_PPC64_TPREL34&#34;},
<span id="L2971" class="ln">  2971&nbsp;&nbsp;</span>	{147, &#34;R_PPC64_DTPREL34&#34;},
<span id="L2972" class="ln">  2972&nbsp;&nbsp;</span>	{148, &#34;R_PPC64_GOT_TLSGD_PCREL34&#34;},
<span id="L2973" class="ln">  2973&nbsp;&nbsp;</span>	{149, &#34;R_PPC64_GOT_TLSLD_PCREL34&#34;},
<span id="L2974" class="ln">  2974&nbsp;&nbsp;</span>	{150, &#34;R_PPC64_GOT_TPREL_PCREL34&#34;},
<span id="L2975" class="ln">  2975&nbsp;&nbsp;</span>	{151, &#34;R_PPC64_GOT_DTPREL_PCREL34&#34;},
<span id="L2976" class="ln">  2976&nbsp;&nbsp;</span>	{240, &#34;R_PPC64_REL16_HIGH&#34;},
<span id="L2977" class="ln">  2977&nbsp;&nbsp;</span>	{241, &#34;R_PPC64_REL16_HIGHA&#34;},
<span id="L2978" class="ln">  2978&nbsp;&nbsp;</span>	{242, &#34;R_PPC64_REL16_HIGHER&#34;},
<span id="L2979" class="ln">  2979&nbsp;&nbsp;</span>	{243, &#34;R_PPC64_REL16_HIGHERA&#34;},
<span id="L2980" class="ln">  2980&nbsp;&nbsp;</span>	{244, &#34;R_PPC64_REL16_HIGHEST&#34;},
<span id="L2981" class="ln">  2981&nbsp;&nbsp;</span>	{245, &#34;R_PPC64_REL16_HIGHESTA&#34;},
<span id="L2982" class="ln">  2982&nbsp;&nbsp;</span>	{246, &#34;R_PPC64_REL16DX_HA&#34;},
<span id="L2983" class="ln">  2983&nbsp;&nbsp;</span>	{247, &#34;R_PPC64_JMP_IREL&#34;},
<span id="L2984" class="ln">  2984&nbsp;&nbsp;</span>	{248, &#34;R_PPC64_IRELATIVE&#34;},
<span id="L2985" class="ln">  2985&nbsp;&nbsp;</span>	{249, &#34;R_PPC64_REL16&#34;},
<span id="L2986" class="ln">  2986&nbsp;&nbsp;</span>	{250, &#34;R_PPC64_REL16_LO&#34;},
<span id="L2987" class="ln">  2987&nbsp;&nbsp;</span>	{251, &#34;R_PPC64_REL16_HI&#34;},
<span id="L2988" class="ln">  2988&nbsp;&nbsp;</span>	{252, &#34;R_PPC64_REL16_HA&#34;},
<span id="L2989" class="ln">  2989&nbsp;&nbsp;</span>	{253, &#34;R_PPC64_GNU_VTINHERIT&#34;},
<span id="L2990" class="ln">  2990&nbsp;&nbsp;</span>	{254, &#34;R_PPC64_GNU_VTENTRY&#34;},
<span id="L2991" class="ln">  2991&nbsp;&nbsp;</span>}
<span id="L2992" class="ln">  2992&nbsp;&nbsp;</span>
<span id="L2993" class="ln">  2993&nbsp;&nbsp;</span>func (i R_PPC64) String() string   { return stringName(uint32(i), rppc64Strings, false) }
<span id="L2994" class="ln">  2994&nbsp;&nbsp;</span>func (i R_PPC64) GoString() string { return stringName(uint32(i), rppc64Strings, true) }
<span id="L2995" class="ln">  2995&nbsp;&nbsp;</span>
<span id="L2996" class="ln">  2996&nbsp;&nbsp;</span><span class="comment">// Relocation types for RISC-V processors.</span>
<span id="L2997" class="ln">  2997&nbsp;&nbsp;</span>type R_RISCV int
<span id="L2998" class="ln">  2998&nbsp;&nbsp;</span>
<span id="L2999" class="ln">  2999&nbsp;&nbsp;</span>const (
<span id="L3000" class="ln">  3000&nbsp;&nbsp;</span>	R_RISCV_NONE          R_RISCV = 0  <span class="comment">/* No relocation. */</span>
<span id="L3001" class="ln">  3001&nbsp;&nbsp;</span>	R_RISCV_32            R_RISCV = 1  <span class="comment">/* Add 32 bit zero extended symbol value */</span>
<span id="L3002" class="ln">  3002&nbsp;&nbsp;</span>	R_RISCV_64            R_RISCV = 2  <span class="comment">/* Add 64 bit symbol value. */</span>
<span id="L3003" class="ln">  3003&nbsp;&nbsp;</span>	R_RISCV_RELATIVE      R_RISCV = 3  <span class="comment">/* Add load address of shared object. */</span>
<span id="L3004" class="ln">  3004&nbsp;&nbsp;</span>	R_RISCV_COPY          R_RISCV = 4  <span class="comment">/* Copy data from shared object. */</span>
<span id="L3005" class="ln">  3005&nbsp;&nbsp;</span>	R_RISCV_JUMP_SLOT     R_RISCV = 5  <span class="comment">/* Set GOT entry to code address. */</span>
<span id="L3006" class="ln">  3006&nbsp;&nbsp;</span>	R_RISCV_TLS_DTPMOD32  R_RISCV = 6  <span class="comment">/* 32 bit ID of module containing symbol */</span>
<span id="L3007" class="ln">  3007&nbsp;&nbsp;</span>	R_RISCV_TLS_DTPMOD64  R_RISCV = 7  <span class="comment">/* ID of module containing symbol */</span>
<span id="L3008" class="ln">  3008&nbsp;&nbsp;</span>	R_RISCV_TLS_DTPREL32  R_RISCV = 8  <span class="comment">/* 32 bit relative offset in TLS block */</span>
<span id="L3009" class="ln">  3009&nbsp;&nbsp;</span>	R_RISCV_TLS_DTPREL64  R_RISCV = 9  <span class="comment">/* Relative offset in TLS block */</span>
<span id="L3010" class="ln">  3010&nbsp;&nbsp;</span>	R_RISCV_TLS_TPREL32   R_RISCV = 10 <span class="comment">/* 32 bit relative offset in static TLS block */</span>
<span id="L3011" class="ln">  3011&nbsp;&nbsp;</span>	R_RISCV_TLS_TPREL64   R_RISCV = 11 <span class="comment">/* Relative offset in static TLS block */</span>
<span id="L3012" class="ln">  3012&nbsp;&nbsp;</span>	R_RISCV_BRANCH        R_RISCV = 16 <span class="comment">/* PC-relative branch */</span>
<span id="L3013" class="ln">  3013&nbsp;&nbsp;</span>	R_RISCV_JAL           R_RISCV = 17 <span class="comment">/* PC-relative jump */</span>
<span id="L3014" class="ln">  3014&nbsp;&nbsp;</span>	R_RISCV_CALL          R_RISCV = 18 <span class="comment">/* PC-relative call */</span>
<span id="L3015" class="ln">  3015&nbsp;&nbsp;</span>	R_RISCV_CALL_PLT      R_RISCV = 19 <span class="comment">/* PC-relative call (PLT) */</span>
<span id="L3016" class="ln">  3016&nbsp;&nbsp;</span>	R_RISCV_GOT_HI20      R_RISCV = 20 <span class="comment">/* PC-relative GOT reference */</span>
<span id="L3017" class="ln">  3017&nbsp;&nbsp;</span>	R_RISCV_TLS_GOT_HI20  R_RISCV = 21 <span class="comment">/* PC-relative TLS IE GOT offset */</span>
<span id="L3018" class="ln">  3018&nbsp;&nbsp;</span>	R_RISCV_TLS_GD_HI20   R_RISCV = 22 <span class="comment">/* PC-relative TLS GD reference */</span>
<span id="L3019" class="ln">  3019&nbsp;&nbsp;</span>	R_RISCV_PCREL_HI20    R_RISCV = 23 <span class="comment">/* PC-relative reference */</span>
<span id="L3020" class="ln">  3020&nbsp;&nbsp;</span>	R_RISCV_PCREL_LO12_I  R_RISCV = 24 <span class="comment">/* PC-relative reference */</span>
<span id="L3021" class="ln">  3021&nbsp;&nbsp;</span>	R_RISCV_PCREL_LO12_S  R_RISCV = 25 <span class="comment">/* PC-relative reference */</span>
<span id="L3022" class="ln">  3022&nbsp;&nbsp;</span>	R_RISCV_HI20          R_RISCV = 26 <span class="comment">/* Absolute address */</span>
<span id="L3023" class="ln">  3023&nbsp;&nbsp;</span>	R_RISCV_LO12_I        R_RISCV = 27 <span class="comment">/* Absolute address */</span>
<span id="L3024" class="ln">  3024&nbsp;&nbsp;</span>	R_RISCV_LO12_S        R_RISCV = 28 <span class="comment">/* Absolute address */</span>
<span id="L3025" class="ln">  3025&nbsp;&nbsp;</span>	R_RISCV_TPREL_HI20    R_RISCV = 29 <span class="comment">/* TLS LE thread offset */</span>
<span id="L3026" class="ln">  3026&nbsp;&nbsp;</span>	R_RISCV_TPREL_LO12_I  R_RISCV = 30 <span class="comment">/* TLS LE thread offset */</span>
<span id="L3027" class="ln">  3027&nbsp;&nbsp;</span>	R_RISCV_TPREL_LO12_S  R_RISCV = 31 <span class="comment">/* TLS LE thread offset */</span>
<span id="L3028" class="ln">  3028&nbsp;&nbsp;</span>	R_RISCV_TPREL_ADD     R_RISCV = 32 <span class="comment">/* TLS LE thread usage */</span>
<span id="L3029" class="ln">  3029&nbsp;&nbsp;</span>	R_RISCV_ADD8          R_RISCV = 33 <span class="comment">/* 8-bit label addition */</span>
<span id="L3030" class="ln">  3030&nbsp;&nbsp;</span>	R_RISCV_ADD16         R_RISCV = 34 <span class="comment">/* 16-bit label addition */</span>
<span id="L3031" class="ln">  3031&nbsp;&nbsp;</span>	R_RISCV_ADD32         R_RISCV = 35 <span class="comment">/* 32-bit label addition */</span>
<span id="L3032" class="ln">  3032&nbsp;&nbsp;</span>	R_RISCV_ADD64         R_RISCV = 36 <span class="comment">/* 64-bit label addition */</span>
<span id="L3033" class="ln">  3033&nbsp;&nbsp;</span>	R_RISCV_SUB8          R_RISCV = 37 <span class="comment">/* 8-bit label subtraction */</span>
<span id="L3034" class="ln">  3034&nbsp;&nbsp;</span>	R_RISCV_SUB16         R_RISCV = 38 <span class="comment">/* 16-bit label subtraction */</span>
<span id="L3035" class="ln">  3035&nbsp;&nbsp;</span>	R_RISCV_SUB32         R_RISCV = 39 <span class="comment">/* 32-bit label subtraction */</span>
<span id="L3036" class="ln">  3036&nbsp;&nbsp;</span>	R_RISCV_SUB64         R_RISCV = 40 <span class="comment">/* 64-bit label subtraction */</span>
<span id="L3037" class="ln">  3037&nbsp;&nbsp;</span>	R_RISCV_GNU_VTINHERIT R_RISCV = 41 <span class="comment">/* GNU C++ vtable hierarchy */</span>
<span id="L3038" class="ln">  3038&nbsp;&nbsp;</span>	R_RISCV_GNU_VTENTRY   R_RISCV = 42 <span class="comment">/* GNU C++ vtable member usage */</span>
<span id="L3039" class="ln">  3039&nbsp;&nbsp;</span>	R_RISCV_ALIGN         R_RISCV = 43 <span class="comment">/* Alignment statement */</span>
<span id="L3040" class="ln">  3040&nbsp;&nbsp;</span>	R_RISCV_RVC_BRANCH    R_RISCV = 44 <span class="comment">/* PC-relative branch offset */</span>
<span id="L3041" class="ln">  3041&nbsp;&nbsp;</span>	R_RISCV_RVC_JUMP      R_RISCV = 45 <span class="comment">/* PC-relative jump offset */</span>
<span id="L3042" class="ln">  3042&nbsp;&nbsp;</span>	R_RISCV_RVC_LUI       R_RISCV = 46 <span class="comment">/* Absolute address */</span>
<span id="L3043" class="ln">  3043&nbsp;&nbsp;</span>	R_RISCV_GPREL_I       R_RISCV = 47 <span class="comment">/* GP-relative reference */</span>
<span id="L3044" class="ln">  3044&nbsp;&nbsp;</span>	R_RISCV_GPREL_S       R_RISCV = 48 <span class="comment">/* GP-relative reference */</span>
<span id="L3045" class="ln">  3045&nbsp;&nbsp;</span>	R_RISCV_TPREL_I       R_RISCV = 49 <span class="comment">/* TP-relative TLS LE load */</span>
<span id="L3046" class="ln">  3046&nbsp;&nbsp;</span>	R_RISCV_TPREL_S       R_RISCV = 50 <span class="comment">/* TP-relative TLS LE store */</span>
<span id="L3047" class="ln">  3047&nbsp;&nbsp;</span>	R_RISCV_RELAX         R_RISCV = 51 <span class="comment">/* Instruction pair can be relaxed */</span>
<span id="L3048" class="ln">  3048&nbsp;&nbsp;</span>	R_RISCV_SUB6          R_RISCV = 52 <span class="comment">/* Local label subtraction */</span>
<span id="L3049" class="ln">  3049&nbsp;&nbsp;</span>	R_RISCV_SET6          R_RISCV = 53 <span class="comment">/* Local label subtraction */</span>
<span id="L3050" class="ln">  3050&nbsp;&nbsp;</span>	R_RISCV_SET8          R_RISCV = 54 <span class="comment">/* Local label subtraction */</span>
<span id="L3051" class="ln">  3051&nbsp;&nbsp;</span>	R_RISCV_SET16         R_RISCV = 55 <span class="comment">/* Local label subtraction */</span>
<span id="L3052" class="ln">  3052&nbsp;&nbsp;</span>	R_RISCV_SET32         R_RISCV = 56 <span class="comment">/* Local label subtraction */</span>
<span id="L3053" class="ln">  3053&nbsp;&nbsp;</span>	R_RISCV_32_PCREL      R_RISCV = 57 <span class="comment">/* 32-bit PC relative */</span>
<span id="L3054" class="ln">  3054&nbsp;&nbsp;</span>)
<span id="L3055" class="ln">  3055&nbsp;&nbsp;</span>
<span id="L3056" class="ln">  3056&nbsp;&nbsp;</span>var rriscvStrings = []intName{
<span id="L3057" class="ln">  3057&nbsp;&nbsp;</span>	{0, &#34;R_RISCV_NONE&#34;},
<span id="L3058" class="ln">  3058&nbsp;&nbsp;</span>	{1, &#34;R_RISCV_32&#34;},
<span id="L3059" class="ln">  3059&nbsp;&nbsp;</span>	{2, &#34;R_RISCV_64&#34;},
<span id="L3060" class="ln">  3060&nbsp;&nbsp;</span>	{3, &#34;R_RISCV_RELATIVE&#34;},
<span id="L3061" class="ln">  3061&nbsp;&nbsp;</span>	{4, &#34;R_RISCV_COPY&#34;},
<span id="L3062" class="ln">  3062&nbsp;&nbsp;</span>	{5, &#34;R_RISCV_JUMP_SLOT&#34;},
<span id="L3063" class="ln">  3063&nbsp;&nbsp;</span>	{6, &#34;R_RISCV_TLS_DTPMOD32&#34;},
<span id="L3064" class="ln">  3064&nbsp;&nbsp;</span>	{7, &#34;R_RISCV_TLS_DTPMOD64&#34;},
<span id="L3065" class="ln">  3065&nbsp;&nbsp;</span>	{8, &#34;R_RISCV_TLS_DTPREL32&#34;},
<span id="L3066" class="ln">  3066&nbsp;&nbsp;</span>	{9, &#34;R_RISCV_TLS_DTPREL64&#34;},
<span id="L3067" class="ln">  3067&nbsp;&nbsp;</span>	{10, &#34;R_RISCV_TLS_TPREL32&#34;},
<span id="L3068" class="ln">  3068&nbsp;&nbsp;</span>	{11, &#34;R_RISCV_TLS_TPREL64&#34;},
<span id="L3069" class="ln">  3069&nbsp;&nbsp;</span>	{16, &#34;R_RISCV_BRANCH&#34;},
<span id="L3070" class="ln">  3070&nbsp;&nbsp;</span>	{17, &#34;R_RISCV_JAL&#34;},
<span id="L3071" class="ln">  3071&nbsp;&nbsp;</span>	{18, &#34;R_RISCV_CALL&#34;},
<span id="L3072" class="ln">  3072&nbsp;&nbsp;</span>	{19, &#34;R_RISCV_CALL_PLT&#34;},
<span id="L3073" class="ln">  3073&nbsp;&nbsp;</span>	{20, &#34;R_RISCV_GOT_HI20&#34;},
<span id="L3074" class="ln">  3074&nbsp;&nbsp;</span>	{21, &#34;R_RISCV_TLS_GOT_HI20&#34;},
<span id="L3075" class="ln">  3075&nbsp;&nbsp;</span>	{22, &#34;R_RISCV_TLS_GD_HI20&#34;},
<span id="L3076" class="ln">  3076&nbsp;&nbsp;</span>	{23, &#34;R_RISCV_PCREL_HI20&#34;},
<span id="L3077" class="ln">  3077&nbsp;&nbsp;</span>	{24, &#34;R_RISCV_PCREL_LO12_I&#34;},
<span id="L3078" class="ln">  3078&nbsp;&nbsp;</span>	{25, &#34;R_RISCV_PCREL_LO12_S&#34;},
<span id="L3079" class="ln">  3079&nbsp;&nbsp;</span>	{26, &#34;R_RISCV_HI20&#34;},
<span id="L3080" class="ln">  3080&nbsp;&nbsp;</span>	{27, &#34;R_RISCV_LO12_I&#34;},
<span id="L3081" class="ln">  3081&nbsp;&nbsp;</span>	{28, &#34;R_RISCV_LO12_S&#34;},
<span id="L3082" class="ln">  3082&nbsp;&nbsp;</span>	{29, &#34;R_RISCV_TPREL_HI20&#34;},
<span id="L3083" class="ln">  3083&nbsp;&nbsp;</span>	{30, &#34;R_RISCV_TPREL_LO12_I&#34;},
<span id="L3084" class="ln">  3084&nbsp;&nbsp;</span>	{31, &#34;R_RISCV_TPREL_LO12_S&#34;},
<span id="L3085" class="ln">  3085&nbsp;&nbsp;</span>	{32, &#34;R_RISCV_TPREL_ADD&#34;},
<span id="L3086" class="ln">  3086&nbsp;&nbsp;</span>	{33, &#34;R_RISCV_ADD8&#34;},
<span id="L3087" class="ln">  3087&nbsp;&nbsp;</span>	{34, &#34;R_RISCV_ADD16&#34;},
<span id="L3088" class="ln">  3088&nbsp;&nbsp;</span>	{35, &#34;R_RISCV_ADD32&#34;},
<span id="L3089" class="ln">  3089&nbsp;&nbsp;</span>	{36, &#34;R_RISCV_ADD64&#34;},
<span id="L3090" class="ln">  3090&nbsp;&nbsp;</span>	{37, &#34;R_RISCV_SUB8&#34;},
<span id="L3091" class="ln">  3091&nbsp;&nbsp;</span>	{38, &#34;R_RISCV_SUB16&#34;},
<span id="L3092" class="ln">  3092&nbsp;&nbsp;</span>	{39, &#34;R_RISCV_SUB32&#34;},
<span id="L3093" class="ln">  3093&nbsp;&nbsp;</span>	{40, &#34;R_RISCV_SUB64&#34;},
<span id="L3094" class="ln">  3094&nbsp;&nbsp;</span>	{41, &#34;R_RISCV_GNU_VTINHERIT&#34;},
<span id="L3095" class="ln">  3095&nbsp;&nbsp;</span>	{42, &#34;R_RISCV_GNU_VTENTRY&#34;},
<span id="L3096" class="ln">  3096&nbsp;&nbsp;</span>	{43, &#34;R_RISCV_ALIGN&#34;},
<span id="L3097" class="ln">  3097&nbsp;&nbsp;</span>	{44, &#34;R_RISCV_RVC_BRANCH&#34;},
<span id="L3098" class="ln">  3098&nbsp;&nbsp;</span>	{45, &#34;R_RISCV_RVC_JUMP&#34;},
<span id="L3099" class="ln">  3099&nbsp;&nbsp;</span>	{46, &#34;R_RISCV_RVC_LUI&#34;},
<span id="L3100" class="ln">  3100&nbsp;&nbsp;</span>	{47, &#34;R_RISCV_GPREL_I&#34;},
<span id="L3101" class="ln">  3101&nbsp;&nbsp;</span>	{48, &#34;R_RISCV_GPREL_S&#34;},
<span id="L3102" class="ln">  3102&nbsp;&nbsp;</span>	{49, &#34;R_RISCV_TPREL_I&#34;},
<span id="L3103" class="ln">  3103&nbsp;&nbsp;</span>	{50, &#34;R_RISCV_TPREL_S&#34;},
<span id="L3104" class="ln">  3104&nbsp;&nbsp;</span>	{51, &#34;R_RISCV_RELAX&#34;},
<span id="L3105" class="ln">  3105&nbsp;&nbsp;</span>	{52, &#34;R_RISCV_SUB6&#34;},
<span id="L3106" class="ln">  3106&nbsp;&nbsp;</span>	{53, &#34;R_RISCV_SET6&#34;},
<span id="L3107" class="ln">  3107&nbsp;&nbsp;</span>	{54, &#34;R_RISCV_SET8&#34;},
<span id="L3108" class="ln">  3108&nbsp;&nbsp;</span>	{55, &#34;R_RISCV_SET16&#34;},
<span id="L3109" class="ln">  3109&nbsp;&nbsp;</span>	{56, &#34;R_RISCV_SET32&#34;},
<span id="L3110" class="ln">  3110&nbsp;&nbsp;</span>	{57, &#34;R_RISCV_32_PCREL&#34;},
<span id="L3111" class="ln">  3111&nbsp;&nbsp;</span>}
<span id="L3112" class="ln">  3112&nbsp;&nbsp;</span>
<span id="L3113" class="ln">  3113&nbsp;&nbsp;</span>func (i R_RISCV) String() string   { return stringName(uint32(i), rriscvStrings, false) }
<span id="L3114" class="ln">  3114&nbsp;&nbsp;</span>func (i R_RISCV) GoString() string { return stringName(uint32(i), rriscvStrings, true) }
<span id="L3115" class="ln">  3115&nbsp;&nbsp;</span>
<span id="L3116" class="ln">  3116&nbsp;&nbsp;</span><span class="comment">// Relocation types for s390x processors.</span>
<span id="L3117" class="ln">  3117&nbsp;&nbsp;</span>type R_390 int
<span id="L3118" class="ln">  3118&nbsp;&nbsp;</span>
<span id="L3119" class="ln">  3119&nbsp;&nbsp;</span>const (
<span id="L3120" class="ln">  3120&nbsp;&nbsp;</span>	R_390_NONE        R_390 = 0
<span id="L3121" class="ln">  3121&nbsp;&nbsp;</span>	R_390_8           R_390 = 1
<span id="L3122" class="ln">  3122&nbsp;&nbsp;</span>	R_390_12          R_390 = 2
<span id="L3123" class="ln">  3123&nbsp;&nbsp;</span>	R_390_16          R_390 = 3
<span id="L3124" class="ln">  3124&nbsp;&nbsp;</span>	R_390_32          R_390 = 4
<span id="L3125" class="ln">  3125&nbsp;&nbsp;</span>	R_390_PC32        R_390 = 5
<span id="L3126" class="ln">  3126&nbsp;&nbsp;</span>	R_390_GOT12       R_390 = 6
<span id="L3127" class="ln">  3127&nbsp;&nbsp;</span>	R_390_GOT32       R_390 = 7
<span id="L3128" class="ln">  3128&nbsp;&nbsp;</span>	R_390_PLT32       R_390 = 8
<span id="L3129" class="ln">  3129&nbsp;&nbsp;</span>	R_390_COPY        R_390 = 9
<span id="L3130" class="ln">  3130&nbsp;&nbsp;</span>	R_390_GLOB_DAT    R_390 = 10
<span id="L3131" class="ln">  3131&nbsp;&nbsp;</span>	R_390_JMP_SLOT    R_390 = 11
<span id="L3132" class="ln">  3132&nbsp;&nbsp;</span>	R_390_RELATIVE    R_390 = 12
<span id="L3133" class="ln">  3133&nbsp;&nbsp;</span>	R_390_GOTOFF      R_390 = 13
<span id="L3134" class="ln">  3134&nbsp;&nbsp;</span>	R_390_GOTPC       R_390 = 14
<span id="L3135" class="ln">  3135&nbsp;&nbsp;</span>	R_390_GOT16       R_390 = 15
<span id="L3136" class="ln">  3136&nbsp;&nbsp;</span>	R_390_PC16        R_390 = 16
<span id="L3137" class="ln">  3137&nbsp;&nbsp;</span>	R_390_PC16DBL     R_390 = 17
<span id="L3138" class="ln">  3138&nbsp;&nbsp;</span>	R_390_PLT16DBL    R_390 = 18
<span id="L3139" class="ln">  3139&nbsp;&nbsp;</span>	R_390_PC32DBL     R_390 = 19
<span id="L3140" class="ln">  3140&nbsp;&nbsp;</span>	R_390_PLT32DBL    R_390 = 20
<span id="L3141" class="ln">  3141&nbsp;&nbsp;</span>	R_390_GOTPCDBL    R_390 = 21
<span id="L3142" class="ln">  3142&nbsp;&nbsp;</span>	R_390_64          R_390 = 22
<span id="L3143" class="ln">  3143&nbsp;&nbsp;</span>	R_390_PC64        R_390 = 23
<span id="L3144" class="ln">  3144&nbsp;&nbsp;</span>	R_390_GOT64       R_390 = 24
<span id="L3145" class="ln">  3145&nbsp;&nbsp;</span>	R_390_PLT64       R_390 = 25
<span id="L3146" class="ln">  3146&nbsp;&nbsp;</span>	R_390_GOTENT      R_390 = 26
<span id="L3147" class="ln">  3147&nbsp;&nbsp;</span>	R_390_GOTOFF16    R_390 = 27
<span id="L3148" class="ln">  3148&nbsp;&nbsp;</span>	R_390_GOTOFF64    R_390 = 28
<span id="L3149" class="ln">  3149&nbsp;&nbsp;</span>	R_390_GOTPLT12    R_390 = 29
<span id="L3150" class="ln">  3150&nbsp;&nbsp;</span>	R_390_GOTPLT16    R_390 = 30
<span id="L3151" class="ln">  3151&nbsp;&nbsp;</span>	R_390_GOTPLT32    R_390 = 31
<span id="L3152" class="ln">  3152&nbsp;&nbsp;</span>	R_390_GOTPLT64    R_390 = 32
<span id="L3153" class="ln">  3153&nbsp;&nbsp;</span>	R_390_GOTPLTENT   R_390 = 33
<span id="L3154" class="ln">  3154&nbsp;&nbsp;</span>	R_390_GOTPLTOFF16 R_390 = 34
<span id="L3155" class="ln">  3155&nbsp;&nbsp;</span>	R_390_GOTPLTOFF32 R_390 = 35
<span id="L3156" class="ln">  3156&nbsp;&nbsp;</span>	R_390_GOTPLTOFF64 R_390 = 36
<span id="L3157" class="ln">  3157&nbsp;&nbsp;</span>	R_390_TLS_LOAD    R_390 = 37
<span id="L3158" class="ln">  3158&nbsp;&nbsp;</span>	R_390_TLS_GDCALL  R_390 = 38
<span id="L3159" class="ln">  3159&nbsp;&nbsp;</span>	R_390_TLS_LDCALL  R_390 = 39
<span id="L3160" class="ln">  3160&nbsp;&nbsp;</span>	R_390_TLS_GD32    R_390 = 40
<span id="L3161" class="ln">  3161&nbsp;&nbsp;</span>	R_390_TLS_GD64    R_390 = 41
<span id="L3162" class="ln">  3162&nbsp;&nbsp;</span>	R_390_TLS_GOTIE12 R_390 = 42
<span id="L3163" class="ln">  3163&nbsp;&nbsp;</span>	R_390_TLS_GOTIE32 R_390 = 43
<span id="L3164" class="ln">  3164&nbsp;&nbsp;</span>	R_390_TLS_GOTIE64 R_390 = 44
<span id="L3165" class="ln">  3165&nbsp;&nbsp;</span>	R_390_TLS_LDM32   R_390 = 45
<span id="L3166" class="ln">  3166&nbsp;&nbsp;</span>	R_390_TLS_LDM64   R_390 = 46
<span id="L3167" class="ln">  3167&nbsp;&nbsp;</span>	R_390_TLS_IE32    R_390 = 47
<span id="L3168" class="ln">  3168&nbsp;&nbsp;</span>	R_390_TLS_IE64    R_390 = 48
<span id="L3169" class="ln">  3169&nbsp;&nbsp;</span>	R_390_TLS_IEENT   R_390 = 49
<span id="L3170" class="ln">  3170&nbsp;&nbsp;</span>	R_390_TLS_LE32    R_390 = 50
<span id="L3171" class="ln">  3171&nbsp;&nbsp;</span>	R_390_TLS_LE64    R_390 = 51
<span id="L3172" class="ln">  3172&nbsp;&nbsp;</span>	R_390_TLS_LDO32   R_390 = 52
<span id="L3173" class="ln">  3173&nbsp;&nbsp;</span>	R_390_TLS_LDO64   R_390 = 53
<span id="L3174" class="ln">  3174&nbsp;&nbsp;</span>	R_390_TLS_DTPMOD  R_390 = 54
<span id="L3175" class="ln">  3175&nbsp;&nbsp;</span>	R_390_TLS_DTPOFF  R_390 = 55
<span id="L3176" class="ln">  3176&nbsp;&nbsp;</span>	R_390_TLS_TPOFF   R_390 = 56
<span id="L3177" class="ln">  3177&nbsp;&nbsp;</span>	R_390_20          R_390 = 57
<span id="L3178" class="ln">  3178&nbsp;&nbsp;</span>	R_390_GOT20       R_390 = 58
<span id="L3179" class="ln">  3179&nbsp;&nbsp;</span>	R_390_GOTPLT20    R_390 = 59
<span id="L3180" class="ln">  3180&nbsp;&nbsp;</span>	R_390_TLS_GOTIE20 R_390 = 60
<span id="L3181" class="ln">  3181&nbsp;&nbsp;</span>)
<span id="L3182" class="ln">  3182&nbsp;&nbsp;</span>
<span id="L3183" class="ln">  3183&nbsp;&nbsp;</span>var r390Strings = []intName{
<span id="L3184" class="ln">  3184&nbsp;&nbsp;</span>	{0, &#34;R_390_NONE&#34;},
<span id="L3185" class="ln">  3185&nbsp;&nbsp;</span>	{1, &#34;R_390_8&#34;},
<span id="L3186" class="ln">  3186&nbsp;&nbsp;</span>	{2, &#34;R_390_12&#34;},
<span id="L3187" class="ln">  3187&nbsp;&nbsp;</span>	{3, &#34;R_390_16&#34;},
<span id="L3188" class="ln">  3188&nbsp;&nbsp;</span>	{4, &#34;R_390_32&#34;},
<span id="L3189" class="ln">  3189&nbsp;&nbsp;</span>	{5, &#34;R_390_PC32&#34;},
<span id="L3190" class="ln">  3190&nbsp;&nbsp;</span>	{6, &#34;R_390_GOT12&#34;},
<span id="L3191" class="ln">  3191&nbsp;&nbsp;</span>	{7, &#34;R_390_GOT32&#34;},
<span id="L3192" class="ln">  3192&nbsp;&nbsp;</span>	{8, &#34;R_390_PLT32&#34;},
<span id="L3193" class="ln">  3193&nbsp;&nbsp;</span>	{9, &#34;R_390_COPY&#34;},
<span id="L3194" class="ln">  3194&nbsp;&nbsp;</span>	{10, &#34;R_390_GLOB_DAT&#34;},
<span id="L3195" class="ln">  3195&nbsp;&nbsp;</span>	{11, &#34;R_390_JMP_SLOT&#34;},
<span id="L3196" class="ln">  3196&nbsp;&nbsp;</span>	{12, &#34;R_390_RELATIVE&#34;},
<span id="L3197" class="ln">  3197&nbsp;&nbsp;</span>	{13, &#34;R_390_GOTOFF&#34;},
<span id="L3198" class="ln">  3198&nbsp;&nbsp;</span>	{14, &#34;R_390_GOTPC&#34;},
<span id="L3199" class="ln">  3199&nbsp;&nbsp;</span>	{15, &#34;R_390_GOT16&#34;},
<span id="L3200" class="ln">  3200&nbsp;&nbsp;</span>	{16, &#34;R_390_PC16&#34;},
<span id="L3201" class="ln">  3201&nbsp;&nbsp;</span>	{17, &#34;R_390_PC16DBL&#34;},
<span id="L3202" class="ln">  3202&nbsp;&nbsp;</span>	{18, &#34;R_390_PLT16DBL&#34;},
<span id="L3203" class="ln">  3203&nbsp;&nbsp;</span>	{19, &#34;R_390_PC32DBL&#34;},
<span id="L3204" class="ln">  3204&nbsp;&nbsp;</span>	{20, &#34;R_390_PLT32DBL&#34;},
<span id="L3205" class="ln">  3205&nbsp;&nbsp;</span>	{21, &#34;R_390_GOTPCDBL&#34;},
<span id="L3206" class="ln">  3206&nbsp;&nbsp;</span>	{22, &#34;R_390_64&#34;},
<span id="L3207" class="ln">  3207&nbsp;&nbsp;</span>	{23, &#34;R_390_PC64&#34;},
<span id="L3208" class="ln">  3208&nbsp;&nbsp;</span>	{24, &#34;R_390_GOT64&#34;},
<span id="L3209" class="ln">  3209&nbsp;&nbsp;</span>	{25, &#34;R_390_PLT64&#34;},
<span id="L3210" class="ln">  3210&nbsp;&nbsp;</span>	{26, &#34;R_390_GOTENT&#34;},
<span id="L3211" class="ln">  3211&nbsp;&nbsp;</span>	{27, &#34;R_390_GOTOFF16&#34;},
<span id="L3212" class="ln">  3212&nbsp;&nbsp;</span>	{28, &#34;R_390_GOTOFF64&#34;},
<span id="L3213" class="ln">  3213&nbsp;&nbsp;</span>	{29, &#34;R_390_GOTPLT12&#34;},
<span id="L3214" class="ln">  3214&nbsp;&nbsp;</span>	{30, &#34;R_390_GOTPLT16&#34;},
<span id="L3215" class="ln">  3215&nbsp;&nbsp;</span>	{31, &#34;R_390_GOTPLT32&#34;},
<span id="L3216" class="ln">  3216&nbsp;&nbsp;</span>	{32, &#34;R_390_GOTPLT64&#34;},
<span id="L3217" class="ln">  3217&nbsp;&nbsp;</span>	{33, &#34;R_390_GOTPLTENT&#34;},
<span id="L3218" class="ln">  3218&nbsp;&nbsp;</span>	{34, &#34;R_390_GOTPLTOFF16&#34;},
<span id="L3219" class="ln">  3219&nbsp;&nbsp;</span>	{35, &#34;R_390_GOTPLTOFF32&#34;},
<span id="L3220" class="ln">  3220&nbsp;&nbsp;</span>	{36, &#34;R_390_GOTPLTOFF64&#34;},
<span id="L3221" class="ln">  3221&nbsp;&nbsp;</span>	{37, &#34;R_390_TLS_LOAD&#34;},
<span id="L3222" class="ln">  3222&nbsp;&nbsp;</span>	{38, &#34;R_390_TLS_GDCALL&#34;},
<span id="L3223" class="ln">  3223&nbsp;&nbsp;</span>	{39, &#34;R_390_TLS_LDCALL&#34;},
<span id="L3224" class="ln">  3224&nbsp;&nbsp;</span>	{40, &#34;R_390_TLS_GD32&#34;},
<span id="L3225" class="ln">  3225&nbsp;&nbsp;</span>	{41, &#34;R_390_TLS_GD64&#34;},
<span id="L3226" class="ln">  3226&nbsp;&nbsp;</span>	{42, &#34;R_390_TLS_GOTIE12&#34;},
<span id="L3227" class="ln">  3227&nbsp;&nbsp;</span>	{43, &#34;R_390_TLS_GOTIE32&#34;},
<span id="L3228" class="ln">  3228&nbsp;&nbsp;</span>	{44, &#34;R_390_TLS_GOTIE64&#34;},
<span id="L3229" class="ln">  3229&nbsp;&nbsp;</span>	{45, &#34;R_390_TLS_LDM32&#34;},
<span id="L3230" class="ln">  3230&nbsp;&nbsp;</span>	{46, &#34;R_390_TLS_LDM64&#34;},
<span id="L3231" class="ln">  3231&nbsp;&nbsp;</span>	{47, &#34;R_390_TLS_IE32&#34;},
<span id="L3232" class="ln">  3232&nbsp;&nbsp;</span>	{48, &#34;R_390_TLS_IE64&#34;},
<span id="L3233" class="ln">  3233&nbsp;&nbsp;</span>	{49, &#34;R_390_TLS_IEENT&#34;},
<span id="L3234" class="ln">  3234&nbsp;&nbsp;</span>	{50, &#34;R_390_TLS_LE32&#34;},
<span id="L3235" class="ln">  3235&nbsp;&nbsp;</span>	{51, &#34;R_390_TLS_LE64&#34;},
<span id="L3236" class="ln">  3236&nbsp;&nbsp;</span>	{52, &#34;R_390_TLS_LDO32&#34;},
<span id="L3237" class="ln">  3237&nbsp;&nbsp;</span>	{53, &#34;R_390_TLS_LDO64&#34;},
<span id="L3238" class="ln">  3238&nbsp;&nbsp;</span>	{54, &#34;R_390_TLS_DTPMOD&#34;},
<span id="L3239" class="ln">  3239&nbsp;&nbsp;</span>	{55, &#34;R_390_TLS_DTPOFF&#34;},
<span id="L3240" class="ln">  3240&nbsp;&nbsp;</span>	{56, &#34;R_390_TLS_TPOFF&#34;},
<span id="L3241" class="ln">  3241&nbsp;&nbsp;</span>	{57, &#34;R_390_20&#34;},
<span id="L3242" class="ln">  3242&nbsp;&nbsp;</span>	{58, &#34;R_390_GOT20&#34;},
<span id="L3243" class="ln">  3243&nbsp;&nbsp;</span>	{59, &#34;R_390_GOTPLT20&#34;},
<span id="L3244" class="ln">  3244&nbsp;&nbsp;</span>	{60, &#34;R_390_TLS_GOTIE20&#34;},
<span id="L3245" class="ln">  3245&nbsp;&nbsp;</span>}
<span id="L3246" class="ln">  3246&nbsp;&nbsp;</span>
<span id="L3247" class="ln">  3247&nbsp;&nbsp;</span>func (i R_390) String() string   { return stringName(uint32(i), r390Strings, false) }
<span id="L3248" class="ln">  3248&nbsp;&nbsp;</span>func (i R_390) GoString() string { return stringName(uint32(i), r390Strings, true) }
<span id="L3249" class="ln">  3249&nbsp;&nbsp;</span>
<span id="L3250" class="ln">  3250&nbsp;&nbsp;</span><span class="comment">// Relocation types for SPARC.</span>
<span id="L3251" class="ln">  3251&nbsp;&nbsp;</span>type R_SPARC int
<span id="L3252" class="ln">  3252&nbsp;&nbsp;</span>
<span id="L3253" class="ln">  3253&nbsp;&nbsp;</span>const (
<span id="L3254" class="ln">  3254&nbsp;&nbsp;</span>	R_SPARC_NONE     R_SPARC = 0
<span id="L3255" class="ln">  3255&nbsp;&nbsp;</span>	R_SPARC_8        R_SPARC = 1
<span id="L3256" class="ln">  3256&nbsp;&nbsp;</span>	R_SPARC_16       R_SPARC = 2
<span id="L3257" class="ln">  3257&nbsp;&nbsp;</span>	R_SPARC_32       R_SPARC = 3
<span id="L3258" class="ln">  3258&nbsp;&nbsp;</span>	R_SPARC_DISP8    R_SPARC = 4
<span id="L3259" class="ln">  3259&nbsp;&nbsp;</span>	R_SPARC_DISP16   R_SPARC = 5
<span id="L3260" class="ln">  3260&nbsp;&nbsp;</span>	R_SPARC_DISP32   R_SPARC = 6
<span id="L3261" class="ln">  3261&nbsp;&nbsp;</span>	R_SPARC_WDISP30  R_SPARC = 7
<span id="L3262" class="ln">  3262&nbsp;&nbsp;</span>	R_SPARC_WDISP22  R_SPARC = 8
<span id="L3263" class="ln">  3263&nbsp;&nbsp;</span>	R_SPARC_HI22     R_SPARC = 9
<span id="L3264" class="ln">  3264&nbsp;&nbsp;</span>	R_SPARC_22       R_SPARC = 10
<span id="L3265" class="ln">  3265&nbsp;&nbsp;</span>	R_SPARC_13       R_SPARC = 11
<span id="L3266" class="ln">  3266&nbsp;&nbsp;</span>	R_SPARC_LO10     R_SPARC = 12
<span id="L3267" class="ln">  3267&nbsp;&nbsp;</span>	R_SPARC_GOT10    R_SPARC = 13
<span id="L3268" class="ln">  3268&nbsp;&nbsp;</span>	R_SPARC_GOT13    R_SPARC = 14
<span id="L3269" class="ln">  3269&nbsp;&nbsp;</span>	R_SPARC_GOT22    R_SPARC = 15
<span id="L3270" class="ln">  3270&nbsp;&nbsp;</span>	R_SPARC_PC10     R_SPARC = 16
<span id="L3271" class="ln">  3271&nbsp;&nbsp;</span>	R_SPARC_PC22     R_SPARC = 17
<span id="L3272" class="ln">  3272&nbsp;&nbsp;</span>	R_SPARC_WPLT30   R_SPARC = 18
<span id="L3273" class="ln">  3273&nbsp;&nbsp;</span>	R_SPARC_COPY     R_SPARC = 19
<span id="L3274" class="ln">  3274&nbsp;&nbsp;</span>	R_SPARC_GLOB_DAT R_SPARC = 20
<span id="L3275" class="ln">  3275&nbsp;&nbsp;</span>	R_SPARC_JMP_SLOT R_SPARC = 21
<span id="L3276" class="ln">  3276&nbsp;&nbsp;</span>	R_SPARC_RELATIVE R_SPARC = 22
<span id="L3277" class="ln">  3277&nbsp;&nbsp;</span>	R_SPARC_UA32     R_SPARC = 23
<span id="L3278" class="ln">  3278&nbsp;&nbsp;</span>	R_SPARC_PLT32    R_SPARC = 24
<span id="L3279" class="ln">  3279&nbsp;&nbsp;</span>	R_SPARC_HIPLT22  R_SPARC = 25
<span id="L3280" class="ln">  3280&nbsp;&nbsp;</span>	R_SPARC_LOPLT10  R_SPARC = 26
<span id="L3281" class="ln">  3281&nbsp;&nbsp;</span>	R_SPARC_PCPLT32  R_SPARC = 27
<span id="L3282" class="ln">  3282&nbsp;&nbsp;</span>	R_SPARC_PCPLT22  R_SPARC = 28
<span id="L3283" class="ln">  3283&nbsp;&nbsp;</span>	R_SPARC_PCPLT10  R_SPARC = 29
<span id="L3284" class="ln">  3284&nbsp;&nbsp;</span>	R_SPARC_10       R_SPARC = 30
<span id="L3285" class="ln">  3285&nbsp;&nbsp;</span>	R_SPARC_11       R_SPARC = 31
<span id="L3286" class="ln">  3286&nbsp;&nbsp;</span>	R_SPARC_64       R_SPARC = 32
<span id="L3287" class="ln">  3287&nbsp;&nbsp;</span>	R_SPARC_OLO10    R_SPARC = 33
<span id="L3288" class="ln">  3288&nbsp;&nbsp;</span>	R_SPARC_HH22     R_SPARC = 34
<span id="L3289" class="ln">  3289&nbsp;&nbsp;</span>	R_SPARC_HM10     R_SPARC = 35
<span id="L3290" class="ln">  3290&nbsp;&nbsp;</span>	R_SPARC_LM22     R_SPARC = 36
<span id="L3291" class="ln">  3291&nbsp;&nbsp;</span>	R_SPARC_PC_HH22  R_SPARC = 37
<span id="L3292" class="ln">  3292&nbsp;&nbsp;</span>	R_SPARC_PC_HM10  R_SPARC = 38
<span id="L3293" class="ln">  3293&nbsp;&nbsp;</span>	R_SPARC_PC_LM22  R_SPARC = 39
<span id="L3294" class="ln">  3294&nbsp;&nbsp;</span>	R_SPARC_WDISP16  R_SPARC = 40
<span id="L3295" class="ln">  3295&nbsp;&nbsp;</span>	R_SPARC_WDISP19  R_SPARC = 41
<span id="L3296" class="ln">  3296&nbsp;&nbsp;</span>	R_SPARC_GLOB_JMP R_SPARC = 42
<span id="L3297" class="ln">  3297&nbsp;&nbsp;</span>	R_SPARC_7        R_SPARC = 43
<span id="L3298" class="ln">  3298&nbsp;&nbsp;</span>	R_SPARC_5        R_SPARC = 44
<span id="L3299" class="ln">  3299&nbsp;&nbsp;</span>	R_SPARC_6        R_SPARC = 45
<span id="L3300" class="ln">  3300&nbsp;&nbsp;</span>	R_SPARC_DISP64   R_SPARC = 46
<span id="L3301" class="ln">  3301&nbsp;&nbsp;</span>	R_SPARC_PLT64    R_SPARC = 47
<span id="L3302" class="ln">  3302&nbsp;&nbsp;</span>	R_SPARC_HIX22    R_SPARC = 48
<span id="L3303" class="ln">  3303&nbsp;&nbsp;</span>	R_SPARC_LOX10    R_SPARC = 49
<span id="L3304" class="ln">  3304&nbsp;&nbsp;</span>	R_SPARC_H44      R_SPARC = 50
<span id="L3305" class="ln">  3305&nbsp;&nbsp;</span>	R_SPARC_M44      R_SPARC = 51
<span id="L3306" class="ln">  3306&nbsp;&nbsp;</span>	R_SPARC_L44      R_SPARC = 52
<span id="L3307" class="ln">  3307&nbsp;&nbsp;</span>	R_SPARC_REGISTER R_SPARC = 53
<span id="L3308" class="ln">  3308&nbsp;&nbsp;</span>	R_SPARC_UA64     R_SPARC = 54
<span id="L3309" class="ln">  3309&nbsp;&nbsp;</span>	R_SPARC_UA16     R_SPARC = 55
<span id="L3310" class="ln">  3310&nbsp;&nbsp;</span>)
<span id="L3311" class="ln">  3311&nbsp;&nbsp;</span>
<span id="L3312" class="ln">  3312&nbsp;&nbsp;</span>var rsparcStrings = []intName{
<span id="L3313" class="ln">  3313&nbsp;&nbsp;</span>	{0, &#34;R_SPARC_NONE&#34;},
<span id="L3314" class="ln">  3314&nbsp;&nbsp;</span>	{1, &#34;R_SPARC_8&#34;},
<span id="L3315" class="ln">  3315&nbsp;&nbsp;</span>	{2, &#34;R_SPARC_16&#34;},
<span id="L3316" class="ln">  3316&nbsp;&nbsp;</span>	{3, &#34;R_SPARC_32&#34;},
<span id="L3317" class="ln">  3317&nbsp;&nbsp;</span>	{4, &#34;R_SPARC_DISP8&#34;},
<span id="L3318" class="ln">  3318&nbsp;&nbsp;</span>	{5, &#34;R_SPARC_DISP16&#34;},
<span id="L3319" class="ln">  3319&nbsp;&nbsp;</span>	{6, &#34;R_SPARC_DISP32&#34;},
<span id="L3320" class="ln">  3320&nbsp;&nbsp;</span>	{7, &#34;R_SPARC_WDISP30&#34;},
<span id="L3321" class="ln">  3321&nbsp;&nbsp;</span>	{8, &#34;R_SPARC_WDISP22&#34;},
<span id="L3322" class="ln">  3322&nbsp;&nbsp;</span>	{9, &#34;R_SPARC_HI22&#34;},
<span id="L3323" class="ln">  3323&nbsp;&nbsp;</span>	{10, &#34;R_SPARC_22&#34;},
<span id="L3324" class="ln">  3324&nbsp;&nbsp;</span>	{11, &#34;R_SPARC_13&#34;},
<span id="L3325" class="ln">  3325&nbsp;&nbsp;</span>	{12, &#34;R_SPARC_LO10&#34;},
<span id="L3326" class="ln">  3326&nbsp;&nbsp;</span>	{13, &#34;R_SPARC_GOT10&#34;},
<span id="L3327" class="ln">  3327&nbsp;&nbsp;</span>	{14, &#34;R_SPARC_GOT13&#34;},
<span id="L3328" class="ln">  3328&nbsp;&nbsp;</span>	{15, &#34;R_SPARC_GOT22&#34;},
<span id="L3329" class="ln">  3329&nbsp;&nbsp;</span>	{16, &#34;R_SPARC_PC10&#34;},
<span id="L3330" class="ln">  3330&nbsp;&nbsp;</span>	{17, &#34;R_SPARC_PC22&#34;},
<span id="L3331" class="ln">  3331&nbsp;&nbsp;</span>	{18, &#34;R_SPARC_WPLT30&#34;},
<span id="L3332" class="ln">  3332&nbsp;&nbsp;</span>	{19, &#34;R_SPARC_COPY&#34;},
<span id="L3333" class="ln">  3333&nbsp;&nbsp;</span>	{20, &#34;R_SPARC_GLOB_DAT&#34;},
<span id="L3334" class="ln">  3334&nbsp;&nbsp;</span>	{21, &#34;R_SPARC_JMP_SLOT&#34;},
<span id="L3335" class="ln">  3335&nbsp;&nbsp;</span>	{22, &#34;R_SPARC_RELATIVE&#34;},
<span id="L3336" class="ln">  3336&nbsp;&nbsp;</span>	{23, &#34;R_SPARC_UA32&#34;},
<span id="L3337" class="ln">  3337&nbsp;&nbsp;</span>	{24, &#34;R_SPARC_PLT32&#34;},
<span id="L3338" class="ln">  3338&nbsp;&nbsp;</span>	{25, &#34;R_SPARC_HIPLT22&#34;},
<span id="L3339" class="ln">  3339&nbsp;&nbsp;</span>	{26, &#34;R_SPARC_LOPLT10&#34;},
<span id="L3340" class="ln">  3340&nbsp;&nbsp;</span>	{27, &#34;R_SPARC_PCPLT32&#34;},
<span id="L3341" class="ln">  3341&nbsp;&nbsp;</span>	{28, &#34;R_SPARC_PCPLT22&#34;},
<span id="L3342" class="ln">  3342&nbsp;&nbsp;</span>	{29, &#34;R_SPARC_PCPLT10&#34;},
<span id="L3343" class="ln">  3343&nbsp;&nbsp;</span>	{30, &#34;R_SPARC_10&#34;},
<span id="L3344" class="ln">  3344&nbsp;&nbsp;</span>	{31, &#34;R_SPARC_11&#34;},
<span id="L3345" class="ln">  3345&nbsp;&nbsp;</span>	{32, &#34;R_SPARC_64&#34;},
<span id="L3346" class="ln">  3346&nbsp;&nbsp;</span>	{33, &#34;R_SPARC_OLO10&#34;},
<span id="L3347" class="ln">  3347&nbsp;&nbsp;</span>	{34, &#34;R_SPARC_HH22&#34;},
<span id="L3348" class="ln">  3348&nbsp;&nbsp;</span>	{35, &#34;R_SPARC_HM10&#34;},
<span id="L3349" class="ln">  3349&nbsp;&nbsp;</span>	{36, &#34;R_SPARC_LM22&#34;},
<span id="L3350" class="ln">  3350&nbsp;&nbsp;</span>	{37, &#34;R_SPARC_PC_HH22&#34;},
<span id="L3351" class="ln">  3351&nbsp;&nbsp;</span>	{38, &#34;R_SPARC_PC_HM10&#34;},
<span id="L3352" class="ln">  3352&nbsp;&nbsp;</span>	{39, &#34;R_SPARC_PC_LM22&#34;},
<span id="L3353" class="ln">  3353&nbsp;&nbsp;</span>	{40, &#34;R_SPARC_WDISP16&#34;},
<span id="L3354" class="ln">  3354&nbsp;&nbsp;</span>	{41, &#34;R_SPARC_WDISP19&#34;},
<span id="L3355" class="ln">  3355&nbsp;&nbsp;</span>	{42, &#34;R_SPARC_GLOB_JMP&#34;},
<span id="L3356" class="ln">  3356&nbsp;&nbsp;</span>	{43, &#34;R_SPARC_7&#34;},
<span id="L3357" class="ln">  3357&nbsp;&nbsp;</span>	{44, &#34;R_SPARC_5&#34;},
<span id="L3358" class="ln">  3358&nbsp;&nbsp;</span>	{45, &#34;R_SPARC_6&#34;},
<span id="L3359" class="ln">  3359&nbsp;&nbsp;</span>	{46, &#34;R_SPARC_DISP64&#34;},
<span id="L3360" class="ln">  3360&nbsp;&nbsp;</span>	{47, &#34;R_SPARC_PLT64&#34;},
<span id="L3361" class="ln">  3361&nbsp;&nbsp;</span>	{48, &#34;R_SPARC_HIX22&#34;},
<span id="L3362" class="ln">  3362&nbsp;&nbsp;</span>	{49, &#34;R_SPARC_LOX10&#34;},
<span id="L3363" class="ln">  3363&nbsp;&nbsp;</span>	{50, &#34;R_SPARC_H44&#34;},
<span id="L3364" class="ln">  3364&nbsp;&nbsp;</span>	{51, &#34;R_SPARC_M44&#34;},
<span id="L3365" class="ln">  3365&nbsp;&nbsp;</span>	{52, &#34;R_SPARC_L44&#34;},
<span id="L3366" class="ln">  3366&nbsp;&nbsp;</span>	{53, &#34;R_SPARC_REGISTER&#34;},
<span id="L3367" class="ln">  3367&nbsp;&nbsp;</span>	{54, &#34;R_SPARC_UA64&#34;},
<span id="L3368" class="ln">  3368&nbsp;&nbsp;</span>	{55, &#34;R_SPARC_UA16&#34;},
<span id="L3369" class="ln">  3369&nbsp;&nbsp;</span>}
<span id="L3370" class="ln">  3370&nbsp;&nbsp;</span>
<span id="L3371" class="ln">  3371&nbsp;&nbsp;</span>func (i R_SPARC) String() string   { return stringName(uint32(i), rsparcStrings, false) }
<span id="L3372" class="ln">  3372&nbsp;&nbsp;</span>func (i R_SPARC) GoString() string { return stringName(uint32(i), rsparcStrings, true) }
<span id="L3373" class="ln">  3373&nbsp;&nbsp;</span>
<span id="L3374" class="ln">  3374&nbsp;&nbsp;</span><span class="comment">// Magic number for the elf trampoline, chosen wisely to be an immediate value.</span>
<span id="L3375" class="ln">  3375&nbsp;&nbsp;</span>const ARM_MAGIC_TRAMP_NUMBER = 0x5c000003
<span id="L3376" class="ln">  3376&nbsp;&nbsp;</span>
<span id="L3377" class="ln">  3377&nbsp;&nbsp;</span><span class="comment">// ELF32 File header.</span>
<span id="L3378" class="ln">  3378&nbsp;&nbsp;</span>type Header32 struct {
<span id="L3379" class="ln">  3379&nbsp;&nbsp;</span>	Ident     [EI_NIDENT]byte <span class="comment">/* File identification. */</span>
<span id="L3380" class="ln">  3380&nbsp;&nbsp;</span>	Type      uint16          <span class="comment">/* File type. */</span>
<span id="L3381" class="ln">  3381&nbsp;&nbsp;</span>	Machine   uint16          <span class="comment">/* Machine architecture. */</span>
<span id="L3382" class="ln">  3382&nbsp;&nbsp;</span>	Version   uint32          <span class="comment">/* ELF format version. */</span>
<span id="L3383" class="ln">  3383&nbsp;&nbsp;</span>	Entry     uint32          <span class="comment">/* Entry point. */</span>
<span id="L3384" class="ln">  3384&nbsp;&nbsp;</span>	Phoff     uint32          <span class="comment">/* Program header file offset. */</span>
<span id="L3385" class="ln">  3385&nbsp;&nbsp;</span>	Shoff     uint32          <span class="comment">/* Section header file offset. */</span>
<span id="L3386" class="ln">  3386&nbsp;&nbsp;</span>	Flags     uint32          <span class="comment">/* Architecture-specific flags. */</span>
<span id="L3387" class="ln">  3387&nbsp;&nbsp;</span>	Ehsize    uint16          <span class="comment">/* Size of ELF header in bytes. */</span>
<span id="L3388" class="ln">  3388&nbsp;&nbsp;</span>	Phentsize uint16          <span class="comment">/* Size of program header entry. */</span>
<span id="L3389" class="ln">  3389&nbsp;&nbsp;</span>	Phnum     uint16          <span class="comment">/* Number of program header entries. */</span>
<span id="L3390" class="ln">  3390&nbsp;&nbsp;</span>	Shentsize uint16          <span class="comment">/* Size of section header entry. */</span>
<span id="L3391" class="ln">  3391&nbsp;&nbsp;</span>	Shnum     uint16          <span class="comment">/* Number of section header entries. */</span>
<span id="L3392" class="ln">  3392&nbsp;&nbsp;</span>	Shstrndx  uint16          <span class="comment">/* Section name strings section. */</span>
<span id="L3393" class="ln">  3393&nbsp;&nbsp;</span>}
<span id="L3394" class="ln">  3394&nbsp;&nbsp;</span>
<span id="L3395" class="ln">  3395&nbsp;&nbsp;</span><span class="comment">// ELF32 Section header.</span>
<span id="L3396" class="ln">  3396&nbsp;&nbsp;</span>type Section32 struct {
<span id="L3397" class="ln">  3397&nbsp;&nbsp;</span>	Name      uint32 <span class="comment">/* Section name (index into the section header string table). */</span>
<span id="L3398" class="ln">  3398&nbsp;&nbsp;</span>	Type      uint32 <span class="comment">/* Section type. */</span>
<span id="L3399" class="ln">  3399&nbsp;&nbsp;</span>	Flags     uint32 <span class="comment">/* Section flags. */</span>
<span id="L3400" class="ln">  3400&nbsp;&nbsp;</span>	Addr      uint32 <span class="comment">/* Address in memory image. */</span>
<span id="L3401" class="ln">  3401&nbsp;&nbsp;</span>	Off       uint32 <span class="comment">/* Offset in file. */</span>
<span id="L3402" class="ln">  3402&nbsp;&nbsp;</span>	Size      uint32 <span class="comment">/* Size in bytes. */</span>
<span id="L3403" class="ln">  3403&nbsp;&nbsp;</span>	Link      uint32 <span class="comment">/* Index of a related section. */</span>
<span id="L3404" class="ln">  3404&nbsp;&nbsp;</span>	Info      uint32 <span class="comment">/* Depends on section type. */</span>
<span id="L3405" class="ln">  3405&nbsp;&nbsp;</span>	Addralign uint32 <span class="comment">/* Alignment in bytes. */</span>
<span id="L3406" class="ln">  3406&nbsp;&nbsp;</span>	Entsize   uint32 <span class="comment">/* Size of each entry in section. */</span>
<span id="L3407" class="ln">  3407&nbsp;&nbsp;</span>}
<span id="L3408" class="ln">  3408&nbsp;&nbsp;</span>
<span id="L3409" class="ln">  3409&nbsp;&nbsp;</span><span class="comment">// ELF32 Program header.</span>
<span id="L3410" class="ln">  3410&nbsp;&nbsp;</span>type Prog32 struct {
<span id="L3411" class="ln">  3411&nbsp;&nbsp;</span>	Type   uint32 <span class="comment">/* Entry type. */</span>
<span id="L3412" class="ln">  3412&nbsp;&nbsp;</span>	Off    uint32 <span class="comment">/* File offset of contents. */</span>
<span id="L3413" class="ln">  3413&nbsp;&nbsp;</span>	Vaddr  uint32 <span class="comment">/* Virtual address in memory image. */</span>
<span id="L3414" class="ln">  3414&nbsp;&nbsp;</span>	Paddr  uint32 <span class="comment">/* Physical address (not used). */</span>
<span id="L3415" class="ln">  3415&nbsp;&nbsp;</span>	Filesz uint32 <span class="comment">/* Size of contents in file. */</span>
<span id="L3416" class="ln">  3416&nbsp;&nbsp;</span>	Memsz  uint32 <span class="comment">/* Size of contents in memory. */</span>
<span id="L3417" class="ln">  3417&nbsp;&nbsp;</span>	Flags  uint32 <span class="comment">/* Access permission flags. */</span>
<span id="L3418" class="ln">  3418&nbsp;&nbsp;</span>	Align  uint32 <span class="comment">/* Alignment in memory and file. */</span>
<span id="L3419" class="ln">  3419&nbsp;&nbsp;</span>}
<span id="L3420" class="ln">  3420&nbsp;&nbsp;</span>
<span id="L3421" class="ln">  3421&nbsp;&nbsp;</span><span class="comment">// ELF32 Dynamic structure. The &#34;.dynamic&#34; section contains an array of them.</span>
<span id="L3422" class="ln">  3422&nbsp;&nbsp;</span>type Dyn32 struct {
<span id="L3423" class="ln">  3423&nbsp;&nbsp;</span>	Tag int32  <span class="comment">/* Entry type. */</span>
<span id="L3424" class="ln">  3424&nbsp;&nbsp;</span>	Val uint32 <span class="comment">/* Integer/Address value. */</span>
<span id="L3425" class="ln">  3425&nbsp;&nbsp;</span>}
<span id="L3426" class="ln">  3426&nbsp;&nbsp;</span>
<span id="L3427" class="ln">  3427&nbsp;&nbsp;</span><span class="comment">// ELF32 Compression header.</span>
<span id="L3428" class="ln">  3428&nbsp;&nbsp;</span>type Chdr32 struct {
<span id="L3429" class="ln">  3429&nbsp;&nbsp;</span>	Type      uint32
<span id="L3430" class="ln">  3430&nbsp;&nbsp;</span>	Size      uint32
<span id="L3431" class="ln">  3431&nbsp;&nbsp;</span>	Addralign uint32
<span id="L3432" class="ln">  3432&nbsp;&nbsp;</span>}
<span id="L3433" class="ln">  3433&nbsp;&nbsp;</span>
<span id="L3434" class="ln">  3434&nbsp;&nbsp;</span><span class="comment">/*
<span id="L3435" class="ln">  3435&nbsp;&nbsp;</span> * Relocation entries.
<span id="L3436" class="ln">  3436&nbsp;&nbsp;</span> */</span>
<span id="L3437" class="ln">  3437&nbsp;&nbsp;</span>
<span id="L3438" class="ln">  3438&nbsp;&nbsp;</span><span class="comment">// ELF32 Relocations that don&#39;t need an addend field.</span>
<span id="L3439" class="ln">  3439&nbsp;&nbsp;</span>type Rel32 struct {
<span id="L3440" class="ln">  3440&nbsp;&nbsp;</span>	Off  uint32 <span class="comment">/* Location to be relocated. */</span>
<span id="L3441" class="ln">  3441&nbsp;&nbsp;</span>	Info uint32 <span class="comment">/* Relocation type and symbol index. */</span>
<span id="L3442" class="ln">  3442&nbsp;&nbsp;</span>}
<span id="L3443" class="ln">  3443&nbsp;&nbsp;</span>
<span id="L3444" class="ln">  3444&nbsp;&nbsp;</span><span class="comment">// ELF32 Relocations that need an addend field.</span>
<span id="L3445" class="ln">  3445&nbsp;&nbsp;</span>type Rela32 struct {
<span id="L3446" class="ln">  3446&nbsp;&nbsp;</span>	Off    uint32 <span class="comment">/* Location to be relocated. */</span>
<span id="L3447" class="ln">  3447&nbsp;&nbsp;</span>	Info   uint32 <span class="comment">/* Relocation type and symbol index. */</span>
<span id="L3448" class="ln">  3448&nbsp;&nbsp;</span>	Addend int32  <span class="comment">/* Addend. */</span>
<span id="L3449" class="ln">  3449&nbsp;&nbsp;</span>}
<span id="L3450" class="ln">  3450&nbsp;&nbsp;</span>
<span id="L3451" class="ln">  3451&nbsp;&nbsp;</span>func R_SYM32(info uint32) uint32      { return info &gt;&gt; 8 }
<span id="L3452" class="ln">  3452&nbsp;&nbsp;</span>func R_TYPE32(info uint32) uint32     { return info &amp; 0xff }
<span id="L3453" class="ln">  3453&nbsp;&nbsp;</span>func R_INFO32(sym, typ uint32) uint32 { return sym&lt;&lt;8 | typ }
<span id="L3454" class="ln">  3454&nbsp;&nbsp;</span>
<span id="L3455" class="ln">  3455&nbsp;&nbsp;</span><span class="comment">// ELF32 Symbol.</span>
<span id="L3456" class="ln">  3456&nbsp;&nbsp;</span>type Sym32 struct {
<span id="L3457" class="ln">  3457&nbsp;&nbsp;</span>	Name  uint32
<span id="L3458" class="ln">  3458&nbsp;&nbsp;</span>	Value uint32
<span id="L3459" class="ln">  3459&nbsp;&nbsp;</span>	Size  uint32
<span id="L3460" class="ln">  3460&nbsp;&nbsp;</span>	Info  uint8
<span id="L3461" class="ln">  3461&nbsp;&nbsp;</span>	Other uint8
<span id="L3462" class="ln">  3462&nbsp;&nbsp;</span>	Shndx uint16
<span id="L3463" class="ln">  3463&nbsp;&nbsp;</span>}
<span id="L3464" class="ln">  3464&nbsp;&nbsp;</span>
<span id="L3465" class="ln">  3465&nbsp;&nbsp;</span>const Sym32Size = 16
<span id="L3466" class="ln">  3466&nbsp;&nbsp;</span>
<span id="L3467" class="ln">  3467&nbsp;&nbsp;</span>func ST_BIND(info uint8) SymBind { return SymBind(info &gt;&gt; 4) }
<span id="L3468" class="ln">  3468&nbsp;&nbsp;</span>func ST_TYPE(info uint8) SymType { return SymType(info &amp; 0xF) }
<span id="L3469" class="ln">  3469&nbsp;&nbsp;</span>func ST_INFO(bind SymBind, typ SymType) uint8 {
<span id="L3470" class="ln">  3470&nbsp;&nbsp;</span>	return uint8(bind)&lt;&lt;4 | uint8(typ)&amp;0xf
<span id="L3471" class="ln">  3471&nbsp;&nbsp;</span>}
<span id="L3472" class="ln">  3472&nbsp;&nbsp;</span>func ST_VISIBILITY(other uint8) SymVis { return SymVis(other &amp; 3) }
<span id="L3473" class="ln">  3473&nbsp;&nbsp;</span>
<span id="L3474" class="ln">  3474&nbsp;&nbsp;</span><span class="comment">/*
<span id="L3475" class="ln">  3475&nbsp;&nbsp;</span> * ELF64
<span id="L3476" class="ln">  3476&nbsp;&nbsp;</span> */</span>
<span id="L3477" class="ln">  3477&nbsp;&nbsp;</span>
<span id="L3478" class="ln">  3478&nbsp;&nbsp;</span><span class="comment">// ELF64 file header.</span>
<span id="L3479" class="ln">  3479&nbsp;&nbsp;</span>type Header64 struct {
<span id="L3480" class="ln">  3480&nbsp;&nbsp;</span>	Ident     [EI_NIDENT]byte <span class="comment">/* File identification. */</span>
<span id="L3481" class="ln">  3481&nbsp;&nbsp;</span>	Type      uint16          <span class="comment">/* File type. */</span>
<span id="L3482" class="ln">  3482&nbsp;&nbsp;</span>	Machine   uint16          <span class="comment">/* Machine architecture. */</span>
<span id="L3483" class="ln">  3483&nbsp;&nbsp;</span>	Version   uint32          <span class="comment">/* ELF format version. */</span>
<span id="L3484" class="ln">  3484&nbsp;&nbsp;</span>	Entry     uint64          <span class="comment">/* Entry point. */</span>
<span id="L3485" class="ln">  3485&nbsp;&nbsp;</span>	Phoff     uint64          <span class="comment">/* Program header file offset. */</span>
<span id="L3486" class="ln">  3486&nbsp;&nbsp;</span>	Shoff     uint64          <span class="comment">/* Section header file offset. */</span>
<span id="L3487" class="ln">  3487&nbsp;&nbsp;</span>	Flags     uint32          <span class="comment">/* Architecture-specific flags. */</span>
<span id="L3488" class="ln">  3488&nbsp;&nbsp;</span>	Ehsize    uint16          <span class="comment">/* Size of ELF header in bytes. */</span>
<span id="L3489" class="ln">  3489&nbsp;&nbsp;</span>	Phentsize uint16          <span class="comment">/* Size of program header entry. */</span>
<span id="L3490" class="ln">  3490&nbsp;&nbsp;</span>	Phnum     uint16          <span class="comment">/* Number of program header entries. */</span>
<span id="L3491" class="ln">  3491&nbsp;&nbsp;</span>	Shentsize uint16          <span class="comment">/* Size of section header entry. */</span>
<span id="L3492" class="ln">  3492&nbsp;&nbsp;</span>	Shnum     uint16          <span class="comment">/* Number of section header entries. */</span>
<span id="L3493" class="ln">  3493&nbsp;&nbsp;</span>	Shstrndx  uint16          <span class="comment">/* Section name strings section. */</span>
<span id="L3494" class="ln">  3494&nbsp;&nbsp;</span>}
<span id="L3495" class="ln">  3495&nbsp;&nbsp;</span>
<span id="L3496" class="ln">  3496&nbsp;&nbsp;</span><span class="comment">// ELF64 Section header.</span>
<span id="L3497" class="ln">  3497&nbsp;&nbsp;</span>type Section64 struct {
<span id="L3498" class="ln">  3498&nbsp;&nbsp;</span>	Name      uint32 <span class="comment">/* Section name (index into the section header string table). */</span>
<span id="L3499" class="ln">  3499&nbsp;&nbsp;</span>	Type      uint32 <span class="comment">/* Section type. */</span>
<span id="L3500" class="ln">  3500&nbsp;&nbsp;</span>	Flags     uint64 <span class="comment">/* Section flags. */</span>
<span id="L3501" class="ln">  3501&nbsp;&nbsp;</span>	Addr      uint64 <span class="comment">/* Address in memory image. */</span>
<span id="L3502" class="ln">  3502&nbsp;&nbsp;</span>	Off       uint64 <span class="comment">/* Offset in file. */</span>
<span id="L3503" class="ln">  3503&nbsp;&nbsp;</span>	Size      uint64 <span class="comment">/* Size in bytes. */</span>
<span id="L3504" class="ln">  3504&nbsp;&nbsp;</span>	Link      uint32 <span class="comment">/* Index of a related section. */</span>
<span id="L3505" class="ln">  3505&nbsp;&nbsp;</span>	Info      uint32 <span class="comment">/* Depends on section type. */</span>
<span id="L3506" class="ln">  3506&nbsp;&nbsp;</span>	Addralign uint64 <span class="comment">/* Alignment in bytes. */</span>
<span id="L3507" class="ln">  3507&nbsp;&nbsp;</span>	Entsize   uint64 <span class="comment">/* Size of each entry in section. */</span>
<span id="L3508" class="ln">  3508&nbsp;&nbsp;</span>}
<span id="L3509" class="ln">  3509&nbsp;&nbsp;</span>
<span id="L3510" class="ln">  3510&nbsp;&nbsp;</span><span class="comment">// ELF64 Program header.</span>
<span id="L3511" class="ln">  3511&nbsp;&nbsp;</span>type Prog64 struct {
<span id="L3512" class="ln">  3512&nbsp;&nbsp;</span>	Type   uint32 <span class="comment">/* Entry type. */</span>
<span id="L3513" class="ln">  3513&nbsp;&nbsp;</span>	Flags  uint32 <span class="comment">/* Access permission flags. */</span>
<span id="L3514" class="ln">  3514&nbsp;&nbsp;</span>	Off    uint64 <span class="comment">/* File offset of contents. */</span>
<span id="L3515" class="ln">  3515&nbsp;&nbsp;</span>	Vaddr  uint64 <span class="comment">/* Virtual address in memory image. */</span>
<span id="L3516" class="ln">  3516&nbsp;&nbsp;</span>	Paddr  uint64 <span class="comment">/* Physical address (not used). */</span>
<span id="L3517" class="ln">  3517&nbsp;&nbsp;</span>	Filesz uint64 <span class="comment">/* Size of contents in file. */</span>
<span id="L3518" class="ln">  3518&nbsp;&nbsp;</span>	Memsz  uint64 <span class="comment">/* Size of contents in memory. */</span>
<span id="L3519" class="ln">  3519&nbsp;&nbsp;</span>	Align  uint64 <span class="comment">/* Alignment in memory and file. */</span>
<span id="L3520" class="ln">  3520&nbsp;&nbsp;</span>}
<span id="L3521" class="ln">  3521&nbsp;&nbsp;</span>
<span id="L3522" class="ln">  3522&nbsp;&nbsp;</span><span class="comment">// ELF64 Dynamic structure. The &#34;.dynamic&#34; section contains an array of them.</span>
<span id="L3523" class="ln">  3523&nbsp;&nbsp;</span>type Dyn64 struct {
<span id="L3524" class="ln">  3524&nbsp;&nbsp;</span>	Tag int64  <span class="comment">/* Entry type. */</span>
<span id="L3525" class="ln">  3525&nbsp;&nbsp;</span>	Val uint64 <span class="comment">/* Integer/address value */</span>
<span id="L3526" class="ln">  3526&nbsp;&nbsp;</span>}
<span id="L3527" class="ln">  3527&nbsp;&nbsp;</span>
<span id="L3528" class="ln">  3528&nbsp;&nbsp;</span><span class="comment">// ELF64 Compression header.</span>
<span id="L3529" class="ln">  3529&nbsp;&nbsp;</span>type Chdr64 struct {
<span id="L3530" class="ln">  3530&nbsp;&nbsp;</span>	Type      uint32
<span id="L3531" class="ln">  3531&nbsp;&nbsp;</span>	_         uint32 <span class="comment">/* Reserved. */</span>
<span id="L3532" class="ln">  3532&nbsp;&nbsp;</span>	Size      uint64
<span id="L3533" class="ln">  3533&nbsp;&nbsp;</span>	Addralign uint64
<span id="L3534" class="ln">  3534&nbsp;&nbsp;</span>}
<span id="L3535" class="ln">  3535&nbsp;&nbsp;</span>
<span id="L3536" class="ln">  3536&nbsp;&nbsp;</span><span class="comment">/*
<span id="L3537" class="ln">  3537&nbsp;&nbsp;</span> * Relocation entries.
<span id="L3538" class="ln">  3538&nbsp;&nbsp;</span> */</span>
<span id="L3539" class="ln">  3539&nbsp;&nbsp;</span>
<span id="L3540" class="ln">  3540&nbsp;&nbsp;</span><span class="comment">/* ELF64 relocations that don&#39;t need an addend field. */</span>
<span id="L3541" class="ln">  3541&nbsp;&nbsp;</span>type Rel64 struct {
<span id="L3542" class="ln">  3542&nbsp;&nbsp;</span>	Off  uint64 <span class="comment">/* Location to be relocated. */</span>
<span id="L3543" class="ln">  3543&nbsp;&nbsp;</span>	Info uint64 <span class="comment">/* Relocation type and symbol index. */</span>
<span id="L3544" class="ln">  3544&nbsp;&nbsp;</span>}
<span id="L3545" class="ln">  3545&nbsp;&nbsp;</span>
<span id="L3546" class="ln">  3546&nbsp;&nbsp;</span><span class="comment">/* ELF64 relocations that need an addend field. */</span>
<span id="L3547" class="ln">  3547&nbsp;&nbsp;</span>type Rela64 struct {
<span id="L3548" class="ln">  3548&nbsp;&nbsp;</span>	Off    uint64 <span class="comment">/* Location to be relocated. */</span>
<span id="L3549" class="ln">  3549&nbsp;&nbsp;</span>	Info   uint64 <span class="comment">/* Relocation type and symbol index. */</span>
<span id="L3550" class="ln">  3550&nbsp;&nbsp;</span>	Addend int64  <span class="comment">/* Addend. */</span>
<span id="L3551" class="ln">  3551&nbsp;&nbsp;</span>}
<span id="L3552" class="ln">  3552&nbsp;&nbsp;</span>
<span id="L3553" class="ln">  3553&nbsp;&nbsp;</span>func R_SYM64(info uint64) uint32    { return uint32(info &gt;&gt; 32) }
<span id="L3554" class="ln">  3554&nbsp;&nbsp;</span>func R_TYPE64(info uint64) uint32   { return uint32(info) }
<span id="L3555" class="ln">  3555&nbsp;&nbsp;</span>func R_INFO(sym, typ uint32) uint64 { return uint64(sym)&lt;&lt;32 | uint64(typ) }
<span id="L3556" class="ln">  3556&nbsp;&nbsp;</span>
<span id="L3557" class="ln">  3557&nbsp;&nbsp;</span><span class="comment">// ELF64 symbol table entries.</span>
<span id="L3558" class="ln">  3558&nbsp;&nbsp;</span>type Sym64 struct {
<span id="L3559" class="ln">  3559&nbsp;&nbsp;</span>	Name  uint32 <span class="comment">/* String table index of name. */</span>
<span id="L3560" class="ln">  3560&nbsp;&nbsp;</span>	Info  uint8  <span class="comment">/* Type and binding information. */</span>
<span id="L3561" class="ln">  3561&nbsp;&nbsp;</span>	Other uint8  <span class="comment">/* Reserved (not used). */</span>
<span id="L3562" class="ln">  3562&nbsp;&nbsp;</span>	Shndx uint16 <span class="comment">/* Section index of symbol. */</span>
<span id="L3563" class="ln">  3563&nbsp;&nbsp;</span>	Value uint64 <span class="comment">/* Symbol value. */</span>
<span id="L3564" class="ln">  3564&nbsp;&nbsp;</span>	Size  uint64 <span class="comment">/* Size of associated object. */</span>
<span id="L3565" class="ln">  3565&nbsp;&nbsp;</span>}
<span id="L3566" class="ln">  3566&nbsp;&nbsp;</span>
<span id="L3567" class="ln">  3567&nbsp;&nbsp;</span>const Sym64Size = 24
<span id="L3568" class="ln">  3568&nbsp;&nbsp;</span>
<span id="L3569" class="ln">  3569&nbsp;&nbsp;</span>type intName struct {
<span id="L3570" class="ln">  3570&nbsp;&nbsp;</span>	i uint32
<span id="L3571" class="ln">  3571&nbsp;&nbsp;</span>	s string
<span id="L3572" class="ln">  3572&nbsp;&nbsp;</span>}
<span id="L3573" class="ln">  3573&nbsp;&nbsp;</span>
<span id="L3574" class="ln">  3574&nbsp;&nbsp;</span>func stringName(i uint32, names []intName, goSyntax bool) string {
<span id="L3575" class="ln">  3575&nbsp;&nbsp;</span>	for _, n := range names {
<span id="L3576" class="ln">  3576&nbsp;&nbsp;</span>		if n.i == i {
<span id="L3577" class="ln">  3577&nbsp;&nbsp;</span>			if goSyntax {
<span id="L3578" class="ln">  3578&nbsp;&nbsp;</span>				return &#34;elf.&#34; + n.s
<span id="L3579" class="ln">  3579&nbsp;&nbsp;</span>			}
<span id="L3580" class="ln">  3580&nbsp;&nbsp;</span>			return n.s
<span id="L3581" class="ln">  3581&nbsp;&nbsp;</span>		}
<span id="L3582" class="ln">  3582&nbsp;&nbsp;</span>	}
<span id="L3583" class="ln">  3583&nbsp;&nbsp;</span>
<span id="L3584" class="ln">  3584&nbsp;&nbsp;</span>	<span class="comment">// second pass - look for smaller to add with.</span>
<span id="L3585" class="ln">  3585&nbsp;&nbsp;</span>	<span class="comment">// assume sorted already</span>
<span id="L3586" class="ln">  3586&nbsp;&nbsp;</span>	for j := len(names) - 1; j &gt;= 0; j-- {
<span id="L3587" class="ln">  3587&nbsp;&nbsp;</span>		n := names[j]
<span id="L3588" class="ln">  3588&nbsp;&nbsp;</span>		if n.i &lt; i {
<span id="L3589" class="ln">  3589&nbsp;&nbsp;</span>			s := n.s
<span id="L3590" class="ln">  3590&nbsp;&nbsp;</span>			if goSyntax {
<span id="L3591" class="ln">  3591&nbsp;&nbsp;</span>				s = &#34;elf.&#34; + s
<span id="L3592" class="ln">  3592&nbsp;&nbsp;</span>			}
<span id="L3593" class="ln">  3593&nbsp;&nbsp;</span>			return s + &#34;+&#34; + strconv.FormatUint(uint64(i-n.i), 10)
<span id="L3594" class="ln">  3594&nbsp;&nbsp;</span>		}
<span id="L3595" class="ln">  3595&nbsp;&nbsp;</span>	}
<span id="L3596" class="ln">  3596&nbsp;&nbsp;</span>
<span id="L3597" class="ln">  3597&nbsp;&nbsp;</span>	return strconv.FormatUint(uint64(i), 10)
<span id="L3598" class="ln">  3598&nbsp;&nbsp;</span>}
<span id="L3599" class="ln">  3599&nbsp;&nbsp;</span>
<span id="L3600" class="ln">  3600&nbsp;&nbsp;</span>func flagName(i uint32, names []intName, goSyntax bool) string {
<span id="L3601" class="ln">  3601&nbsp;&nbsp;</span>	s := &#34;&#34;
<span id="L3602" class="ln">  3602&nbsp;&nbsp;</span>	for _, n := range names {
<span id="L3603" class="ln">  3603&nbsp;&nbsp;</span>		if n.i&amp;i == n.i {
<span id="L3604" class="ln">  3604&nbsp;&nbsp;</span>			if len(s) &gt; 0 {
<span id="L3605" class="ln">  3605&nbsp;&nbsp;</span>				s += &#34;+&#34;
<span id="L3606" class="ln">  3606&nbsp;&nbsp;</span>			}
<span id="L3607" class="ln">  3607&nbsp;&nbsp;</span>			if goSyntax {
<span id="L3608" class="ln">  3608&nbsp;&nbsp;</span>				s += &#34;elf.&#34;
<span id="L3609" class="ln">  3609&nbsp;&nbsp;</span>			}
<span id="L3610" class="ln">  3610&nbsp;&nbsp;</span>			s += n.s
<span id="L3611" class="ln">  3611&nbsp;&nbsp;</span>			i -= n.i
<span id="L3612" class="ln">  3612&nbsp;&nbsp;</span>		}
<span id="L3613" class="ln">  3613&nbsp;&nbsp;</span>	}
<span id="L3614" class="ln">  3614&nbsp;&nbsp;</span>	if len(s) == 0 {
<span id="L3615" class="ln">  3615&nbsp;&nbsp;</span>		return &#34;0x&#34; + strconv.FormatUint(uint64(i), 16)
<span id="L3616" class="ln">  3616&nbsp;&nbsp;</span>	}
<span id="L3617" class="ln">  3617&nbsp;&nbsp;</span>	if i != 0 {
<span id="L3618" class="ln">  3618&nbsp;&nbsp;</span>		s += &#34;+0x&#34; + strconv.FormatUint(uint64(i), 16)
<span id="L3619" class="ln">  3619&nbsp;&nbsp;</span>	}
<span id="L3620" class="ln">  3620&nbsp;&nbsp;</span>	return s
<span id="L3621" class="ln">  3621&nbsp;&nbsp;</span>}
<span id="L3622" class="ln">  3622&nbsp;&nbsp;</span>
</pre><p><a href="elf.go?m=text">View as plain text</a></p>

<div id="footer">
Build version go1.22.2.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="http://localhost:8080/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->
</body>
</html>
