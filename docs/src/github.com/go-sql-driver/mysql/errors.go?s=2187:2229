<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>src/github.com/go-sql-driver/mysql/errors.go - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="../../../../lib/godoc/style.css">

<script>window.initFuncs = [];</script>
<script src="../../../../lib/godoc/jquery.js" defer></script>



<script>var goVersion = "go1.22.2";</script>
<script src="../../../../lib/godoc/godocs.js" defer></script>
</head>
<body>

<div id='lowframe' style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="../../../../index.html">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="../../../../index.html">GoDoc</a></div>
<a href="./errors.go?s=2187:2229#" id="menu-button"><span id="menu-button-arrow">&#9661;</span></a>
<form method="GET" action="http://localhost:8080/search">
<div id="menu">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/><path d="M0 0h24v24H0z" fill="none"/></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide">
<div class="container">


  <h1>
    Source file
    <a href="http://localhost:8080/src">src</a>/<a href="http://localhost:8080/src/github.com">github.com</a>/<a href="http://localhost:8080/src/github.com/go-sql-driver">go-sql-driver</a>/<a href="http://localhost:8080/src/github.com/go-sql-driver/mysql">mysql</a>/<span class="text-muted">errors.go</span>
  </h1>





  <h2>
    Documentation: <a href="http://localhost:8080/pkg/github.com/go-sql-driver/mysql">github.com/go-sql-driver/mysql</a>
  </h2>



<div id="nav"></div>


<script type='text/javascript'>document.ANALYSIS_DATA = null;</script>
<pre><span id="L1" class="ln">     1&nbsp;&nbsp;</span><span class="comment">// Go MySQL Driver - A MySQL-Driver for Go&#39;s database/sql package</span>
<span id="L2" class="ln">     2&nbsp;&nbsp;</span><span class="comment">//</span>
<span id="L3" class="ln">     3&nbsp;&nbsp;</span><span class="comment">// Copyright 2013 The Go-MySQL-Driver Authors. All rights reserved.</span>
<span id="L4" class="ln">     4&nbsp;&nbsp;</span><span class="comment">//</span>
<span id="L5" class="ln">     5&nbsp;&nbsp;</span><span class="comment">// This Source Code Form is subject to the terms of the Mozilla Public</span>
<span id="L6" class="ln">     6&nbsp;&nbsp;</span><span class="comment">// License, v. 2.0. If a copy of the MPL was not distributed with this file,</span>
<span id="L7" class="ln">     7&nbsp;&nbsp;</span><span class="comment">// You can obtain one at http://mozilla.org/MPL/2.0/.</span>
<span id="L8" class="ln">     8&nbsp;&nbsp;</span>
<span id="L9" class="ln">     9&nbsp;&nbsp;</span>package mysql
<span id="L10" class="ln">    10&nbsp;&nbsp;</span>
<span id="L11" class="ln">    11&nbsp;&nbsp;</span>import (
<span id="L12" class="ln">    12&nbsp;&nbsp;</span>	&#34;errors&#34;
<span id="L13" class="ln">    13&nbsp;&nbsp;</span>	&#34;fmt&#34;
<span id="L14" class="ln">    14&nbsp;&nbsp;</span>	&#34;log&#34;
<span id="L15" class="ln">    15&nbsp;&nbsp;</span>	&#34;os&#34;
<span id="L16" class="ln">    16&nbsp;&nbsp;</span>)
<span id="L17" class="ln">    17&nbsp;&nbsp;</span>
<span id="L18" class="ln">    18&nbsp;&nbsp;</span><span class="comment">// Various errors the driver might return. Can change between driver versions.</span>
<span id="L19" class="ln">    19&nbsp;&nbsp;</span>var (
<span id="L20" class="ln">    20&nbsp;&nbsp;</span>	ErrInvalidConn       = errors.New(&#34;invalid connection&#34;)
<span id="L21" class="ln">    21&nbsp;&nbsp;</span>	ErrMalformPkt        = errors.New(&#34;malformed packet&#34;)
<span id="L22" class="ln">    22&nbsp;&nbsp;</span>	ErrNoTLS             = errors.New(&#34;TLS requested but server does not support TLS&#34;)
<span id="L23" class="ln">    23&nbsp;&nbsp;</span>	ErrCleartextPassword = errors.New(&#34;this user requires clear text authentication. If you still want to use it, please add &#39;allowCleartextPasswords=1&#39; to your DSN&#34;)
<span id="L24" class="ln">    24&nbsp;&nbsp;</span>	ErrNativePassword    = errors.New(&#34;this user requires mysql native password authentication&#34;)
<span id="L25" class="ln">    25&nbsp;&nbsp;</span>	ErrOldPassword       = errors.New(&#34;this user requires old password authentication. If you still want to use it, please add &#39;allowOldPasswords=1&#39; to your DSN. See also https://github.com/go-sql-driver/mysql/wiki/old_passwords&#34;)
<span id="L26" class="ln">    26&nbsp;&nbsp;</span>	ErrUnknownPlugin     = errors.New(&#34;this authentication plugin is not supported&#34;)
<span id="L27" class="ln">    27&nbsp;&nbsp;</span>	ErrOldProtocol       = errors.New(&#34;MySQL server does not support required protocol 41+&#34;)
<span id="L28" class="ln">    28&nbsp;&nbsp;</span>	ErrPktSync           = errors.New(&#34;commands out of sync. You can&#39;t run this command now&#34;)
<span id="L29" class="ln">    29&nbsp;&nbsp;</span>	ErrPktSyncMul        = errors.New(&#34;commands out of sync. Did you run multiple statements at once?&#34;)
<span id="L30" class="ln">    30&nbsp;&nbsp;</span>	ErrPktTooLarge       = errors.New(&#34;packet for query is too large. Try adjusting the `Config.MaxAllowedPacket`&#34;)
<span id="L31" class="ln">    31&nbsp;&nbsp;</span>	ErrBusyBuffer        = errors.New(&#34;busy buffer&#34;)
<span id="L32" class="ln">    32&nbsp;&nbsp;</span>
<span id="L33" class="ln">    33&nbsp;&nbsp;</span>	<span class="comment">// errBadConnNoWrite is used for connection errors where nothing was sent to the database yet.</span>
<span id="L34" class="ln">    34&nbsp;&nbsp;</span>	<span class="comment">// If this happens first in a function starting a database interaction, it should be replaced by driver.ErrBadConn</span>
<span id="L35" class="ln">    35&nbsp;&nbsp;</span>	<span class="comment">// to trigger a resend.</span>
<span id="L36" class="ln">    36&nbsp;&nbsp;</span>	<span class="comment">// See https://github.com/go-sql-driver/mysql/pull/302</span>
<span id="L37" class="ln">    37&nbsp;&nbsp;</span>	errBadConnNoWrite = errors.New(&#34;bad connection&#34;)
<span id="L38" class="ln">    38&nbsp;&nbsp;</span>)
<span id="L39" class="ln">    39&nbsp;&nbsp;</span>
<span id="L40" class="ln">    40&nbsp;&nbsp;</span>var defaultLogger = Logger(log.New(os.Stderr, &#34;[mysql] &#34;, log.Ldate|log.Ltime|log.Lshortfile))
<span id="L41" class="ln">    41&nbsp;&nbsp;</span>
<span id="L42" class="ln">    42&nbsp;&nbsp;</span><span class="comment">// Logger is used to log critical error messages.</span>
<span id="L43" class="ln">    43&nbsp;&nbsp;</span><span class="selection">type Logger interface {
<span id="L44" class="ln">    44&nbsp;&nbsp;</span>	Print(v ...any)
<span id="L45" class="ln">    45&nbsp;&nbsp;</span>}</span>
<span id="L46" class="ln">    46&nbsp;&nbsp;</span>
<span id="L47" class="ln">    47&nbsp;&nbsp;</span><span class="comment">// NopLogger is a nop implementation of the Logger interface.</span>
<span id="L48" class="ln">    48&nbsp;&nbsp;</span>type NopLogger struct{}
<span id="L49" class="ln">    49&nbsp;&nbsp;</span>
<span id="L50" class="ln">    50&nbsp;&nbsp;</span><span class="comment">// Print implements Logger interface.</span>
<span id="L51" class="ln">    51&nbsp;&nbsp;</span>func (nl *NopLogger) Print(_ ...any) {}
<span id="L52" class="ln">    52&nbsp;&nbsp;</span>
<span id="L53" class="ln">    53&nbsp;&nbsp;</span><span class="comment">// SetLogger is used to set the default logger for critical errors.</span>
<span id="L54" class="ln">    54&nbsp;&nbsp;</span><span class="comment">// The initial logger is os.Stderr.</span>
<span id="L55" class="ln">    55&nbsp;&nbsp;</span>func SetLogger(logger Logger) error {
<span id="L56" class="ln">    56&nbsp;&nbsp;</span>	if logger == nil {
<span id="L57" class="ln">    57&nbsp;&nbsp;</span>		return errors.New(&#34;logger is nil&#34;)
<span id="L58" class="ln">    58&nbsp;&nbsp;</span>	}
<span id="L59" class="ln">    59&nbsp;&nbsp;</span>	defaultLogger = logger
<span id="L60" class="ln">    60&nbsp;&nbsp;</span>	return nil
<span id="L61" class="ln">    61&nbsp;&nbsp;</span>}
<span id="L62" class="ln">    62&nbsp;&nbsp;</span>
<span id="L63" class="ln">    63&nbsp;&nbsp;</span><span class="comment">// MySQLError is an error type which represents a single MySQL error</span>
<span id="L64" class="ln">    64&nbsp;&nbsp;</span>type MySQLError struct {
<span id="L65" class="ln">    65&nbsp;&nbsp;</span>	Number   uint16
<span id="L66" class="ln">    66&nbsp;&nbsp;</span>	SQLState [5]byte
<span id="L67" class="ln">    67&nbsp;&nbsp;</span>	Message  string
<span id="L68" class="ln">    68&nbsp;&nbsp;</span>}
<span id="L69" class="ln">    69&nbsp;&nbsp;</span>
<span id="L70" class="ln">    70&nbsp;&nbsp;</span>func (me *MySQLError) Error() string {
<span id="L71" class="ln">    71&nbsp;&nbsp;</span>	if me.SQLState != [5]byte{} {
<span id="L72" class="ln">    72&nbsp;&nbsp;</span>		return fmt.Sprintf(&#34;Error %d (%s): %s&#34;, me.Number, me.SQLState, me.Message)
<span id="L73" class="ln">    73&nbsp;&nbsp;</span>	}
<span id="L74" class="ln">    74&nbsp;&nbsp;</span>
<span id="L75" class="ln">    75&nbsp;&nbsp;</span>	return fmt.Sprintf(&#34;Error %d: %s&#34;, me.Number, me.Message)
<span id="L76" class="ln">    76&nbsp;&nbsp;</span>}
<span id="L77" class="ln">    77&nbsp;&nbsp;</span>
<span id="L78" class="ln">    78&nbsp;&nbsp;</span>func (me *MySQLError) Is(err error) bool {
<span id="L79" class="ln">    79&nbsp;&nbsp;</span>	if merr, ok := err.(*MySQLError); ok {
<span id="L80" class="ln">    80&nbsp;&nbsp;</span>		return merr.Number == me.Number
<span id="L81" class="ln">    81&nbsp;&nbsp;</span>	}
<span id="L82" class="ln">    82&nbsp;&nbsp;</span>	return false
<span id="L83" class="ln">    83&nbsp;&nbsp;</span>}
<span id="L84" class="ln">    84&nbsp;&nbsp;</span>
</pre><p><a href="errors.go?m=text">View as plain text</a></p>

<div id="footer">
Build version go1.22.2.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="http://localhost:8080/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->
</body>
</html>
