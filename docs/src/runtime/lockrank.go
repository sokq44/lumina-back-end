<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="theme-color" content="#375EAB">

  <title>src/runtime/lockrank.go - Go Documentation Server</title>

<link type="text/css" rel="stylesheet" href="../../lib/godoc/style.css">

<script>window.initFuncs = [];</script>
<script src="../../lib/godoc/jquery.js" defer></script>



<script>var goVersion = "go1.22.2";</script>
<script src="../../lib/godoc/godocs.js" defer></script>
</head>
<body>

<div id='lowframe' style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">
<div class="top-heading" id="heading-wide"><a href="../../index.html">Go Documentation Server</a></div>
<div class="top-heading" id="heading-narrow"><a href="../../index.html">GoDoc</a></div>
<a href="lockrank.go#" id="menu-button"><span id="menu-button-arrow">&#9661;</span></a>
<form method="GET" action="http://localhost:8080/search">
<div id="menu">

<span class="search-box"><input type="search" id="search" name="q" placeholder="Search" aria-label="Search" required><button type="submit"><span><!-- magnifying glass: --><svg width="24" height="24" viewBox="0 0 24 24"><title>submit search</title><path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/><path d="M0 0h24v24H0z" fill="none"/></svg></span></button></span>
</div>
</form>

</div></div>



<div id="page" class="wide">
<div class="container">


  <h1>
    Source file
    <a href="http://localhost:8080/src">src</a>/<a href="http://localhost:8080/src/runtime">runtime</a>/<span class="text-muted">lockrank.go</span>
  </h1>





  <h2>
    Documentation: <a href="http://localhost:8080/pkg/runtime">runtime</a>
  </h2>



<div id="nav"></div>


<script type='text/javascript'>document.ANALYSIS_DATA = null;</script>
<pre><span id="L1" class="ln">     1&nbsp;&nbsp;</span><span class="comment">// Code generated by mklockrank.go; DO NOT EDIT.</span>
<span id="L2" class="ln">     2&nbsp;&nbsp;</span>
<span id="L3" class="ln">     3&nbsp;&nbsp;</span>package runtime
<span id="L4" class="ln">     4&nbsp;&nbsp;</span>
<span id="L5" class="ln">     5&nbsp;&nbsp;</span>type lockRank int
<span id="L6" class="ln">     6&nbsp;&nbsp;</span>
<span id="L7" class="ln">     7&nbsp;&nbsp;</span><span class="comment">// Constants representing the ranks of all non-leaf runtime locks, in rank order.</span>
<span id="L8" class="ln">     8&nbsp;&nbsp;</span><span class="comment">// Locks with lower rank must be taken before locks with higher rank,</span>
<span id="L9" class="ln">     9&nbsp;&nbsp;</span><span class="comment">// in addition to satisfying the partial order in lockPartialOrder.</span>
<span id="L10" class="ln">    10&nbsp;&nbsp;</span><span class="comment">// A few ranks allow self-cycles, which are specified in lockPartialOrder.</span>
<span id="L11" class="ln">    11&nbsp;&nbsp;</span>const (
<span id="L12" class="ln">    12&nbsp;&nbsp;</span>	lockRankUnknown lockRank = iota
<span id="L13" class="ln">    13&nbsp;&nbsp;</span>
<span id="L14" class="ln">    14&nbsp;&nbsp;</span>	lockRankSysmon
<span id="L15" class="ln">    15&nbsp;&nbsp;</span>	lockRankScavenge
<span id="L16" class="ln">    16&nbsp;&nbsp;</span>	lockRankForcegc
<span id="L17" class="ln">    17&nbsp;&nbsp;</span>	lockRankDefer
<span id="L18" class="ln">    18&nbsp;&nbsp;</span>	lockRankSweepWaiters
<span id="L19" class="ln">    19&nbsp;&nbsp;</span>	lockRankAssistQueue
<span id="L20" class="ln">    20&nbsp;&nbsp;</span>	lockRankSweep
<span id="L21" class="ln">    21&nbsp;&nbsp;</span>	lockRankTestR
<span id="L22" class="ln">    22&nbsp;&nbsp;</span>	lockRankTestW
<span id="L23" class="ln">    23&nbsp;&nbsp;</span>	lockRankAllocmW
<span id="L24" class="ln">    24&nbsp;&nbsp;</span>	lockRankExecW
<span id="L25" class="ln">    25&nbsp;&nbsp;</span>	lockRankCpuprof
<span id="L26" class="ln">    26&nbsp;&nbsp;</span>	lockRankPollDesc
<span id="L27" class="ln">    27&nbsp;&nbsp;</span>	lockRankWakeableSleep
<span id="L28" class="ln">    28&nbsp;&nbsp;</span>	<span class="comment">// SCHED</span>
<span id="L29" class="ln">    29&nbsp;&nbsp;</span>	lockRankAllocmR
<span id="L30" class="ln">    30&nbsp;&nbsp;</span>	lockRankExecR
<span id="L31" class="ln">    31&nbsp;&nbsp;</span>	lockRankSched
<span id="L32" class="ln">    32&nbsp;&nbsp;</span>	lockRankAllg
<span id="L33" class="ln">    33&nbsp;&nbsp;</span>	lockRankAllp
<span id="L34" class="ln">    34&nbsp;&nbsp;</span>	lockRankTimers
<span id="L35" class="ln">    35&nbsp;&nbsp;</span>	lockRankNetpollInit
<span id="L36" class="ln">    36&nbsp;&nbsp;</span>	lockRankHchan
<span id="L37" class="ln">    37&nbsp;&nbsp;</span>	lockRankNotifyList
<span id="L38" class="ln">    38&nbsp;&nbsp;</span>	lockRankSudog
<span id="L39" class="ln">    39&nbsp;&nbsp;</span>	lockRankRoot
<span id="L40" class="ln">    40&nbsp;&nbsp;</span>	lockRankItab
<span id="L41" class="ln">    41&nbsp;&nbsp;</span>	lockRankReflectOffs
<span id="L42" class="ln">    42&nbsp;&nbsp;</span>	lockRankUserArenaState
<span id="L43" class="ln">    43&nbsp;&nbsp;</span>	<span class="comment">// TRACEGLOBAL</span>
<span id="L44" class="ln">    44&nbsp;&nbsp;</span>	lockRankTraceBuf
<span id="L45" class="ln">    45&nbsp;&nbsp;</span>	lockRankTraceStrings
<span id="L46" class="ln">    46&nbsp;&nbsp;</span>	<span class="comment">// MALLOC</span>
<span id="L47" class="ln">    47&nbsp;&nbsp;</span>	lockRankFin
<span id="L48" class="ln">    48&nbsp;&nbsp;</span>	lockRankSpanSetSpine
<span id="L49" class="ln">    49&nbsp;&nbsp;</span>	lockRankMspanSpecial
<span id="L50" class="ln">    50&nbsp;&nbsp;</span>	<span class="comment">// MPROF</span>
<span id="L51" class="ln">    51&nbsp;&nbsp;</span>	lockRankGcBitsArenas
<span id="L52" class="ln">    52&nbsp;&nbsp;</span>	lockRankProfInsert
<span id="L53" class="ln">    53&nbsp;&nbsp;</span>	lockRankProfBlock
<span id="L54" class="ln">    54&nbsp;&nbsp;</span>	lockRankProfMemActive
<span id="L55" class="ln">    55&nbsp;&nbsp;</span>	lockRankProfMemFuture
<span id="L56" class="ln">    56&nbsp;&nbsp;</span>	<span class="comment">// STACKGROW</span>
<span id="L57" class="ln">    57&nbsp;&nbsp;</span>	lockRankGscan
<span id="L58" class="ln">    58&nbsp;&nbsp;</span>	lockRankStackpool
<span id="L59" class="ln">    59&nbsp;&nbsp;</span>	lockRankStackLarge
<span id="L60" class="ln">    60&nbsp;&nbsp;</span>	lockRankHchanLeaf
<span id="L61" class="ln">    61&nbsp;&nbsp;</span>	<span class="comment">// WB</span>
<span id="L62" class="ln">    62&nbsp;&nbsp;</span>	lockRankWbufSpans
<span id="L63" class="ln">    63&nbsp;&nbsp;</span>	lockRankMheap
<span id="L64" class="ln">    64&nbsp;&nbsp;</span>	lockRankMheapSpecial
<span id="L65" class="ln">    65&nbsp;&nbsp;</span>	lockRankGlobalAlloc
<span id="L66" class="ln">    66&nbsp;&nbsp;</span>	<span class="comment">// TRACE</span>
<span id="L67" class="ln">    67&nbsp;&nbsp;</span>	lockRankTrace
<span id="L68" class="ln">    68&nbsp;&nbsp;</span>	lockRankTraceStackTab
<span id="L69" class="ln">    69&nbsp;&nbsp;</span>	lockRankPanic
<span id="L70" class="ln">    70&nbsp;&nbsp;</span>	lockRankDeadlock
<span id="L71" class="ln">    71&nbsp;&nbsp;</span>	lockRankRaceFini
<span id="L72" class="ln">    72&nbsp;&nbsp;</span>	lockRankAllocmRInternal
<span id="L73" class="ln">    73&nbsp;&nbsp;</span>	lockRankExecRInternal
<span id="L74" class="ln">    74&nbsp;&nbsp;</span>	lockRankTestRInternal
<span id="L75" class="ln">    75&nbsp;&nbsp;</span>)
<span id="L76" class="ln">    76&nbsp;&nbsp;</span>
<span id="L77" class="ln">    77&nbsp;&nbsp;</span><span class="comment">// lockRankLeafRank is the rank of lock that does not have a declared rank,</span>
<span id="L78" class="ln">    78&nbsp;&nbsp;</span><span class="comment">// and hence is a leaf lock.</span>
<span id="L79" class="ln">    79&nbsp;&nbsp;</span>const lockRankLeafRank lockRank = 1000
<span id="L80" class="ln">    80&nbsp;&nbsp;</span>
<span id="L81" class="ln">    81&nbsp;&nbsp;</span><span class="comment">// lockNames gives the names associated with each of the above ranks.</span>
<span id="L82" class="ln">    82&nbsp;&nbsp;</span>var lockNames = []string{
<span id="L83" class="ln">    83&nbsp;&nbsp;</span>	lockRankSysmon:          &#34;sysmon&#34;,
<span id="L84" class="ln">    84&nbsp;&nbsp;</span>	lockRankScavenge:        &#34;scavenge&#34;,
<span id="L85" class="ln">    85&nbsp;&nbsp;</span>	lockRankForcegc:         &#34;forcegc&#34;,
<span id="L86" class="ln">    86&nbsp;&nbsp;</span>	lockRankDefer:           &#34;defer&#34;,
<span id="L87" class="ln">    87&nbsp;&nbsp;</span>	lockRankSweepWaiters:    &#34;sweepWaiters&#34;,
<span id="L88" class="ln">    88&nbsp;&nbsp;</span>	lockRankAssistQueue:     &#34;assistQueue&#34;,
<span id="L89" class="ln">    89&nbsp;&nbsp;</span>	lockRankSweep:           &#34;sweep&#34;,
<span id="L90" class="ln">    90&nbsp;&nbsp;</span>	lockRankTestR:           &#34;testR&#34;,
<span id="L91" class="ln">    91&nbsp;&nbsp;</span>	lockRankTestW:           &#34;testW&#34;,
<span id="L92" class="ln">    92&nbsp;&nbsp;</span>	lockRankAllocmW:         &#34;allocmW&#34;,
<span id="L93" class="ln">    93&nbsp;&nbsp;</span>	lockRankExecW:           &#34;execW&#34;,
<span id="L94" class="ln">    94&nbsp;&nbsp;</span>	lockRankCpuprof:         &#34;cpuprof&#34;,
<span id="L95" class="ln">    95&nbsp;&nbsp;</span>	lockRankPollDesc:        &#34;pollDesc&#34;,
<span id="L96" class="ln">    96&nbsp;&nbsp;</span>	lockRankWakeableSleep:   &#34;wakeableSleep&#34;,
<span id="L97" class="ln">    97&nbsp;&nbsp;</span>	lockRankAllocmR:         &#34;allocmR&#34;,
<span id="L98" class="ln">    98&nbsp;&nbsp;</span>	lockRankExecR:           &#34;execR&#34;,
<span id="L99" class="ln">    99&nbsp;&nbsp;</span>	lockRankSched:           &#34;sched&#34;,
<span id="L100" class="ln">   100&nbsp;&nbsp;</span>	lockRankAllg:            &#34;allg&#34;,
<span id="L101" class="ln">   101&nbsp;&nbsp;</span>	lockRankAllp:            &#34;allp&#34;,
<span id="L102" class="ln">   102&nbsp;&nbsp;</span>	lockRankTimers:          &#34;timers&#34;,
<span id="L103" class="ln">   103&nbsp;&nbsp;</span>	lockRankNetpollInit:     &#34;netpollInit&#34;,
<span id="L104" class="ln">   104&nbsp;&nbsp;</span>	lockRankHchan:           &#34;hchan&#34;,
<span id="L105" class="ln">   105&nbsp;&nbsp;</span>	lockRankNotifyList:      &#34;notifyList&#34;,
<span id="L106" class="ln">   106&nbsp;&nbsp;</span>	lockRankSudog:           &#34;sudog&#34;,
<span id="L107" class="ln">   107&nbsp;&nbsp;</span>	lockRankRoot:            &#34;root&#34;,
<span id="L108" class="ln">   108&nbsp;&nbsp;</span>	lockRankItab:            &#34;itab&#34;,
<span id="L109" class="ln">   109&nbsp;&nbsp;</span>	lockRankReflectOffs:     &#34;reflectOffs&#34;,
<span id="L110" class="ln">   110&nbsp;&nbsp;</span>	lockRankUserArenaState:  &#34;userArenaState&#34;,
<span id="L111" class="ln">   111&nbsp;&nbsp;</span>	lockRankTraceBuf:        &#34;traceBuf&#34;,
<span id="L112" class="ln">   112&nbsp;&nbsp;</span>	lockRankTraceStrings:    &#34;traceStrings&#34;,
<span id="L113" class="ln">   113&nbsp;&nbsp;</span>	lockRankFin:             &#34;fin&#34;,
<span id="L114" class="ln">   114&nbsp;&nbsp;</span>	lockRankSpanSetSpine:    &#34;spanSetSpine&#34;,
<span id="L115" class="ln">   115&nbsp;&nbsp;</span>	lockRankMspanSpecial:    &#34;mspanSpecial&#34;,
<span id="L116" class="ln">   116&nbsp;&nbsp;</span>	lockRankGcBitsArenas:    &#34;gcBitsArenas&#34;,
<span id="L117" class="ln">   117&nbsp;&nbsp;</span>	lockRankProfInsert:      &#34;profInsert&#34;,
<span id="L118" class="ln">   118&nbsp;&nbsp;</span>	lockRankProfBlock:       &#34;profBlock&#34;,
<span id="L119" class="ln">   119&nbsp;&nbsp;</span>	lockRankProfMemActive:   &#34;profMemActive&#34;,
<span id="L120" class="ln">   120&nbsp;&nbsp;</span>	lockRankProfMemFuture:   &#34;profMemFuture&#34;,
<span id="L121" class="ln">   121&nbsp;&nbsp;</span>	lockRankGscan:           &#34;gscan&#34;,
<span id="L122" class="ln">   122&nbsp;&nbsp;</span>	lockRankStackpool:       &#34;stackpool&#34;,
<span id="L123" class="ln">   123&nbsp;&nbsp;</span>	lockRankStackLarge:      &#34;stackLarge&#34;,
<span id="L124" class="ln">   124&nbsp;&nbsp;</span>	lockRankHchanLeaf:       &#34;hchanLeaf&#34;,
<span id="L125" class="ln">   125&nbsp;&nbsp;</span>	lockRankWbufSpans:       &#34;wbufSpans&#34;,
<span id="L126" class="ln">   126&nbsp;&nbsp;</span>	lockRankMheap:           &#34;mheap&#34;,
<span id="L127" class="ln">   127&nbsp;&nbsp;</span>	lockRankMheapSpecial:    &#34;mheapSpecial&#34;,
<span id="L128" class="ln">   128&nbsp;&nbsp;</span>	lockRankGlobalAlloc:     &#34;globalAlloc&#34;,
<span id="L129" class="ln">   129&nbsp;&nbsp;</span>	lockRankTrace:           &#34;trace&#34;,
<span id="L130" class="ln">   130&nbsp;&nbsp;</span>	lockRankTraceStackTab:   &#34;traceStackTab&#34;,
<span id="L131" class="ln">   131&nbsp;&nbsp;</span>	lockRankPanic:           &#34;panic&#34;,
<span id="L132" class="ln">   132&nbsp;&nbsp;</span>	lockRankDeadlock:        &#34;deadlock&#34;,
<span id="L133" class="ln">   133&nbsp;&nbsp;</span>	lockRankRaceFini:        &#34;raceFini&#34;,
<span id="L134" class="ln">   134&nbsp;&nbsp;</span>	lockRankAllocmRInternal: &#34;allocmRInternal&#34;,
<span id="L135" class="ln">   135&nbsp;&nbsp;</span>	lockRankExecRInternal:   &#34;execRInternal&#34;,
<span id="L136" class="ln">   136&nbsp;&nbsp;</span>	lockRankTestRInternal:   &#34;testRInternal&#34;,
<span id="L137" class="ln">   137&nbsp;&nbsp;</span>}
<span id="L138" class="ln">   138&nbsp;&nbsp;</span>
<span id="L139" class="ln">   139&nbsp;&nbsp;</span>func (rank lockRank) String() string {
<span id="L140" class="ln">   140&nbsp;&nbsp;</span>	if rank == 0 {
<span id="L141" class="ln">   141&nbsp;&nbsp;</span>		return &#34;UNKNOWN&#34;
<span id="L142" class="ln">   142&nbsp;&nbsp;</span>	}
<span id="L143" class="ln">   143&nbsp;&nbsp;</span>	if rank == lockRankLeafRank {
<span id="L144" class="ln">   144&nbsp;&nbsp;</span>		return &#34;LEAF&#34;
<span id="L145" class="ln">   145&nbsp;&nbsp;</span>	}
<span id="L146" class="ln">   146&nbsp;&nbsp;</span>	if rank &lt; 0 || int(rank) &gt;= len(lockNames) {
<span id="L147" class="ln">   147&nbsp;&nbsp;</span>		return &#34;BAD RANK&#34;
<span id="L148" class="ln">   148&nbsp;&nbsp;</span>	}
<span id="L149" class="ln">   149&nbsp;&nbsp;</span>	return lockNames[rank]
<span id="L150" class="ln">   150&nbsp;&nbsp;</span>}
<span id="L151" class="ln">   151&nbsp;&nbsp;</span>
<span id="L152" class="ln">   152&nbsp;&nbsp;</span><span class="comment">// lockPartialOrder is the transitive closure of the lock rank graph.</span>
<span id="L153" class="ln">   153&nbsp;&nbsp;</span><span class="comment">// An entry for rank X lists all of the ranks that can already be held</span>
<span id="L154" class="ln">   154&nbsp;&nbsp;</span><span class="comment">// when rank X is acquired.</span>
<span id="L155" class="ln">   155&nbsp;&nbsp;</span><span class="comment">//</span>
<span id="L156" class="ln">   156&nbsp;&nbsp;</span><span class="comment">// Lock ranks that allow self-cycles list themselves.</span>
<span id="L157" class="ln">   157&nbsp;&nbsp;</span>var lockPartialOrder [][]lockRank = [][]lockRank{
<span id="L158" class="ln">   158&nbsp;&nbsp;</span>	lockRankSysmon:          {},
<span id="L159" class="ln">   159&nbsp;&nbsp;</span>	lockRankScavenge:        {lockRankSysmon},
<span id="L160" class="ln">   160&nbsp;&nbsp;</span>	lockRankForcegc:         {lockRankSysmon},
<span id="L161" class="ln">   161&nbsp;&nbsp;</span>	lockRankDefer:           {},
<span id="L162" class="ln">   162&nbsp;&nbsp;</span>	lockRankSweepWaiters:    {},
<span id="L163" class="ln">   163&nbsp;&nbsp;</span>	lockRankAssistQueue:     {},
<span id="L164" class="ln">   164&nbsp;&nbsp;</span>	lockRankSweep:           {},
<span id="L165" class="ln">   165&nbsp;&nbsp;</span>	lockRankTestR:           {},
<span id="L166" class="ln">   166&nbsp;&nbsp;</span>	lockRankTestW:           {},
<span id="L167" class="ln">   167&nbsp;&nbsp;</span>	lockRankAllocmW:         {},
<span id="L168" class="ln">   168&nbsp;&nbsp;</span>	lockRankExecW:           {},
<span id="L169" class="ln">   169&nbsp;&nbsp;</span>	lockRankCpuprof:         {},
<span id="L170" class="ln">   170&nbsp;&nbsp;</span>	lockRankPollDesc:        {},
<span id="L171" class="ln">   171&nbsp;&nbsp;</span>	lockRankWakeableSleep:   {},
<span id="L172" class="ln">   172&nbsp;&nbsp;</span>	lockRankAllocmR:         {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep},
<span id="L173" class="ln">   173&nbsp;&nbsp;</span>	lockRankExecR:           {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep},
<span id="L174" class="ln">   174&nbsp;&nbsp;</span>	lockRankSched:           {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR},
<span id="L175" class="ln">   175&nbsp;&nbsp;</span>	lockRankAllg:            {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched},
<span id="L176" class="ln">   176&nbsp;&nbsp;</span>	lockRankAllp:            {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched},
<span id="L177" class="ln">   177&nbsp;&nbsp;</span>	lockRankTimers:          {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllp, lockRankTimers},
<span id="L178" class="ln">   178&nbsp;&nbsp;</span>	lockRankNetpollInit:     {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllp, lockRankTimers},
<span id="L179" class="ln">   179&nbsp;&nbsp;</span>	lockRankHchan:           {lockRankSysmon, lockRankScavenge, lockRankSweep, lockRankTestR, lockRankWakeableSleep, lockRankHchan},
<span id="L180" class="ln">   180&nbsp;&nbsp;</span>	lockRankNotifyList:      {},
<span id="L181" class="ln">   181&nbsp;&nbsp;</span>	lockRankSudog:           {lockRankSysmon, lockRankScavenge, lockRankSweep, lockRankTestR, lockRankWakeableSleep, lockRankHchan, lockRankNotifyList},
<span id="L182" class="ln">   182&nbsp;&nbsp;</span>	lockRankRoot:            {},
<span id="L183" class="ln">   183&nbsp;&nbsp;</span>	lockRankItab:            {},
<span id="L184" class="ln">   184&nbsp;&nbsp;</span>	lockRankReflectOffs:     {lockRankItab},
<span id="L185" class="ln">   185&nbsp;&nbsp;</span>	lockRankUserArenaState:  {},
<span id="L186" class="ln">   186&nbsp;&nbsp;</span>	lockRankTraceBuf:        {lockRankSysmon, lockRankScavenge},
<span id="L187" class="ln">   187&nbsp;&nbsp;</span>	lockRankTraceStrings:    {lockRankSysmon, lockRankScavenge, lockRankTraceBuf},
<span id="L188" class="ln">   188&nbsp;&nbsp;</span>	lockRankFin:             {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L189" class="ln">   189&nbsp;&nbsp;</span>	lockRankSpanSetSpine:    {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L190" class="ln">   190&nbsp;&nbsp;</span>	lockRankMspanSpecial:    {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L191" class="ln">   191&nbsp;&nbsp;</span>	lockRankGcBitsArenas:    {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankMspanSpecial},
<span id="L192" class="ln">   192&nbsp;&nbsp;</span>	lockRankProfInsert:      {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L193" class="ln">   193&nbsp;&nbsp;</span>	lockRankProfBlock:       {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L194" class="ln">   194&nbsp;&nbsp;</span>	lockRankProfMemActive:   {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings},
<span id="L195" class="ln">   195&nbsp;&nbsp;</span>	lockRankProfMemFuture:   {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankHchan, lockRankNotifyList, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankProfMemActive},
<span id="L196" class="ln">   196&nbsp;&nbsp;</span>	lockRankGscan:           {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture},
<span id="L197" class="ln">   197&nbsp;&nbsp;</span>	lockRankStackpool:       {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan},
<span id="L198" class="ln">   198&nbsp;&nbsp;</span>	lockRankStackLarge:      {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan},
<span id="L199" class="ln">   199&nbsp;&nbsp;</span>	lockRankHchanLeaf:       {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankHchanLeaf},
<span id="L200" class="ln">   200&nbsp;&nbsp;</span>	lockRankWbufSpans:       {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan},
<span id="L201" class="ln">   201&nbsp;&nbsp;</span>	lockRankMheap:           {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankStackpool, lockRankStackLarge, lockRankWbufSpans},
<span id="L202" class="ln">   202&nbsp;&nbsp;</span>	lockRankMheapSpecial:    {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankStackpool, lockRankStackLarge, lockRankWbufSpans, lockRankMheap},
<span id="L203" class="ln">   203&nbsp;&nbsp;</span>	lockRankGlobalAlloc:     {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankStackpool, lockRankStackLarge, lockRankWbufSpans, lockRankMheap, lockRankMheapSpecial},
<span id="L204" class="ln">   204&nbsp;&nbsp;</span>	lockRankTrace:           {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankStackpool, lockRankStackLarge, lockRankWbufSpans, lockRankMheap},
<span id="L205" class="ln">   205&nbsp;&nbsp;</span>	lockRankTraceStackTab:   {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankDefer, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR, lockRankExecR, lockRankSched, lockRankAllg, lockRankAllp, lockRankTimers, lockRankNetpollInit, lockRankHchan, lockRankNotifyList, lockRankSudog, lockRankRoot, lockRankItab, lockRankReflectOffs, lockRankUserArenaState, lockRankTraceBuf, lockRankTraceStrings, lockRankFin, lockRankSpanSetSpine, lockRankMspanSpecial, lockRankGcBitsArenas, lockRankProfInsert, lockRankProfBlock, lockRankProfMemActive, lockRankProfMemFuture, lockRankGscan, lockRankStackpool, lockRankStackLarge, lockRankWbufSpans, lockRankMheap, lockRankTrace},
<span id="L206" class="ln">   206&nbsp;&nbsp;</span>	lockRankPanic:           {},
<span id="L207" class="ln">   207&nbsp;&nbsp;</span>	lockRankDeadlock:        {lockRankPanic, lockRankDeadlock},
<span id="L208" class="ln">   208&nbsp;&nbsp;</span>	lockRankRaceFini:        {lockRankPanic},
<span id="L209" class="ln">   209&nbsp;&nbsp;</span>	lockRankAllocmRInternal: {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankAllocmW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankAllocmR},
<span id="L210" class="ln">   210&nbsp;&nbsp;</span>	lockRankExecRInternal:   {lockRankSysmon, lockRankScavenge, lockRankForcegc, lockRankSweepWaiters, lockRankAssistQueue, lockRankSweep, lockRankTestR, lockRankExecW, lockRankCpuprof, lockRankPollDesc, lockRankWakeableSleep, lockRankExecR},
<span id="L211" class="ln">   211&nbsp;&nbsp;</span>	lockRankTestRInternal:   {lockRankTestR, lockRankTestW},
<span id="L212" class="ln">   212&nbsp;&nbsp;</span>}
<span id="L213" class="ln">   213&nbsp;&nbsp;</span>
</pre><p><a href="lockrank.go?m=text">View as plain text</a></p>

<div id="footer">
Build version go1.22.2.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="http://localhost:8080/LICENSE">BSD license</a>.<br>
<a href="https://golang.org/doc/tos.html">Terms of Service</a> |
<a href="https://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>

</div><!-- .container -->
</div><!-- #page -->
</body>
</html>
